/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(32);
	
	var _reactRedux = __webpack_require__(170);
	
	var _reactHotLoader = __webpack_require__(212);
	
	var _PatientApp = __webpack_require__(216);
	
	var _PatientApp2 = _interopRequireDefault(_PatientApp);
	
	var _onsenui = __webpack_require__(217);
	
	var _onsenui2 = _interopRequireDefault(_onsenui);
	
	__webpack_require__(220);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import './stylus/index.styl';
	
	// const logger = createLogger();
	
	// const store = createStore(weatherApp,
	// window.devToolsExtension ? window.devToolsExtension() : f => f,
	// process.env.NODE_ENV === 'production'
	// ? applyMiddleware(thunk)
	// : applyMiddleware(thunk, logger)
	// );
	
	// import {createStore, applyMiddleware} from 'redux';
	// import thunk from 'redux-thunk';
	// import createLogger from 'redux-logger';
	var rootElement = document.getElementById('root');
	
	// import weatherApp from './reducers'; // this is loaded when
	// creating a redux store.
	// to initialize the application
	
	
	_onsenui2.default.ready(function () {
	  return (0, _reactDom.render)(_react2.default.createElement(
	    _reactHotLoader.AppContainer,
	    null,
	    _react2.default.createElement(
	      _reactRedux.Provider,
	      null,
	      _react2.default.createElement(_PatientApp2.default, null)
	    )
	  ), rootElement);
	});
	
	if (false) {
	  module.hot.accept('./components/PatientApp', function () {
	    var NextApp = require('./components/PatientApp').default;
	    (0, _reactDom.render)(_react2.default.createElement(
	      _reactHotLoader.AppContainer,
	      null,
	      _react2.default.createElement(
	        _reactRedux.Provider,
	        null,
	        _react2.default.createElement(NextApp, null)
	      )
	    ), rootElement);
	  });
	}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(3);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactChildren = __webpack_require__(5);
	var ReactComponent = __webpack_require__(18);
	var ReactPureComponent = __webpack_require__(21);
	var ReactClass = __webpack_require__(22);
	var ReactDOMFactories = __webpack_require__(24);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypes = __webpack_require__(25);
	var ReactVersion = __webpack_require__(30);
	
	var onlyChild = __webpack_require__(31);
	var warning = __webpack_require__(11);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (false) {
	  var canDefineProperty = require('./canDefineProperty');
	  var ReactElementValidator = require('./ReactElementValidator');
	  var didWarnPropTypesDeprecated = false;
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (false) {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	// TODO: Fix tests so that this deprecation warning doesn't cause failures.
	if (false) {
	  if (canDefineProperty) {
	    Object.defineProperty(React, 'PropTypes', {
	      get: function () {
	        process.env.NODE_ENV !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;
	        didWarnPropTypesDeprecated = true;
	        return ReactPropTypes;
	      }
	    });
	  }
	}
	
	module.exports = React;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(6);
	var ReactElement = __webpack_require__(9);
	
	var emptyFunction = __webpack_require__(12);
	var traverseAllChildren = __webpack_require__(15);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};
	
	module.exports = PooledClass;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var validateFormat = function validateFormat(format) {};
	
	if (false) {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactCurrentOwner = __webpack_require__(10);
	
	var warning = __webpack_require__(11);
	var canDefineProperty = __webpack_require__(13);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	var REACT_ELEMENT_TYPE = __webpack_require__(14);
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (false) {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	       false ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}
	
	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	       false ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (false) {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (false) {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (false) {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(12);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (false) {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };
	
	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }
	
	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }
	
	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }
	
	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}
	
	module.exports = warning;

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (false) {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;

/***/ }),
/* 14 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var REACT_ELEMENT_TYPE = __webpack_require__(14);
	
	var getIteratorFn = __webpack_require__(16);
	var invariant = __webpack_require__(8);
	var KeyEscapeUtils = __webpack_require__(17);
	var warning = __webpack_require__(11);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactNoopUpdateQueue = __webpack_require__(19);
	
	var canDefineProperty = __webpack_require__(13);
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (false) {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var warning = __webpack_require__(11);
	
	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (false) {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactComponent = __webpack_require__(18);
	var ReactNoopUpdateQueue = __webpack_require__(19);
	
	var emptyObject = __webpack_require__(20);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;
	
	module.exports = ReactPureComponent;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7),
	    _assign = __webpack_require__(4);
	
	var ReactComponent = __webpack_require__(18);
	var ReactElement = __webpack_require__(9);
	var ReactPropTypeLocationNames = __webpack_require__(23);
	var ReactNoopUpdateQueue = __webpack_require__(19);
	
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var MIXINS_KEY = 'mixins';
	
	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: 'DEFINE_MANY',
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: 'DEFINE_MANY',
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: 'DEFINE_MANY',
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: 'DEFINE_MANY',
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: 'DEFINE_MANY_MERGED',
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: 'DEFINE_MANY_MERGED',
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @required
	   */
	  render: 'DEFINE_ONCE',
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: 'DEFINE_MANY',
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: 'DEFINE_MANY',
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: 'DEFINE_ONCE',
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: 'DEFINE_MANY',
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: 'DEFINE_MANY',
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: 'OVERRIDE_BASE'
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, childContextTypes, 'childContext');
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (false) {
	      validateTypeDef(Constructor, contextTypes, 'context');
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (false) {
	      validateTypeDef(Constructor, propTypes, 'prop');
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === 'OVERRIDE_BASE') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    if (false) {
	      var typeofSpec = typeof spec;
	      var isMixinValid = typeofSpec === 'object' && spec !== null;
	
	      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
	    }
	
	    return;
	  }
	
	  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === 'DEFINE_MANY_MERGED') {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === 'DEFINE_MANY') {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (false) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (false) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	var didWarnDeprecated = false;
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;
	      didWarnDeprecated = true;
	    }
	
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (false) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (false) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (false) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(9);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (false) {
	  var ReactElementValidator = require('./ReactElementValidator');
	  createDOMFactory = ReactElementValidator.createFactory;
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),
	
	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};
	
	module.exports = ReactDOMFactories;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _require = __webpack_require__(9),
	    isValidElement = _require.isValidElement;
	
	var factory = __webpack_require__(26);
	
	module.exports = factory(isValidElement);

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	// React 15.5 references this module, and assumes PropTypes are still callable in production.
	// Therefore we re-export development-only version with all the PropTypes checks here.
	// However if one is migrating to the `prop-types` npm library, they will go through the
	// `index.js` entry point, and it will branch depending on the environment.
	var factory = __webpack_require__(27);
	module.exports = function(isValidElement) {
	  // It is still allowed in 15.5.
	  var throwOnDirectAccess = false;
	  return factory(isValidElement, throwOnDirectAccess);
	};


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(12);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var ReactPropTypesSecret = __webpack_require__(28);
	var checkPropTypes = __webpack_require__(29);
	
	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }
	
	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */
	
	  var ANONYMOUS = '<<anonymous>>';
	
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),
	
	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker
	  };
	
	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/
	
	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;
	
	  function createChainableTypeChecker(validate) {
	    if (false) {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;
	
	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          invariant(
	            false,
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	        } else if (false) {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            warning(
	              false,
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `%s` prop on `%s`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
	              propFullName,
	              componentName
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }
	
	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);
	
	    return chainedCheckType;
	  }
	
	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);
	
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
	  }
	
	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	       false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }
	
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }
	
	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	       false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }
	
	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }
	
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }
	
	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }
	
	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }
	
	        return true;
	      default:
	        return false;
	    }
	  }
	
	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }
	
	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }
	
	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }
	
	    return false;
	  }
	
	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }
	
	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }
	
	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }
	
	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;
	
	  return ReactPropTypes;
	};


/***/ }),
/* 28 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	if (false) {
	  var invariant = require('fbjs/lib/invariant');
	  var warning = require('fbjs/lib/warning');
	  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
	  var loggedTypeFailures = {};
	}
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (false) {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;
	
	          var stack = getStack ? getStack() : '';
	
	          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
	        }
	      }
	    }
	  }
	}
	
	module.exports = checkPropTypes;


/***/ }),
/* 30 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.5.4';

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactElement = __webpack_require__(9);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(33);


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDefaultInjection = __webpack_require__(38);
	var ReactMount = __webpack_require__(161);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdates = __webpack_require__(56);
	var ReactVersion = __webpack_require__(166);
	
	var findDOMNode = __webpack_require__(167);
	var getHostComponentFromComposite = __webpack_require__(168);
	var renderSubtreeIntoContainer = __webpack_require__(169);
	var warning = __webpack_require__(11);
	
	ReactDefaultInjection.inject();
	
	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (false) {
	  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	if (false) {
	  var ReactInstrumentation = require('./ReactInstrumentation');
	  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');
	  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');
	  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');
	
	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}
	
	module.exports = ReactDOM;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var DOMProperty = __webpack_require__(36);
	var ReactDOMComponentFlags = __webpack_require__(37);
	
	var invariant = __webpack_require__(8);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;

/***/ }),
/* 35 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (false) {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (false) {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName:  false ? { autofocus: 'autoFocus' } : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;

/***/ }),
/* 37 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = __webpack_require__(39);
	var BeforeInputEventPlugin = __webpack_require__(40);
	var ChangeEventPlugin = __webpack_require__(55);
	var DefaultEventPluginOrder = __webpack_require__(67);
	var EnterLeaveEventPlugin = __webpack_require__(68);
	var HTMLDOMPropertyConfig = __webpack_require__(73);
	var ReactComponentBrowserEnvironment = __webpack_require__(74);
	var ReactDOMComponent = __webpack_require__(87);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDOMEmptyComponent = __webpack_require__(132);
	var ReactDOMTreeTraversal = __webpack_require__(133);
	var ReactDOMTextComponent = __webpack_require__(134);
	var ReactDefaultBatchingStrategy = __webpack_require__(135);
	var ReactEventListener = __webpack_require__(136);
	var ReactInjection = __webpack_require__(139);
	var ReactReconcileTransaction = __webpack_require__(140);
	var SVGDOMPropertyConfig = __webpack_require__(148);
	var SelectEventPlugin = __webpack_require__(149);
	var SimpleEventPlugin = __webpack_require__(150);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ }),
/* 39 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};
	
	module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(41);
	var ExecutionEnvironment = __webpack_require__(48);
	var FallbackCompositionState = __webpack_require__(49);
	var SyntheticCompositionEvent = __webpack_require__(52);
	var SyntheticInputEvent = __webpack_require__(54);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(42);
	var EventPluginUtils = __webpack_require__(44);
	
	var accumulateInto = __webpack_require__(46);
	var forEachAccumulated = __webpack_require__(47);
	var warning = __webpack_require__(11);
	
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var EventPluginRegistry = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(44);
	var ReactErrorUtils = __webpack_require__(45);
	
	var accumulateInto = __webpack_require__(46);
	var forEachAccumulated = __webpack_require__(47);
	var invariant = __webpack_require__(8);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][key];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
	
	  if (false) {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames:  false ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	
	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (false) {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactErrorUtils = __webpack_require__(45);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}
	
	var validateEventDispatches;
	if (false) {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (false) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (false) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (false) {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = func.bind(null, a);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;

/***/ }),
/* 47 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ }),
/* 48 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(50);
	
	var getTextContentAccessor = __webpack_require__(51);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};
	
	module.exports = PooledClass;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(50);
	
	var emptyFunction = __webpack_require__(12);
	var warning = __webpack_require__(11);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (false) {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (false) {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // eslint-disable-line valid-typeof
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }
	
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (false) {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (false) {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (false) {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(42);
	var EventPropagators = __webpack_require__(41);
	var ExecutionEnvironment = __webpack_require__(48);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	var SyntheticEvent = __webpack_require__(53);
	
	var getEventTarget = __webpack_require__(64);
	var isEventSupported = __webpack_require__(65);
	var isTextInputElement = __webpack_require__(66);
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topInput') {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topClick') {
	    return targetInst;
	  }
	}
	
	function handleControlledInputBlur(inst, node) {
	  // TODO: In IE, inst is occasionally null. Why?
	  if (inst == null) {
	    return;
	  }
	
	  // Fiber and ReactDOM keep wrapper state in separate places
	  var state = inst._wrapperState || node._wrapperState;
	
	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }
	
	  // If controlled, assign the value attribute to the current value on blur
	  var value = '' + node.value;
	  if (node.getAttribute('value') !== value) {
	    node.setAttribute('value', value);
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	
	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === 'topBlur') {
	      handleControlledInputBlur(targetInst, targetNode);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(50);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactReconciler = __webpack_require__(59);
	var Transaction = __webpack_require__(63);
	
	var invariant = __webpack_require__(8);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var PooledClass = __webpack_require__(50);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	
	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);
	
	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };
	
	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };
	
	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	
	
	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };
	
	  /**
	   * `PooledClass` looks for this.
	   */
	
	
	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };
	
	  return CallbackQueue;
	}();
	
	module.exports = PooledClass.addPoolingTo(CallbackQueue);

/***/ }),
/* 58 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(62);
	
	var warning = __webpack_require__(11);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
	  ) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (false) {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(61);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }
	
	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }
	
	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// Trust the developer to only use ReactInstrumentation with a __DEV__ check
	
	var debugTool = null;
	
	if (false) {
	  var ReactDebugTool = require('./ReactDebugTool');
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	var OBSERVED_ERROR = {};
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	module.exports = TransactionImpl;

/***/ }),
/* 64 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ }),
/* 66 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ }),
/* 67 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	
	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
	
	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(41);
	var ReactDOMComponentTree = __webpack_require__(34);
	var SyntheticMouseEvent = __webpack_require__(69);
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(70);
	var ViewportMetrics = __webpack_require__(71);
	
	var getEventModifierState = __webpack_require__(72);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	var getEventTarget = __webpack_require__(64);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ }),
/* 71 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ }),
/* 72 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(36);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {},
	  DOMMutationMethods: {
	    value: function (node, value) {
	      if (value == null) {
	        return node.removeAttribute('value');
	      }
	
	      // Number inputs get special treatment due to some edge cases in
	      // Chrome. Let everything else assign the value attribute as normal.
	      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
	      if (node.type !== 'number' || node.hasAttribute('value') === false) {
	        node.setAttribute('value', '' + value);
	      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
	        // Don't assign an attribute if validation reports bad
	        // input. Chrome will clear the value. Additionally, don't
	        // operate on inputs that have focus, otherwise Chrome might
	        // strip off trailing decimal places and cause the user's
	        // cursor position to jump to the beginning of the input.
	        //
	        // In ReactDOMInput, we have an onBlur event that will trigger
	        // this function again when focus is lost.
	        node.setAttribute('value', '' + value);
	      }
	    }
	  }
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(75);
	var ReactDOMIDOperations = __webpack_require__(86);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(76);
	var Danger = __webpack_require__(82);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactInstrumentation = __webpack_require__(62);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(79);
	var setInnerHTML = __webpack_require__(78);
	var setTextContent = __webpack_require__(80);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (false) {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (false) {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (false) {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: { toIndex: update.toIndex, content: update.content.toString() }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (false) {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(77);
	var setInnerHTML = __webpack_require__(78);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(79);
	var setTextContent = __webpack_require__(80);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ }),
/* 77 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	var DOMNamespaces = __webpack_require__(77);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(79);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ }),
/* 79 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	var escapeTextContentForBrowser = __webpack_require__(81);
	var setInnerHTML = __webpack_require__(78);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ }),
/* 81 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var DOMLazyTree = __webpack_require__(76);
	var ExecutionEnvironment = __webpack_require__(48);
	
	var createNodesFromMarkup = __webpack_require__(83);
	var emptyFunction = __webpack_require__(12);
	var invariant = __webpack_require__(8);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var createArrayFromMixed = __webpack_require__(84);
	var getMarkupWrap = __webpack_require__(85);
	var invariant = __webpack_require__(8);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(75);
	var ReactDOMComponentTree = __webpack_require__(34);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var AutoFocusUtils = __webpack_require__(88);
	var CSSPropertyOperations = __webpack_require__(90);
	var DOMLazyTree = __webpack_require__(76);
	var DOMNamespaces = __webpack_require__(77);
	var DOMProperty = __webpack_require__(36);
	var DOMPropertyOperations = __webpack_require__(98);
	var EventPluginHub = __webpack_require__(42);
	var EventPluginRegistry = __webpack_require__(43);
	var ReactBrowserEventEmitter = __webpack_require__(100);
	var ReactDOMComponentFlags = __webpack_require__(37);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDOMInput = __webpack_require__(103);
	var ReactDOMOption = __webpack_require__(106);
	var ReactDOMSelect = __webpack_require__(107);
	var ReactDOMTextarea = __webpack_require__(108);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMultiChild = __webpack_require__(109);
	var ReactServerRenderingTransaction = __webpack_require__(128);
	
	var emptyFunction = __webpack_require__(12);
	var escapeTextContentForBrowser = __webpack_require__(81);
	var invariant = __webpack_require__(8);
	var isEventSupported = __webpack_require__(65);
	var shallowEqual = __webpack_require__(117);
	var validateDOMNesting = __webpack_require__(131);
	var warning = __webpack_require__(11);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (false) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setAndValidateContentChildDev = emptyFunction;
	if (false) {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (false) {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (false) {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (false) {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (false) {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (false) {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (false) {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (false) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (false) {
	        setAndValidateContentChildDev.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;
	
	    if (false) {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(34);
	
	var focusNode = __webpack_require__(89);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ }),
/* 89 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(91);
	var ExecutionEnvironment = __webpack_require__(48);
	var ReactInstrumentation = __webpack_require__(62);
	
	var camelizeStyleName = __webpack_require__(92);
	var dangerousStyleValue = __webpack_require__(94);
	var hyphenateStyleName = __webpack_require__(95);
	var memoizeStringOnly = __webpack_require__(97);
	var warning = __webpack_require__(11);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (false) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (false) {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (false) {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;

/***/ }),
/* 91 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(93);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ }),
/* 93 */
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(91);
	var warning = __webpack_require__(11);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (false) {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(96);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ }),
/* 96 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ }),
/* 97 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(36);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactInstrumentation = __webpack_require__(62);
	
	var quoteAttributeValueForBrowser = __webpack_require__(99);
	var warning = __webpack_require__(11);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (false) {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (false) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(81);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var EventPluginRegistry = __webpack_require__(43);
	var ReactEventEmitterMixin = __webpack_require__(101);
	var ViewportMetrics = __webpack_require__(71);
	
	var getVendorPrefixedEventName = __webpack_require__(102);
	var isEventSupported = __webpack_require__(65);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(42);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var DOMPropertyOperations = __webpack_require__(98);
	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      controlled: isControlled(props)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (false) {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      if (value === 0 && node.value === '') {
	        node.value = '0';
	        // Note: IE9 reports a number inputs as 'text', so check props instead.
	      } else if (props.type === 'number') {
	        // Simulate `input.valueAsNumber`. IE9 does not support it
	        var valueAsNumber = parseFloat(node.value, 10) || 0;
	
	        // eslint-disable-next-line
	        if (value != valueAsNumber) {
	          // Cast `value` to a string to ensure the value is set correctly. While
	          // browsers typically do this as necessary, jsdom doesn't.
	          node.value = '' + value;
	        }
	        // eslint-disable-next-line
	      } else if (value != node.value) {
	        // Cast `value` to a string to ensure the value is set correctly. While
	        // browsers typically do this as necessary, jsdom doesn't.
	        node.value = '' + value;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	
	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactPropTypesSecret = __webpack_require__(105);
	var propTypesFactory = __webpack_require__(26);
	
	var React = __webpack_require__(3);
	var PropTypes = propTypesFactory(React.isValidElement);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: PropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;

/***/ }),
/* 105 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
	
	module.exports = ReactPropTypesSecret;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var React = __webpack_require__(3);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDOMSelect = __webpack_require__(107);
	
	var warning = __webpack_require__(11);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	       false ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var LinkedValueUtils = __webpack_require__(104);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (false) {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;
	
	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactComponentEnvironment = __webpack_require__(110);
	var ReactInstanceMap = __webpack_require__(111);
	var ReactInstrumentation = __webpack_require__(62);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactReconciler = __webpack_require__(59);
	var ReactChildReconciler = __webpack_require__(112);
	
	var emptyFunction = __webpack_require__(12);
	var flattenChildren = __webpack_require__(127);
	var invariant = __webpack_require__(8);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setChildrenForInstrumentation = emptyFunction;
	if (false) {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (false) {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (false) {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (false) {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (false) {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (false) {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;

/***/ }),
/* 111 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(59);
	
	var instantiateReactComponent = __webpack_require__(114);
	var KeyEscapeUtils = __webpack_require__(122);
	var shouldUpdateReactComponent = __webpack_require__(118);
	var traverseAllChildren = __webpack_require__(123);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(126);
	}
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (false) {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (false) {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
	  ) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))

/***/ }),
/* 113 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var ReactCompositeComponent = __webpack_require__(115);
	var ReactEmptyComponent = __webpack_require__(119);
	var ReactHostComponent = __webpack_require__(120);
	
	var getNextDebugID = __webpack_require__(121);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (false) {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (false) {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (false) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	module.exports = instantiateReactComponent;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var React = __webpack_require__(3);
	var ReactComponentEnvironment = __webpack_require__(110);
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactErrorUtils = __webpack_require__(45);
	var ReactInstanceMap = __webpack_require__(111);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactNodeTypes = __webpack_require__(116);
	var ReactReconciler = __webpack_require__(59);
	
	if (false) {
	  var checkReactTypeSpec = require('./checkReactTypeSpec');
	}
	
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(8);
	var shallowEqual = __webpack_require__(117);
	var shouldUpdateReactComponent = __webpack_require__(118);
	var warning = __webpack_require__(11);
	
	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}
	
	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}
	
	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }
	
	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (false) {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;
	
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }
	
	    if (false) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (false) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (false) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	
	    if (doConstruct) {
	      if (false) {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }
	
	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (false) {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	
	    var debugID = 0;
	    if (false) {
	      debugID = this._debugID;
	    }
	
	    if (inst.componentWillMount) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
	
	    if (false) {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (false) {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (false) {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;
	
	    if (inst.getChildContext) {
	      if (false) {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }
	
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (false) {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (false) {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (false) {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;
	
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (false) {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (false) {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	
	    var debugID = 0;
	    if (false) {
	      debugID = this._debugID;
	    }
	
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
	
	      if (false) {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;
	
	    if (false) {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }
	
	    if (false) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }
	
	    return renderedElement;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (("production") !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedElement;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (false) {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	module.exports = ReactCompositeComponent;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var React = __webpack_require__(3);
	
	var invariant = __webpack_require__(8);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;

/***/ }),
/* 117 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ }),
/* 118 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 119 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	var genericComponentClass = null;
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;

/***/ }),
/* 121 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var nextDebugID = 1;
	
	function getNextDebugID() {
	  return nextDebugID++;
	}
	
	module.exports = getNextDebugID;

/***/ }),
/* 122 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var REACT_ELEMENT_TYPE = __webpack_require__(124);
	
	var getIteratorFn = __webpack_require__(125);
	var invariant = __webpack_require__(8);
	var KeyEscapeUtils = __webpack_require__(122);
	var warning = __webpack_require__(11);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (false) {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (false) {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;

/***/ }),
/* 124 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 125 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(7);
	
	var ReactCurrentOwner = __webpack_require__(10);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty)
	  // Strip regex characters so we can use it for regex
	  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
	  // Remove hasOwnProperty from the template to make it generic
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}
	
	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
	
	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;
	
	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();
	
	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };
	
	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};
	
	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };
	
	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };
	
	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}
	
	var unmountedIDs = [];
	
	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;
	
	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	   false ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;
	
	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ?  false ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  false ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ?  false ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },
	
	
	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs
	};
	
	module.exports = ReactComponentTreeHook;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(122);
	var traverseAllChildren = __webpack_require__(123);
	var warning = __webpack_require__(11);
	
	var ReactComponentTreeHook;
	
	if (typeof process !== 'undefined' && ({"NODE_ENV":"production"}) && ("production") === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(126);
	}
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (false) {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (false) {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(113)))

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var PooledClass = __webpack_require__(50);
	var Transaction = __webpack_require__(63);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactServerUpdateQueue = __webpack_require__(129);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(130);
	
	var warning = __webpack_require__(11);
	
	function warnNoop(publicInstance, callerName) {
	  if (false) {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactInstanceMap = __webpack_require__(111);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactUpdates = __webpack_require__(56);
	
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (false) {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }
	
	  if (false) {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (false) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    // Future-proof 15.5
	    if (callback !== undefined && callback !== null) {
	      ReactUpdateQueue.validateCallback(callback, 'replaceState');
	      if (internalInstance._pendingCallbacks) {
	        internalInstance._pendingCallbacks.push(callback);
	      } else {
	        internalInstance._pendingCallbacks = [callback];
	      }
	    }
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (false) {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var emptyFunction = __webpack_require__(12);
	var warning = __webpack_require__(11);
	
	var validateDOMNesting = emptyFunction;
	
	if (false) {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var DOMLazyTree = __webpack_require__(76);
	var ReactDOMComponentTree = __webpack_require__(34);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var invariant = __webpack_require__(8);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35),
	    _assign = __webpack_require__(4);
	
	var DOMChildrenOperations = __webpack_require__(75);
	var DOMLazyTree = __webpack_require__(76);
	var ReactDOMComponentTree = __webpack_require__(34);
	
	var escapeTextContentForBrowser = __webpack_require__(81);
	var invariant = __webpack_require__(8);
	var validateDOMNesting = __webpack_require__(131);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (false) {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var ReactUpdates = __webpack_require__(56);
	var Transaction = __webpack_require__(63);
	
	var emptyFunction = __webpack_require__(12);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var EventListener = __webpack_require__(137);
	var ExecutionEnvironment = __webpack_require__(48);
	var PooledClass = __webpack_require__(50);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(56);
	
	var getEventTarget = __webpack_require__(64);
	var getUnboundedScrollPosition = __webpack_require__(138);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(12);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (false) {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;

/***/ }),
/* 138 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(36);
	var EventPluginHub = __webpack_require__(42);
	var EventPluginUtils = __webpack_require__(44);
	var ReactComponentEnvironment = __webpack_require__(110);
	var ReactEmptyComponent = __webpack_require__(119);
	var ReactBrowserEventEmitter = __webpack_require__(100);
	var ReactHostComponent = __webpack_require__(120);
	var ReactUpdates = __webpack_require__(56);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(4);
	
	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(50);
	var ReactBrowserEventEmitter = __webpack_require__(100);
	var ReactInputSelection = __webpack_require__(141);
	var ReactInstrumentation = __webpack_require__(62);
	var Transaction = __webpack_require__(63);
	var ReactUpdateQueue = __webpack_require__(130);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (false) {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(142);
	
	var containsNode = __webpack_require__(144);
	var focusNode = __webpack_require__(89);
	var getActiveElement = __webpack_require__(147);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(48);
	
	var getNodeForCharacterOffset = __webpack_require__(143);
	var getTextContentAccessor = __webpack_require__(51);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ }),
/* 143 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(145);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(146);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ }),
/* 146 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ }),
/* 147 */
/***/ (function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ }),
/* 148 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var EventPropagators = __webpack_require__(41);
	var ExecutionEnvironment = __webpack_require__(48);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactInputSelection = __webpack_require__(141);
	var SyntheticEvent = __webpack_require__(53);
	
	var getActiveElement = __webpack_require__(147);
	var isTextInputElement = __webpack_require__(66);
	var shallowEqual = __webpack_require__(117);
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var EventListener = __webpack_require__(137);
	var EventPropagators = __webpack_require__(41);
	var ReactDOMComponentTree = __webpack_require__(34);
	var SyntheticAnimationEvent = __webpack_require__(151);
	var SyntheticClipboardEvent = __webpack_require__(152);
	var SyntheticEvent = __webpack_require__(53);
	var SyntheticFocusEvent = __webpack_require__(153);
	var SyntheticKeyboardEvent = __webpack_require__(154);
	var SyntheticMouseEvent = __webpack_require__(69);
	var SyntheticDragEvent = __webpack_require__(157);
	var SyntheticTouchEvent = __webpack_require__(158);
	var SyntheticTransitionEvent = __webpack_require__(159);
	var SyntheticUIEvent = __webpack_require__(70);
	var SyntheticWheelEvent = __webpack_require__(160);
	
	var emptyFunction = __webpack_require__(12);
	var getEventCharCode = __webpack_require__(155);
	var invariant = __webpack_require__(8);
	
	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;
	
	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});
	
	var onClickListeners = {};
	
	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}
	
	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(70);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(70);
	
	var getEventCharCode = __webpack_require__(155);
	var getEventKey = __webpack_require__(156);
	var getEventModifierState = __webpack_require__(72);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 155 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(155);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(69);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(70);
	
	var getEventModifierState = __webpack_require__(72);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(53);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(69);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var DOMLazyTree = __webpack_require__(76);
	var DOMProperty = __webpack_require__(36);
	var React = __webpack_require__(3);
	var ReactBrowserEventEmitter = __webpack_require__(100);
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactDOMContainerInfo = __webpack_require__(162);
	var ReactDOMFeatureFlags = __webpack_require__(163);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactInstanceMap = __webpack_require__(111);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMarkupChecksum = __webpack_require__(164);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdateQueue = __webpack_require__(130);
	var ReactUpdates = __webpack_require__(56);
	
	var emptyObject = __webpack_require__(20);
	var instantiateReactComponent = __webpack_require__(114);
	var invariant = __webpack_require__(8);
	var setInnerHTML = __webpack_require__(78);
	var shouldUpdateReactComponent = __webpack_require__(118);
	var warning = __webpack_require__(11);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (false) {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (false) {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}
	
	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}
	
	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (false) {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !isValidContainer(container) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    if (false) {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (false) {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (false) {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (false) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (false) {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(131);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (false) {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;

/***/ }),
/* 163 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(165);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ }),
/* 165 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ }),
/* 166 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	module.exports = '15.5.4';

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(35);
	
	var ReactCurrentOwner = __webpack_require__(10);
	var ReactDOMComponentTree = __webpack_require__(34);
	var ReactInstanceMap = __webpack_require__(111);
	
	var getHostComponentFromComposite = __webpack_require__(168);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(11);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (false) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(116);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(161);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.connect = exports.Provider = undefined;
	
	var _Provider = __webpack_require__(171);
	
	var _Provider2 = _interopRequireDefault(_Provider);
	
	var _connect = __webpack_require__(176);
	
	var _connect2 = _interopRequireDefault(_connect);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	exports.Provider = _Provider2["default"];
	exports.connect = _connect2["default"];

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = undefined;
	
	var _react = __webpack_require__(2);
	
	var _propTypes = __webpack_require__(172);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _storeShape = __webpack_require__(174);
	
	var _storeShape2 = _interopRequireDefault(_storeShape);
	
	var _warning = __webpack_require__(175);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;
	
	  (0, _warning2["default"])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	}
	
	var Provider = function (_Component) {
	  _inherits(Provider, _Component);
	
	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store };
	  };
	
	  function Provider(props, context) {
	    _classCallCheck(this, Provider);
	
	    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	    _this.store = props.store;
	    return _this;
	  }
	
	  Provider.prototype.render = function render() {
	    return _react.Children.only(this.props.children);
	  };
	
	  return Provider;
	}(_react.Component);
	
	exports["default"] = Provider;
	
	
	if (false) {
	  Provider.prototype.componentWillReceiveProps = function (nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;
	
	
	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };
	}
	
	Provider.propTypes = {
	  store: _storeShape2["default"].isRequired,
	  children: _propTypes2["default"].element.isRequired
	};
	Provider.childContextTypes = {
	  store: _storeShape2["default"].isRequired
	};

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	if (false) {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;
	
	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };
	
	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(173)();
	}


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(12);
	var invariant = __webpack_require__(8);
	
	module.exports = function() {
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  function shim() {
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,
	
	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim
	  };
	
	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;
	
	  return ReactPropTypes;
	};


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _propTypes = __webpack_require__(172);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	exports["default"] = _propTypes2["default"].shape({
	  subscribe: _propTypes2["default"].func.isRequired,
	  dispatch: _propTypes2["default"].func.isRequired,
	  getState: _propTypes2["default"].func.isRequired
	});

/***/ }),
/* 175 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports["default"] = connect;
	
	var _react = __webpack_require__(2);
	
	var _storeShape = __webpack_require__(174);
	
	var _storeShape2 = _interopRequireDefault(_storeShape);
	
	var _shallowEqual = __webpack_require__(177);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _wrapActionCreators = __webpack_require__(178);
	
	var _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);
	
	var _warning = __webpack_require__(175);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _isPlainObject = __webpack_require__(200);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _hoistNonReactStatics = __webpack_require__(210);
	
	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
	
	var _invariant = __webpack_require__(211);
	
	var _invariant2 = _interopRequireDefault(_invariant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var defaultMapStateToProps = function defaultMapStateToProps(state) {
	  return {};
	}; // eslint-disable-line no-unused-vars
	var defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {
	  return { dispatch: dispatch };
	};
	var defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {
	  return _extends({}, parentProps, stateProps, dispatchProps);
	};
	
	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}
	
	var errorObject = { value: null };
	function tryCatch(fn, ctx) {
	  try {
	    return fn.apply(ctx);
	  } catch (e) {
	    errorObject.value = e;
	    return errorObject;
	  }
	}
	
	// Helps track hot reloading.
	var nextVersion = 0;
	
	function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
	
	  var shouldSubscribe = Boolean(mapStateToProps);
	  var mapState = mapStateToProps || defaultMapStateToProps;
	
	  var mapDispatch = void 0;
	  if (typeof mapDispatchToProps === 'function') {
	    mapDispatch = mapDispatchToProps;
	  } else if (!mapDispatchToProps) {
	    mapDispatch = defaultMapDispatchToProps;
	  } else {
	    mapDispatch = (0, _wrapActionCreators2["default"])(mapDispatchToProps);
	  }
	
	  var finalMergeProps = mergeProps || defaultMergeProps;
	  var _options$pure = options.pure,
	      pure = _options$pure === undefined ? true : _options$pure,
	      _options$withRef = options.withRef,
	      withRef = _options$withRef === undefined ? false : _options$withRef;
	
	  var checkMergedEquals = pure && finalMergeProps !== defaultMergeProps;
	
	  // Helps track hot reloading.
	  var version = nextVersion++;
	
	  return function wrapWithConnect(WrappedComponent) {
	    var connectDisplayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';
	
	    function checkStateShape(props, methodName) {
	      if (!(0, _isPlainObject2["default"])(props)) {
	        (0, _warning2["default"])(methodName + '() in ' + connectDisplayName + ' must return a plain object. ' + ('Instead received ' + props + '.'));
	      }
	    }
	
	    function computeMergedProps(stateProps, dispatchProps, parentProps) {
	      var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);
	      if (false) {
	        checkStateShape(mergedProps, 'mergeProps');
	      }
	      return mergedProps;
	    }
	
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);
	
	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged;
	      };
	
	      function Connect(props, context) {
	        _classCallCheck(this, Connect);
	
	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));
	
	        _this.version = version;
	        _this.store = props.store || context.store;
	
	        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + connectDisplayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + connectDisplayName + '".'));
	
	        var storeState = _this.store.getState();
	        _this.state = { storeState: storeState };
	        _this.clearCache();
	        return _this;
	      }
	
	      Connect.prototype.computeStateProps = function computeStateProps(store, props) {
	        if (!this.finalMapStateToProps) {
	          return this.configureFinalMapState(store, props);
	        }
	
	        var state = store.getState();
	        var stateProps = this.doStatePropsDependOnOwnProps ? this.finalMapStateToProps(state, props) : this.finalMapStateToProps(state);
	
	        if (false) {
	          checkStateShape(stateProps, 'mapStateToProps');
	        }
	        return stateProps;
	      };
	
	      Connect.prototype.configureFinalMapState = function configureFinalMapState(store, props) {
	        var mappedState = mapState(store.getState(), props);
	        var isFactory = typeof mappedState === 'function';
	
	        this.finalMapStateToProps = isFactory ? mappedState : mapState;
	        this.doStatePropsDependOnOwnProps = this.finalMapStateToProps.length !== 1;
	
	        if (isFactory) {
	          return this.computeStateProps(store, props);
	        }
	
	        if (false) {
	          checkStateShape(mappedState, 'mapStateToProps');
	        }
	        return mappedState;
	      };
	
	      Connect.prototype.computeDispatchProps = function computeDispatchProps(store, props) {
	        if (!this.finalMapDispatchToProps) {
	          return this.configureFinalMapDispatch(store, props);
	        }
	
	        var dispatch = store.dispatch;
	
	        var dispatchProps = this.doDispatchPropsDependOnOwnProps ? this.finalMapDispatchToProps(dispatch, props) : this.finalMapDispatchToProps(dispatch);
	
	        if (false) {
	          checkStateShape(dispatchProps, 'mapDispatchToProps');
	        }
	        return dispatchProps;
	      };
	
	      Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(store, props) {
	        var mappedDispatch = mapDispatch(store.dispatch, props);
	        var isFactory = typeof mappedDispatch === 'function';
	
	        this.finalMapDispatchToProps = isFactory ? mappedDispatch : mapDispatch;
	        this.doDispatchPropsDependOnOwnProps = this.finalMapDispatchToProps.length !== 1;
	
	        if (isFactory) {
	          return this.computeDispatchProps(store, props);
	        }
	
	        if (false) {
	          checkStateShape(mappedDispatch, 'mapDispatchToProps');
	        }
	        return mappedDispatch;
	      };
	
	      Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {
	        var nextStateProps = this.computeStateProps(this.store, this.props);
	        if (this.stateProps && (0, _shallowEqual2["default"])(nextStateProps, this.stateProps)) {
	          return false;
	        }
	
	        this.stateProps = nextStateProps;
	        return true;
	      };
	
	      Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {
	        var nextDispatchProps = this.computeDispatchProps(this.store, this.props);
	        if (this.dispatchProps && (0, _shallowEqual2["default"])(nextDispatchProps, this.dispatchProps)) {
	          return false;
	        }
	
	        this.dispatchProps = nextDispatchProps;
	        return true;
	      };
	
	      Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {
	        var nextMergedProps = computeMergedProps(this.stateProps, this.dispatchProps, this.props);
	        if (this.mergedProps && checkMergedEquals && (0, _shallowEqual2["default"])(nextMergedProps, this.mergedProps)) {
	          return false;
	        }
	
	        this.mergedProps = nextMergedProps;
	        return true;
	      };
	
	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return typeof this.unsubscribe === 'function';
	      };
	
	      Connect.prototype.trySubscribe = function trySubscribe() {
	        if (shouldSubscribe && !this.unsubscribe) {
	          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));
	          this.handleChange();
	        }
	      };
	
	      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {
	        if (this.unsubscribe) {
	          this.unsubscribe();
	          this.unsubscribe = null;
	        }
	      };
	
	      Connect.prototype.componentDidMount = function componentDidMount() {
	        this.trySubscribe();
	      };
	
	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        if (!pure || !(0, _shallowEqual2["default"])(nextProps, this.props)) {
	          this.haveOwnPropsChanged = true;
	        }
	      };
	
	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        this.tryUnsubscribe();
	        this.clearCache();
	      };
	
	      Connect.prototype.clearCache = function clearCache() {
	        this.dispatchProps = null;
	        this.stateProps = null;
	        this.mergedProps = null;
	        this.haveOwnPropsChanged = true;
	        this.hasStoreStateChanged = true;
	        this.haveStatePropsBeenPrecalculated = false;
	        this.statePropsPrecalculationError = null;
	        this.renderedElement = null;
	        this.finalMapDispatchToProps = null;
	        this.finalMapStateToProps = null;
	      };
	
	      Connect.prototype.handleChange = function handleChange() {
	        if (!this.unsubscribe) {
	          return;
	        }
	
	        var storeState = this.store.getState();
	        var prevStoreState = this.state.storeState;
	        if (pure && prevStoreState === storeState) {
	          return;
	        }
	
	        if (pure && !this.doStatePropsDependOnOwnProps) {
	          var haveStatePropsChanged = tryCatch(this.updateStatePropsIfNeeded, this);
	          if (!haveStatePropsChanged) {
	            return;
	          }
	          if (haveStatePropsChanged === errorObject) {
	            this.statePropsPrecalculationError = errorObject.value;
	          }
	          this.haveStatePropsBeenPrecalculated = true;
	        }
	
	        this.hasStoreStateChanged = true;
	        this.setState({ storeState: storeState });
	      };
	
	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2["default"])(withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');
	
	        return this.refs.wrappedInstance;
	      };
	
	      Connect.prototype.render = function render() {
	        var haveOwnPropsChanged = this.haveOwnPropsChanged,
	            hasStoreStateChanged = this.hasStoreStateChanged,
	            haveStatePropsBeenPrecalculated = this.haveStatePropsBeenPrecalculated,
	            statePropsPrecalculationError = this.statePropsPrecalculationError,
	            renderedElement = this.renderedElement;
	
	
	        this.haveOwnPropsChanged = false;
	        this.hasStoreStateChanged = false;
	        this.haveStatePropsBeenPrecalculated = false;
	        this.statePropsPrecalculationError = null;
	
	        if (statePropsPrecalculationError) {
	          throw statePropsPrecalculationError;
	        }
	
	        var shouldUpdateStateProps = true;
	        var shouldUpdateDispatchProps = true;
	        if (pure && renderedElement) {
	          shouldUpdateStateProps = hasStoreStateChanged || haveOwnPropsChanged && this.doStatePropsDependOnOwnProps;
	          shouldUpdateDispatchProps = haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;
	        }
	
	        var haveStatePropsChanged = false;
	        var haveDispatchPropsChanged = false;
	        if (haveStatePropsBeenPrecalculated) {
	          haveStatePropsChanged = true;
	        } else if (shouldUpdateStateProps) {
	          haveStatePropsChanged = this.updateStatePropsIfNeeded();
	        }
	        if (shouldUpdateDispatchProps) {
	          haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();
	        }
	
	        var haveMergedPropsChanged = true;
	        if (haveStatePropsChanged || haveDispatchPropsChanged || haveOwnPropsChanged) {
	          haveMergedPropsChanged = this.updateMergedPropsIfNeeded();
	        } else {
	          haveMergedPropsChanged = false;
	        }
	
	        if (!haveMergedPropsChanged && renderedElement) {
	          return renderedElement;
	        }
	
	        if (withRef) {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, _extends({}, this.mergedProps, {
	            ref: 'wrappedInstance'
	          }));
	        } else {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, this.mergedProps);
	        }
	
	        return this.renderedElement;
	      };
	
	      return Connect;
	    }(_react.Component);
	
	    Connect.displayName = connectDisplayName;
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.contextTypes = {
	      store: _storeShape2["default"]
	    };
	    Connect.propTypes = {
	      store: _storeShape2["default"]
	    };
	
	    if (false) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        if (this.version === version) {
	          return;
	        }
	
	        // We are hot reloading!
	        this.version = version;
	        this.trySubscribe();
	        this.clearCache();
	      };
	    }
	
	    return (0, _hoistNonReactStatics2["default"])(Connect, WrappedComponent);
	  };
	}

/***/ }),
/* 177 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = shallowEqual;
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  var hasOwn = Object.prototype.hasOwnProperty;
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	}

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports["default"] = wrapActionCreators;
	
	var _redux = __webpack_require__(179);
	
	function wrapActionCreators(actionCreators) {
	  return function (dispatch) {
	    return (0, _redux.bindActionCreators)(actionCreators, dispatch);
	  };
	}

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;
	
	var _createStore = __webpack_require__(180);
	
	var _createStore2 = _interopRequireDefault(_createStore);
	
	var _combineReducers = __webpack_require__(195);
	
	var _combineReducers2 = _interopRequireDefault(_combineReducers);
	
	var _bindActionCreators = __webpack_require__(197);
	
	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);
	
	var _applyMiddleware = __webpack_require__(198);
	
	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);
	
	var _compose = __webpack_require__(199);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	var _warning = __webpack_require__(196);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}
	
	if (false) {
	  (0, _warning2['default'])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}
	
	exports.createStore = _createStore2['default'];
	exports.combineReducers = _combineReducers2['default'];
	exports.bindActionCreators = _bindActionCreators2['default'];
	exports.applyMiddleware = _applyMiddleware2['default'];
	exports.compose = _compose2['default'];

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports['default'] = createStore;
	
	var _isPlainObject = __webpack_require__(181);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _symbolObservable = __webpack_require__(191);
	
	var _symbolObservable2 = _interopRequireDefault(_symbolObservable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};
	
	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [preloadedState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, preloadedState, enhancer) {
	  var _ref2;
	
	  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = preloadedState;
	    preloadedState = undefined;
	  }
	
	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }
	
	    return enhancer(createStore)(reducer, preloadedState);
	  }
	
	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }
	
	  var currentReducer = reducer;
	  var currentState = preloadedState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;
	
	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }
	
	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }
	
	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all state changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }
	
	    var isSubscribed = true;
	
	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);
	
	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }
	
	      isSubscribed = false;
	
	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }
	
	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2['default'])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }
	
	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }
	
	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }
	
	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }
	
	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }
	
	    return action;
	  }
	
	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }
	
	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }
	
	  /**
	   * Interoperability point for observable/reactive libraries.
	   * @returns {observable} A minimal observable of state changes.
	   * For more information, see the observable proposal:
	   * https://github.com/zenparsing/es-observable
	   */
	  function observable() {
	    var _ref;
	
	    var outerSubscribe = subscribe;
	    return _ref = {
	      /**
	       * The minimal observable subscription method.
	       * @param {Object} observer Any object that can be used as an observer.
	       * The observer object should have a `next` method.
	       * @returns {subscription} An object with an `unsubscribe` method that can
	       * be used to unsubscribe the observable from the store, and prevent further
	       * emission of values from the observable.
	       */
	      subscribe: function subscribe(observer) {
	        if (typeof observer !== 'object') {
	          throw new TypeError('Expected the observer to be an object.');
	        }
	
	        function observeState() {
	          if (observer.next) {
	            observer.next(getState());
	          }
	        }
	
	        observeState();
	        var unsubscribe = outerSubscribe(observeState);
	        return { unsubscribe: unsubscribe };
	      }
	    }, _ref[_symbolObservable2['default']] = function () {
	      return this;
	    }, _ref;
	  }
	
	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });
	
	  return _ref2 = {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  }, _ref2[_symbolObservable2['default']] = observable, _ref2;
	}

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(182),
	    getPrototype = __webpack_require__(188),
	    isObjectLike = __webpack_require__(190);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(183),
	    getRawTag = __webpack_require__(186),
	    objectToString = __webpack_require__(187);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(184);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(185);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ }),
/* 185 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(183);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ }),
/* 187 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(189);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ }),
/* 189 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ }),
/* 190 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(192);


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ponyfill = __webpack_require__(194);
	
	var _ponyfill2 = _interopRequireDefault(_ponyfill);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var root; /* global window */
	
	
	if (typeof self !== 'undefined') {
	  root = self;
	} else if (typeof window !== 'undefined') {
	  root = window;
	} else if (typeof global !== 'undefined') {
	  root = global;
	} else if (true) {
	  root = module;
	} else {
	  root = Function('return this')();
	}
	
	var result = (0, _ponyfill2['default'])(root);
	exports['default'] = result;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(193)(module)))

/***/ }),
/* 193 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 194 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports['default'] = symbolObservablePonyfill;
	function symbolObservablePonyfill(root) {
		var result;
		var _Symbol = root.Symbol;
	
		if (typeof _Symbol === 'function') {
			if (_Symbol.observable) {
				result = _Symbol.observable;
			} else {
				result = _Symbol('observable');
				_Symbol.observable = result;
			}
		} else {
			result = '@@observable';
		}
	
		return result;
	};

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = combineReducers;
	
	var _createStore = __webpack_require__(180);
	
	var _isPlainObject = __webpack_require__(181);
	
	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
	
	var _warning = __webpack_require__(196);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';
	
	  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state.';
	}
	
	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';
	
	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }
	
	  if (!(0, _isPlainObject2['default'])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }
	
	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
	  });
	
	  unexpectedKeys.forEach(function (key) {
	    unexpectedKeyCache[key] = true;
	  });
	
	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}
	
	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });
	
	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }
	
	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}
	
	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	
	    if (false) {
	      if (typeof reducers[key] === 'undefined') {
	        (0, _warning2['default'])('No reducer provided for key "' + key + '"');
	      }
	    }
	
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);
	
	  if (false) {
	    var unexpectedKeyCache = {};
	  }
	
	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }
	
	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];
	
	    if (sanityError) {
	      throw sanityError;
	    }
	
	    if (false) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
	      if (warningMessage) {
	        (0, _warning2['default'])(warningMessage);
	      }
	    }
	
	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

/***/ }),
/* 196 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that if you enable
	    // "break on all exceptions" in your console,
	    // it would pause the execution at this line.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ }),
/* 197 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports['default'] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}
	
	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }
	
	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }
	
	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports['default'] = applyMiddleware;
	
	var _compose = __webpack_require__(199);
	
	var _compose2 = _interopRequireDefault(_compose);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }
	
	  return function (createStore) {
	    return function (reducer, preloadedState, enhancer) {
	      var store = createStore(reducer, preloadedState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];
	
	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2['default'].apply(undefined, chain)(store.dispatch);
	
	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ }),
/* 199 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left. The rightmost
	 * function can take multiple arguments as it provides the signature for
	 * the resulting composite function.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing the argument functions
	 * from right to left. For example, compose(f, g, h) is identical to doing
	 * (...args) => f(g(h(...args))).
	 */
	
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }
	
	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }
	
	  if (funcs.length === 1) {
	    return funcs[0];
	  }
	
	  var last = funcs[funcs.length - 1];
	  var rest = funcs.slice(0, -1);
	  return function () {
	    return rest.reduceRight(function (composed, f) {
	      return f(composed);
	    }, last.apply(undefined, arguments));
	  };
	}

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(201),
	    getPrototype = __webpack_require__(207),
	    isObjectLike = __webpack_require__(209);
	
	/** `Object#toString` result references. */
	var objectTag = '[object Object]';
	
	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;
	
	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);
	
	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}
	
	module.exports = isPlainObject;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(202),
	    getRawTag = __webpack_require__(205),
	    objectToString = __webpack_require__(206);
	
	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}
	
	module.exports = baseGetTag;


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(203);
	
	/** Built-in value references. */
	var Symbol = root.Symbol;
	
	module.exports = Symbol;


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(204);
	
	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
	
	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();
	
	module.exports = root;


/***/ }),
/* 204 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
	
	module.exports = freeGlobal;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(202);
	
	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;
	
	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];
	
	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}
	
	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}
	
	module.exports = getRawTag;


/***/ }),
/* 206 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;
	
	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;
	
	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}
	
	module.exports = objectToString;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(208);
	
	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);
	
	module.exports = getPrototype;


/***/ }),
/* 208 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}
	
	module.exports = overArg;


/***/ }),
/* 209 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}
	
	module.exports = isObjectLike;


/***/ }),
/* 210 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';
	
	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};
	
	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};
	
	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';
	
	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);
	
	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }
	
	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {
	
	                }
	            }
	        }
	    }
	
	    return targetComponent;
	};


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(213);


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var AppContainer = __webpack_require__(214);
	
	module.exports = function warnAboutIncorrectUsage(arg) {
	  if (this && this.callback) {
	    throw new Error('React Hot Loader: The Webpack loader is now exported separately. ' + 'If you use Babel, we recommend that you remove "react-hot-loader" ' + 'from the "loaders" section of your Webpack configuration altogether, ' + 'and instead add "react-hot-loader/babel" to the "plugins" section ' + 'of your .babelrc file. ' + 'If you prefer not to use Babel, replace "react-hot-loader" or ' + '"react-hot" with "react-hot-loader/webpack" in the "loaders" section ' + 'of your Webpack configuration.');
	  } else if (arg && arg.types && arg.types.IfStatement) {
	    throw new Error('React Hot Loader: The Babel plugin is exported separately. ' + 'Replace "react-hot-loader" with "react-hot-loader/babel" ' + 'in the "plugins" section of your .babelrc file. ' + 'While we recommend the above, if you prefer not to use Babel, ' + 'you may remove "react-hot-loader" from the "plugins" section of ' + 'your .babelrc file altogether, and instead add ' + '"react-hot-loader/webpack" to the "loaders" section of your Webpack ' + 'configuration.');
	  } else {
	    throw new Error('React Hot Loader does not have a default export. ' + 'If you use the import statement, make sure to include the ' + 'curly braces: import { AppContainer } from "react-hot-loader". ' + 'If you use CommonJS, make sure to read the named export: ' + 'require("react-hot-loader").AppContainer.');
	  }
	};
	
	module.exports.AppContainer = AppContainer;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	/* eslint-disable global-require */
	
	'use strict';
	
	if (true) {
	  module.exports = __webpack_require__(215);
	} else {
	  module.exports = require('./AppContainer.dev');
	}

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

	/* eslint-disable react/prop-types */
	
	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var React = __webpack_require__(2);
	var Component = React.Component;
	
	var AppContainer = function (_Component) {
	  _inherits(AppContainer, _Component);
	
	  function AppContainer() {
	    _classCallCheck(this, AppContainer);
	
	    return _possibleConstructorReturn(this, (AppContainer.__proto__ || Object.getPrototypeOf(AppContainer)).apply(this, arguments));
	  }
	
	  _createClass(AppContainer, [{
	    key: 'render',
	    value: function render() {
	      if (this.props.component) {
	        return React.createElement(this.props.component, this.props.props);
	      }
	
	      return React.Children.only(this.props.children);
	    }
	  }]);
	
	  return AppContainer;
	}(Component);
	
	module.exports = AppContainer;

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(2);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var App = function App() {
	  return _react2.default.createElement(
	    'p',
	    null,
	    ' Disclaimer Agreement'
	  );
	};
	
	exports.default = App;

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module, setImmediate, clearImmediate, process) {/*! onsenui v2.2.5 - 2017-04-25 */
	if (!window.CustomEvent) {
	  (function() {
	    var CustomEvent;
	
	    CustomEvent = function(event, params) {
	      var evt;
	      params = params || {
	        bubbles: false,
	        cancelable: false,
	        detail: undefined
	      };
	      evt = document.createEvent("CustomEvent");
	      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
	      return evt;
	    };
	
	    CustomEvent.prototype = window.Event.prototype;
	
	    window.CustomEvent = CustomEvent;
	  })();
	}
	
	/**
	 * @license
	 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
	 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
	 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
	 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
	 * Code distributed by Google as part of the polymer project is also
	 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
	 */
	// @version 0.7.22
	if (typeof WeakMap === "undefined") {
	  (function() {
	    var defineProperty = Object.defineProperty;
	    var counter = Date.now() % 1e9;
	    var WeakMap = function() {
	      this.name = "__st" + (Math.random() * 1e9 >>> 0) + (counter++ + "__");
	    };
	    WeakMap.prototype = {
	      set: function(key, value) {
	        var entry = key[this.name];
	        if (entry && entry[0] === key) entry[1] = value; else defineProperty(key, this.name, {
	          value: [ key, value ],
	          writable: true
	        });
	        return this;
	      },
	      get: function(key) {
	        var entry;
	        return (entry = key[this.name]) && entry[0] === key ? entry[1] : undefined;
	      },
	      "delete": function(key) {
	        var entry = key[this.name];
	        if (!entry || entry[0] !== key) return false;
	        entry[0] = entry[1] = undefined;
	        return true;
	      },
	      has: function(key) {
	        var entry = key[this.name];
	        if (!entry) return false;
	        return entry[0] === key;
	      }
	    };
	    window.WeakMap = WeakMap;
	  })();
	}
	
	(function(global) {
	  if (global.JsMutationObserver) {
	    return;
	  }
	  var registrationsTable = new WeakMap();
	  var setImmediate;
	  if (/Trident|Edge/.test(navigator.userAgent)) {
	    setImmediate = setTimeout;
	  } else if (window.setImmediate) {
	    setImmediate = window.setImmediate;
	  } else {
	    var setImmediateQueue = [];
	    var sentinel = String(Math.random());
	    window.addEventListener("message", function(e) {
	      if (e.data === sentinel) {
	        var queue = setImmediateQueue;
	        setImmediateQueue = [];
	        queue.forEach(function(func) {
	          func();
	        });
	      }
	    });
	    setImmediate = function(func) {
	      setImmediateQueue.push(func);
	      window.postMessage(sentinel, "*");
	    };
	  }
	  var isScheduled = false;
	  var scheduledObservers = [];
	  function scheduleCallback(observer) {
	    scheduledObservers.push(observer);
	    if (!isScheduled) {
	      isScheduled = true;
	      setImmediate(dispatchCallbacks);
	    }
	  }
	  function wrapIfNeeded(node) {
	    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;
	  }
	  function dispatchCallbacks() {
	    isScheduled = false;
	    var observers = scheduledObservers;
	    scheduledObservers = [];
	    observers.sort(function(o1, o2) {
	      return o1.uid_ - o2.uid_;
	    });
	    var anyNonEmpty = false;
	    observers.forEach(function(observer) {
	      var queue = observer.takeRecords();
	      removeTransientObserversFor(observer);
	      if (queue.length) {
	        observer.callback_(queue, observer);
	        anyNonEmpty = true;
	      }
	    });
	    if (anyNonEmpty) dispatchCallbacks();
	  }
	  function removeTransientObserversFor(observer) {
	    observer.nodes_.forEach(function(node) {
	      var registrations = registrationsTable.get(node);
	      if (!registrations) return;
	      registrations.forEach(function(registration) {
	        if (registration.observer === observer) registration.removeTransientObservers();
	      });
	    });
	  }
	  function forEachAncestorAndObserverEnqueueRecord(target, callback) {
	    for (var node = target; node; node = node.parentNode) {
	      var registrations = registrationsTable.get(node);
	      if (registrations) {
	        for (var j = 0; j < registrations.length; j++) {
	          var registration = registrations[j];
	          var options = registration.options;
	          if (node !== target && !options.subtree) continue;
	          var record = callback(options);
	          if (record) registration.enqueue(record);
	        }
	      }
	    }
	  }
	  var uidCounter = 0;
	  function JsMutationObserver(callback) {
	    this.callback_ = callback;
	    this.nodes_ = [];
	    this.records_ = [];
	    this.uid_ = ++uidCounter;
	  }
	  JsMutationObserver.prototype = {
	    observe: function(target, options) {
	      target = wrapIfNeeded(target);
	      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {
	        throw new SyntaxError();
	      }
	      var registrations = registrationsTable.get(target);
	      if (!registrations) registrationsTable.set(target, registrations = []);
	      var registration;
	      for (var i = 0; i < registrations.length; i++) {
	        if (registrations[i].observer === this) {
	          registration = registrations[i];
	          registration.removeListeners();
	          registration.options = options;
	          break;
	        }
	      }
	      if (!registration) {
	        registration = new Registration(this, target, options);
	        registrations.push(registration);
	        this.nodes_.push(target);
	      }
	      registration.addListeners();
	    },
	    disconnect: function() {
	      this.nodes_.forEach(function(node) {
	        var registrations = registrationsTable.get(node);
	        for (var i = 0; i < registrations.length; i++) {
	          var registration = registrations[i];
	          if (registration.observer === this) {
	            registration.removeListeners();
	            registrations.splice(i, 1);
	            break;
	          }
	        }
	      }, this);
	      this.records_ = [];
	    },
	    takeRecords: function() {
	      var copyOfRecords = this.records_;
	      this.records_ = [];
	      return copyOfRecords;
	    }
	  };
	  function MutationRecord(type, target) {
	    this.type = type;
	    this.target = target;
	    this.addedNodes = [];
	    this.removedNodes = [];
	    this.previousSibling = null;
	    this.nextSibling = null;
	    this.attributeName = null;
	    this.attributeNamespace = null;
	    this.oldValue = null;
	  }
	  function copyMutationRecord(original) {
	    var record = new MutationRecord(original.type, original.target);
	    record.addedNodes = original.addedNodes.slice();
	    record.removedNodes = original.removedNodes.slice();
	    record.previousSibling = original.previousSibling;
	    record.nextSibling = original.nextSibling;
	    record.attributeName = original.attributeName;
	    record.attributeNamespace = original.attributeNamespace;
	    record.oldValue = original.oldValue;
	    return record;
	  }
	  var currentRecord, recordWithOldValue;
	  function getRecord(type, target) {
	    return currentRecord = new MutationRecord(type, target);
	  }
	  function getRecordWithOldValue(oldValue) {
	    if (recordWithOldValue) return recordWithOldValue;
	    recordWithOldValue = copyMutationRecord(currentRecord);
	    recordWithOldValue.oldValue = oldValue;
	    return recordWithOldValue;
	  }
	  function clearRecords() {
	    currentRecord = recordWithOldValue = undefined;
	  }
	  function recordRepresentsCurrentMutation(record) {
	    return record === recordWithOldValue || record === currentRecord;
	  }
	  function selectRecord(lastRecord, newRecord) {
	    if (lastRecord === newRecord) return lastRecord;
	    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;
	    return null;
	  }
	  function Registration(observer, target, options) {
	    this.observer = observer;
	    this.target = target;
	    this.options = options;
	    this.transientObservedNodes = [];
	  }
	  Registration.prototype = {
	    enqueue: function(record) {
	      var records = this.observer.records_;
	      var length = records.length;
	      if (records.length > 0) {
	        var lastRecord = records[length - 1];
	        var recordToReplaceLast = selectRecord(lastRecord, record);
	        if (recordToReplaceLast) {
	          records[length - 1] = recordToReplaceLast;
	          return;
	        }
	      } else {
	        scheduleCallback(this.observer);
	      }
	      records[length] = record;
	    },
	    addListeners: function() {
	      this.addListeners_(this.target);
	    },
	    addListeners_: function(node) {
	      var options = this.options;
	      if (options.attributes) node.addEventListener("DOMAttrModified", this, true);
	      if (options.characterData) node.addEventListener("DOMCharacterDataModified", this, true);
	      if (options.childList) node.addEventListener("DOMNodeInserted", this, true);
	      if (options.childList || options.subtree) node.addEventListener("DOMNodeRemoved", this, true);
	    },
	    removeListeners: function() {
	      this.removeListeners_(this.target);
	    },
	    removeListeners_: function(node) {
	      var options = this.options;
	      if (options.attributes) node.removeEventListener("DOMAttrModified", this, true);
	      if (options.characterData) node.removeEventListener("DOMCharacterDataModified", this, true);
	      if (options.childList) node.removeEventListener("DOMNodeInserted", this, true);
	      if (options.childList || options.subtree) node.removeEventListener("DOMNodeRemoved", this, true);
	    },
	    addTransientObserver: function(node) {
	      if (node === this.target) return;
	      this.addListeners_(node);
	      this.transientObservedNodes.push(node);
	      var registrations = registrationsTable.get(node);
	      if (!registrations) registrationsTable.set(node, registrations = []);
	      registrations.push(this);
	    },
	    removeTransientObservers: function() {
	      var transientObservedNodes = this.transientObservedNodes;
	      this.transientObservedNodes = [];
	      transientObservedNodes.forEach(function(node) {
	        this.removeListeners_(node);
	        var registrations = registrationsTable.get(node);
	        for (var i = 0; i < registrations.length; i++) {
	          if (registrations[i] === this) {
	            registrations.splice(i, 1);
	            break;
	          }
	        }
	      }, this);
	    },
	    handleEvent: function(e) {
	      e.stopImmediatePropagation();
	      switch (e.type) {
	       case "DOMAttrModified":
	        var name = e.attrName;
	        var namespace = e.relatedNode.namespaceURI;
	        var target = e.target;
	        var record = new getRecord("attributes", target);
	        record.attributeName = name;
	        record.attributeNamespace = namespace;
	        var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;
	        forEachAncestorAndObserverEnqueueRecord(target, function(options) {
	          if (!options.attributes) return;
	          if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {
	            return;
	          }
	          if (options.attributeOldValue) return getRecordWithOldValue(oldValue);
	          return record;
	        });
	        break;
	
	       case "DOMCharacterDataModified":
	        var target = e.target;
	        var record = getRecord("characterData", target);
	        var oldValue = e.prevValue;
	        forEachAncestorAndObserverEnqueueRecord(target, function(options) {
	          if (!options.characterData) return;
	          if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);
	          return record;
	        });
	        break;
	
	       case "DOMNodeRemoved":
	        this.addTransientObserver(e.target);
	
	       case "DOMNodeInserted":
	        var changedNode = e.target;
	        var addedNodes, removedNodes;
	        if (e.type === "DOMNodeInserted") {
	          addedNodes = [ changedNode ];
	          removedNodes = [];
	        } else {
	          addedNodes = [];
	          removedNodes = [ changedNode ];
	        }
	        var previousSibling = changedNode.previousSibling;
	        var nextSibling = changedNode.nextSibling;
	        var record = getRecord("childList", e.target.parentNode);
	        record.addedNodes = addedNodes;
	        record.removedNodes = removedNodes;
	        record.previousSibling = previousSibling;
	        record.nextSibling = nextSibling;
	        forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function(options) {
	          if (!options.childList) return;
	          return record;
	        });
	      }
	      clearRecords();
	    }
	  };
	  global.JsMutationObserver = JsMutationObserver;
	  if (!global.MutationObserver) {
	    global.MutationObserver = JsMutationObserver;
	    JsMutationObserver._isPolyfilled = true;
	  }
	})(self);
	/*
	 * childNode.remove method polyfill for IE.
	 * https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove
	 */
	
	(function() {
		if (!('remove' in Element.prototype)) {
		  Element.prototype.remove = function() {
		    if (this.parentNode) {
		    	this.parentNode.removeChild(this);
		    }
		  };
		}
	})();
	
	/*
	 * classList.js: Cross-browser full element.classList implementation.
	 * 1.1.20150312
	 *
	 * By Eli Grey, http://eligrey.com
	 * License: Dedicated to the public domain.
	 *   See https://github.com/eligrey/classList.js/blob/master/LICENSE.md
	 */
	
	/*global self, document, DOMException */
	
	/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */
	
	if ("document" in self) {
	
	// Full polyfill for browsers with no classList support
	// Including IE < Edge missing SVGElement.classList
	if (!("classList" in document.createElement("_"))
	  || document.createElementNS && !("classList" in document.createElementNS("http://www.w3.org/2000/svg","g"))) {
	
	(function (view) {
	
	"use strict";
	
	if (!('Element' in view)) return;
	
	var
	    classListProp = "classList"
	  , protoProp = "prototype"
	  , elemCtrProto = view.Element[protoProp]
	  , objCtr = Object
	  , strTrim = String[protoProp].trim || function () {
	    return this.replace(/^\s+|\s+$/g, "");
	  }
	  , arrIndexOf = Array[protoProp].indexOf || function (item) {
	    var
	        i = 0
	      , len = this.length
	    ;
	    for (; i < len; i++) {
	      if (i in this && this[i] === item) {
	        return i;
	      }
	    }
	    return -1;
	  }
	  // Vendors: please allow content code to instantiate DOMExceptions
	  , DOMEx = function (type, message) {
	    this.name = type;
	    this.code = DOMException[type];
	    this.message = message;
	  }
	  , checkTokenAndGetIndex = function (classList, token) {
	    if (token === "") {
	      throw new DOMEx(
	          "SYNTAX_ERR"
	        , "An invalid or illegal string was specified"
	      );
	    }
	    if (/\s/.test(token)) {
	      throw new DOMEx(
	          "INVALID_CHARACTER_ERR"
	        , "String contains an invalid character"
	      );
	    }
	    return arrIndexOf.call(classList, token);
	  }
	  , ClassList = function (elem) {
	    var
	        trimmedClasses = strTrim.call(elem.getAttribute("class") || "")
	      , classes = trimmedClasses ? trimmedClasses.split(/\s+/) : []
	      , i = 0
	      , len = classes.length
	    ;
	    for (; i < len; i++) {
	      this.push(classes[i]);
	    }
	    this._updateClassName = function () {
	      elem.setAttribute("class", this.toString());
	    };
	  }
	  , classListProto = ClassList[protoProp] = []
	  , classListGetter = function () {
	    return new ClassList(this);
	  }
	;
	// Most DOMException implementations don't allow calling DOMException's toString()
	// on non-DOMExceptions. Error's toString() is sufficient here.
	DOMEx[protoProp] = Error[protoProp];
	classListProto.item = function (i) {
	  return this[i] || null;
	};
	classListProto.contains = function (token) {
	  token += "";
	  return checkTokenAndGetIndex(this, token) !== -1;
	};
	classListProto.add = function () {
	  var
	      tokens = arguments
	    , i = 0
	    , l = tokens.length
	    , token
	    , updated = false
	  ;
	  do {
	    token = tokens[i] + "";
	    if (checkTokenAndGetIndex(this, token) === -1) {
	      this.push(token);
	      updated = true;
	    }
	  }
	  while (++i < l);
	
	  if (updated) {
	    this._updateClassName();
	  }
	};
	classListProto.remove = function () {
	  var
	      tokens = arguments
	    , i = 0
	    , l = tokens.length
	    , token
	    , updated = false
	    , index
	  ;
	  do {
	    token = tokens[i] + "";
	    index = checkTokenAndGetIndex(this, token);
	    while (index !== -1) {
	      this.splice(index, 1);
	      updated = true;
	      index = checkTokenAndGetIndex(this, token);
	    }
	  }
	  while (++i < l);
	
	  if (updated) {
	    this._updateClassName();
	  }
	};
	classListProto.toggle = function (token, force) {
	  token += "";
	
	  var
	      result = this.contains(token)
	    , method = result ?
	      force !== true && "remove"
	    :
	      force !== false && "add"
	  ;
	
	  if (method) {
	    this[method](token);
	  }
	
	  if (force === true || force === false) {
	    return force;
	  } else {
	    return !result;
	  }
	};
	classListProto.toString = function () {
	  return this.join(" ");
	};
	
	if (objCtr.defineProperty) {
	  var classListPropDesc = {
	      get: classListGetter
	    , enumerable: true
	    , configurable: true
	  };
	  try {
	    objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
	  } catch (ex) { // IE 8 doesn't support enumerable:true
	    if (ex.number === -0x7FF5EC54) {
	      classListPropDesc.enumerable = false;
	      objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
	    }
	  }
	} else if (objCtr[protoProp].__defineGetter__) {
	  elemCtrProto.__defineGetter__(classListProp, classListGetter);
	}
	
	}(self));
	
	} else {
	// There is full or partial native classList support, so just check if we need
	// to normalize the add/remove and toggle APIs.
	
	(function () {
	  "use strict";
	
	  var testElement = document.createElement("_");
	
	  testElement.classList.add("c1", "c2");
	
	  // Polyfill for IE 10/11 and Firefox <26, where classList.add and
	  // classList.remove exist but support only one argument at a time.
	  if (!testElement.classList.contains("c2")) {
	    var createMethod = function(method) {
	      var original = DOMTokenList.prototype[method];
	
	      DOMTokenList.prototype[method] = function(token) {
	        var i, len = arguments.length;
	
	        for (i = 0; i < len; i++) {
	          token = arguments[i];
	          original.call(this, token);
	        }
	      };
	    };
	    createMethod('add');
	    createMethod('remove');
	  }
	
	  testElement.classList.toggle("c3", false);
	
	  // Polyfill for IE 10 and Firefox <24, where classList.toggle does not
	  // support the second argument.
	  if (testElement.classList.contains("c3")) {
	    var _toggle = DOMTokenList.prototype.toggle;
	
	    DOMTokenList.prototype.toggle = function(token, force) {
	      if (1 in arguments && !this.contains(token) === !force) {
	        return force;
	      } else {
	        return _toggle.call(this, token);
	      }
	    };
	
	  }
	
	  testElement = null;
	}());
	
	}
	
	}
	
	
	;(function () {
		'use strict';
	
		/**
		 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
		 *
		 * @codingstandard ftlabs-jsv2
		 * @copyright The Financial Times Limited [All Rights Reserved]
		 * @license MIT License (see LICENSE.txt)
		 */
	
		/*jslint browser:true, node:true*/
		/*global define, Event, Node*/
	
	
		/**
		 * Instantiate fast-clicking listeners on the specified layer.
		 *
		 * @constructor
		 * @param {Element} layer The layer to listen on
		 * @param {Object} [options={}] The options to override the defaults
		 */
		function FastClick(layer, options) {
			var oldOnClick;
	
			options = options || {};
	
			/**
			 * Whether a click is currently being tracked.
			 *
			 * @type boolean
			 */
			this.trackingClick = false;
	
	
			/**
			 * Timestamp for when click tracking started.
			 *
			 * @type number
			 */
			this.trackingClickStart = 0;
	
	
			/**
			 * The element being tracked for a click.
			 *
			 * @type EventTarget
			 */
			this.targetElement = null;
	
	
			/**
			 * X-coordinate of touch start event.
			 *
			 * @type number
			 */
			this.touchStartX = 0;
	
	
			/**
			 * Y-coordinate of touch start event.
			 *
			 * @type number
			 */
			this.touchStartY = 0;
	
	
			/**
			 * ID of the last touch, retrieved from Touch.identifier.
			 *
			 * @type number
			 */
			this.lastTouchIdentifier = 0;
	
	
			/**
			 * Touchmove boundary, beyond which a click will be cancelled.
			 *
			 * @type number
			 */
			this.touchBoundary = options.touchBoundary || 10;
	
	
			/**
			 * The FastClick layer.
			 *
			 * @type Element
			 */
			this.layer = layer;
	
			/**
			 * The minimum time between tap(touchstart and touchend) events
			 *
			 * @type number
			 */
			this.tapDelay = options.tapDelay || 200;
	
			/**
			 * The maximum time for a tap
			 *
			 * @type number
			 */
			this.tapTimeout = options.tapTimeout || 700;
	
			if (FastClick.notNeeded(layer)) {
				return;
			}
	
			// Some old versions of Android don't have Function.prototype.bind
			function bind(method, context) {
				return function() { return method.apply(context, arguments); };
			}
	
	
			var methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];
			var context = this;
			for (var i = 0, l = methods.length; i < l; i++) {
				context[methods[i]] = bind(context[methods[i]], context);
			}
	
			// Set up event handlers as required
			if (deviceIsAndroid) {
				layer.addEventListener('mouseover', this.onMouse, true);
				layer.addEventListener('mousedown', this.onMouse, true);
				layer.addEventListener('mouseup', this.onMouse, true);
			}
	
			layer.addEventListener('click', this.onClick, true);
			layer.addEventListener('touchstart', this.onTouchStart, false);
			layer.addEventListener('touchmove', this.onTouchMove, false);
			layer.addEventListener('touchend', this.onTouchEnd, false);
			layer.addEventListener('touchcancel', this.onTouchCancel, false);
	
			// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
			// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
			// layer when they are cancelled.
			if (!Event.prototype.stopImmediatePropagation) {
				layer.removeEventListener = function(type, callback, capture) {
					var rmv = Node.prototype.removeEventListener;
					if (type === 'click') {
						rmv.call(layer, type, callback.hijacked || callback, capture);
					} else {
						rmv.call(layer, type, callback, capture);
					}
				};
	
				layer.addEventListener = function(type, callback, capture) {
					var adv = Node.prototype.addEventListener;
					if (type === 'click') {
						adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
							if (!event.propagationStopped) {
								callback(event);
							}
						}), capture);
					} else {
						adv.call(layer, type, callback, capture);
					}
				};
			}
	
			// If a handler is already declared in the element's onclick attribute, it will be fired before
			// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
			// adding it as listener.
			if (typeof layer.onclick === 'function') {
	
				// Android browser on at least 3.2 requires a new reference to the function in layer.onclick
				// - the old one won't work if passed to addEventListener directly.
				oldOnClick = layer.onclick;
				layer.addEventListener('click', function(event) {
					oldOnClick(event);
				}, false);
				layer.onclick = null;
			}
		}
	
		/**
		* Windows Phone 8.1 fakes user agent string to look like Android and iPhone.
		*
		* @type boolean
		*/
		var deviceIsWindowsPhone = navigator.userAgent.indexOf("Windows Phone") >= 0;
	
		/**
		 * Android requires exceptions.
		 *
		 * @type boolean
		 */
		var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;
	
	
		/**
		 * iOS requires exceptions.
		 *
		 * @type boolean
		 */
		var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;
	
	
		/**
		 * iOS 4 requires an exception for select elements.
		 *
		 * @type boolean
		 */
		var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);
	
	
		/**
		 * iOS 6.0-7.* requires the target element to be manually derived
		 *
		 * @type boolean
		 */
		var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\d/).test(navigator.userAgent);
	
		/**
		 * BlackBerry requires exceptions.
		 *
		 * @type boolean
		 */
		var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;
	
		/**
		 * Determine whether a given element requires a native click.
		 *
		 * @param {EventTarget|Element} target Target DOM element
		 * @returns {boolean} Returns true if the element needs a native click
		 */
		FastClick.prototype.needsClick = function(target) {
			switch (target.nodeName.toLowerCase()) {
	
			// Don't send a synthetic click to disabled inputs (issue #62)
			case 'button':
			case 'select':
			case 'textarea':
				if (target.disabled) {
					return true;
				}
	
				break;
			case 'input':
	
				// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
				if ((deviceIsIOS && target.type === 'file') || target.disabled) {
					return true;
				}
	
				break;
			case 'label':
			case 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames
			case 'video':
				return true;
			}
	
			return (/\bneedsclick\b/).test(target.className);
		};
	
	
		/**
		 * Determine whether a given element requires a call to focus to simulate click into element.
		 *
		 * @param {EventTarget|Element} target Target DOM element
		 * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
		 */
		FastClick.prototype.needsFocus = function(target) {
			switch (target.nodeName.toLowerCase()) {
			case 'textarea':
				return true;
			case 'select':
				return !deviceIsAndroid;
			case 'input':
				switch (target.type) {
				case 'button':
				case 'checkbox':
				case 'file':
				case 'image':
				case 'radio':
				case 'submit':
					return false;
				}
	
				// No point in attempting to focus disabled inputs
				return !target.disabled && !target.readOnly;
			default:
				return (/\bneedsfocus\b/).test(target.className);
			}
		};
	
	
		/**
		 * Send a click event to the specified element.
		 *
		 * @param {EventTarget|Element} targetElement
		 * @param {Event} event
		 */
		FastClick.prototype.sendClick = function(targetElement, event) {
			var clickEvent, touch;
	
			// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
			if (document.activeElement && document.activeElement !== targetElement) {
				document.activeElement.blur();
			}
	
			touch = event.changedTouches[0];
	
			// Synthesize a click event, with an extra attribute so it can be tracked
			clickEvent = document.createEvent('MouseEvents');
			clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
			clickEvent.forwardedTouchEvent = true;
			targetElement.dispatchEvent(clickEvent);
		};
	
		FastClick.prototype.determineEventType = function(targetElement) {
	
			//Issue #159: Android Chrome Select Box does not open with a synthetic click event
			if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
				return 'mousedown';
			}
	
			return 'click';
		};
	
	
		/**
		 * @param {EventTarget|Element} targetElement
		 */
		FastClick.prototype.focus = function(targetElement) {
			var length;
	
			// Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
			if (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') {
				length = targetElement.value.length;
				targetElement.setSelectionRange(length, length);
			} else {
				targetElement.focus();
			}
		};
	
	
		/**
		 * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
		 *
		 * @param {EventTarget|Element} targetElement
		 */
		FastClick.prototype.updateScrollParent = function(targetElement) {
			var scrollParent, parentElement;
	
			scrollParent = targetElement.fastClickScrollParent;
	
			// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
			// target element was moved to another parent.
			if (!scrollParent || !scrollParent.contains(targetElement)) {
				parentElement = targetElement;
				do {
					if (parentElement.scrollHeight > parentElement.offsetHeight) {
						scrollParent = parentElement;
						targetElement.fastClickScrollParent = parentElement;
						break;
					}
	
					parentElement = parentElement.parentElement;
				} while (parentElement);
			}
	
			// Always update the scroll top tracker if possible.
			if (scrollParent) {
				scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
			}
		};
	
	
		/**
		 * @param {EventTarget} targetElement
		 * @returns {Element|EventTarget}
		 */
		FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {
	
			// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
			if (eventTarget.nodeType === Node.TEXT_NODE) {
				return eventTarget.parentNode;
			}
	
			return eventTarget;
		};
	
	
		/**
		 * On touch start, record the position and scroll offset.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */
		FastClick.prototype.onTouchStart = function(event) {
			var targetElement, touch, selection;
	
			// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
			if (event.targetTouches.length > 1) {
				return true;
			}
	
			targetElement = this.getTargetElementFromEventTarget(event.target);
			touch = event.targetTouches[0];
	
			// Ignore touches on contenteditable elements to prevent conflict with text selection.
			// (For details: https://github.com/ftlabs/fastclick/pull/211 )
			if (targetElement.isContentEditable) {
				return true;
			}
	
			if (deviceIsIOS) {
	
				// Only trusted events will deselect text on iOS (issue #49)
				selection = window.getSelection();
				if (selection.rangeCount && !selection.isCollapsed) {
					return true;
				}
	
				if (!deviceIsIOS4) {
	
					// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
					// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
					// with the same identifier as the touch event that previously triggered the click that triggered the alert.
					// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
					// immediately preceding touch event (issue #52), so this fix is unavailable on that platform.
					// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
					// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
					// random integers, it's safe to to continue if the identifier is 0 here.
					if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
						event.preventDefault();
						return false;
					}
	
					this.lastTouchIdentifier = touch.identifier;
	
					// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
					// 1) the user does a fling scroll on the scrollable layer
					// 2) the user stops the fling scroll with another tap
					// then the event.target of the last 'touchend' event will be the element that was under the user's finger
					// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
					// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
					this.updateScrollParent(targetElement);
				}
			}
	
			this.trackingClick = true;
			this.trackingClickStart = event.timeStamp;
			this.targetElement = targetElement;
	
			this.touchStartX = touch.pageX;
			this.touchStartY = touch.pageY;
	
			// Prevent phantom clicks on fast double-tap (issue #36)
			if ((event.timeStamp - this.lastClickTime) < this.tapDelay && (event.timeStamp - this.lastClickTime) > -1) {
				event.preventDefault();
			}
	
			return true;
		};
	
	
		/**
		 * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */
		FastClick.prototype.touchHasMoved = function(event) {
			var touch = event.changedTouches[0], boundary = this.touchBoundary;
	
			if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
				return true;
			}
	
			return false;
		};
	
	
		/**
		 * Update the last position.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */
		FastClick.prototype.onTouchMove = function(event) {
			if (!this.trackingClick) {
				return true;
			}
	
			// If the touch has moved, cancel the click tracking
			if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
				this.trackingClick = false;
				this.targetElement = null;
			}
	
			return true;
		};
	
	
		/**
		 * Attempt to find the labelled control for the given label element.
		 *
		 * @param {EventTarget|HTMLLabelElement} labelElement
		 * @returns {Element|null}
		 */
		FastClick.prototype.findControl = function(labelElement) {
	
			// Fast path for newer browsers supporting the HTML5 control attribute
			if (labelElement.control !== undefined) {
				return labelElement.control;
			}
	
			// All browsers under test that support touch events also support the HTML5 htmlFor attribute
			if (labelElement.htmlFor) {
				return document.getElementById(labelElement.htmlFor);
			}
	
			// If no for attribute exists, attempt to retrieve the first labellable descendant element
			// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
			return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
		};
	
	
		/**
		 * On touch end, determine whether to send a click event at once.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */
		FastClick.prototype.onTouchEnd = function(event) {
			var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;
	
			if (!this.trackingClick) {
				return true;
			}
	
			// Prevent phantom clicks on fast double-tap (issue #36)
			if ((event.timeStamp - this.lastClickTime) < this.tapDelay && (event.timeStamp - this.lastClickTime) > -1) {
				this.cancelNextClick = true;
				return true;
			}
	
			if ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {
				return true;
			}
	
			// Reset to prevent wrong click cancel on input (issue #156).
			this.cancelNextClick = false;
	
			this.lastClickTime = event.timeStamp;
	
			trackingClickStart = this.trackingClickStart;
			this.trackingClick = false;
			this.trackingClickStart = 0;
	
			// On some iOS devices, the targetElement supplied with the event is invalid if the layer
			// is performing a transition or scroll, and has to be re-detected manually. Note that
			// for this to function correctly, it must be called *after* the event target is checked!
			// See issue #57; also filed as rdar://13048589 .
			if (deviceIsIOSWithBadTarget) {
				touch = event.changedTouches[0];
	
				// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
				targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
				targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
			}
	
			targetTagName = targetElement.tagName.toLowerCase();
			if (targetTagName === 'label') {
				forElement = this.findControl(targetElement);
				if (forElement) {
					this.focus(targetElement);
					if (deviceIsAndroid) {
						return false;
					}
	
					targetElement = forElement;
				}
			} else if (this.needsFocus(targetElement)) {
	
				// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
				// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
				if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {
					this.targetElement = null;
					return false;
				}
	
				this.focus(targetElement);
				this.sendClick(targetElement, event);
	
				// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
				// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
				if (!deviceIsIOS || targetTagName !== 'select') {
					this.targetElement = null;
					event.preventDefault();
				}
	
				return false;
			}
	
			if (deviceIsIOS && !deviceIsIOS4) {
	
				// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
				// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
				scrollParent = targetElement.fastClickScrollParent;
				if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
					return true;
				}
			}
	
			// Prevent the actual click from going though - unless the target node is marked as requiring
			// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
			if (!this.needsClick(targetElement)) {
				event.preventDefault();
				this.sendClick(targetElement, event);
			}
	
			return false;
		};
	
	
		/**
		 * On touch cancel, stop tracking the click.
		 *
		 * @returns {void}
		 */
		FastClick.prototype.onTouchCancel = function() {
			this.trackingClick = false;
			this.targetElement = null;
		};
	
	
		/**
		 * Determine mouse events which should be permitted.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */
		FastClick.prototype.onMouse = function(event) {
	
			// If a target element was never set (because a touch event was never fired) allow the event
			if (!this.targetElement) {
				return true;
			}
	
			if (event.forwardedTouchEvent) {
				return true;
			}
	
			// Programmatically generated events targeting a specific element should be permitted
			if (!event.cancelable) {
				return true;
			}
	
			// Derive and check the target element to see whether the mouse event needs to be permitted;
			// unless explicitly enabled, prevent non-touch click events from triggering actions,
			// to prevent ghost/doubleclicks.
			if (!this.needsClick(this.targetElement) || this.cancelNextClick) {
	
				// Prevent any user-added listeners declared on FastClick element from being fired.
				if (event.stopImmediatePropagation) {
					event.stopImmediatePropagation();
				} else {
	
					// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
					event.propagationStopped = true;
				}
	
				// Cancel the event
				event.stopPropagation();
				event.preventDefault();
	
				return false;
			}
	
			// If the mouse event is permitted, return true for the action to go through.
			return true;
		};
	
	
		/**
		 * On actual clicks, determine whether this is a touch-generated click, a click action occurring
		 * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
		 * an actual click which should be permitted.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */
		FastClick.prototype.onClick = function(event) {
			var permitted;
	
			// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
			if (this.trackingClick) {
				this.targetElement = null;
				this.trackingClick = false;
				return true;
			}
	
			// Very odd behavior on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
			if (event.target.type === 'submit' && event.detail === 0) {
				return true;
			}
	
			permitted = this.onMouse(event);
	
			// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
			if (!permitted) {
				this.targetElement = null;
			}
	
			// If clicks are permitted, return true for the action to go through.
			return permitted;
		};
	
	
		/**
		 * Remove all FastClick's event listeners.
		 *
		 * @returns {void}
		 */
		FastClick.prototype.destroy = function() {
			var layer = this.layer;
	
			if (deviceIsAndroid) {
				layer.removeEventListener('mouseover', this.onMouse, true);
				layer.removeEventListener('mousedown', this.onMouse, true);
				layer.removeEventListener('mouseup', this.onMouse, true);
			}
	
			layer.removeEventListener('click', this.onClick, true);
			layer.removeEventListener('touchstart', this.onTouchStart, false);
			layer.removeEventListener('touchmove', this.onTouchMove, false);
			layer.removeEventListener('touchend', this.onTouchEnd, false);
			layer.removeEventListener('touchcancel', this.onTouchCancel, false);
		};
	
	
		/**
		 * Check whether FastClick is needed.
		 *
		 * @param {Element} layer The layer to listen on
		 */
		FastClick.notNeeded = function(layer) {
			var metaViewport;
			var chromeVersion;
			var blackberryVersion;
			var firefoxVersion;
	
			// Devices that don't support touch don't need FastClick
			if (typeof window.ontouchstart === 'undefined') {
				return true;
			}
	
			// Chrome version - zero for other browsers
			chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];
	
			if (chromeVersion) {
	
				if (deviceIsAndroid) {
					metaViewport = document.querySelector('meta[name=viewport]');
	
					if (metaViewport) {
						// Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
						if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
							return true;
						}
						// Chrome 32 and above with width=device-width or less don't need FastClick
						if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {
							return true;
						}
					}
	
				// Chrome desktop doesn't need FastClick (issue #15)
				} else {
					return true;
				}
			}
	
			if (deviceIsBlackBerry10) {
				blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/);
	
				// BlackBerry 10.3+ does not require Fastclick library.
				// https://github.com/ftlabs/fastclick/issues/251
				if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
					metaViewport = document.querySelector('meta[name=viewport]');
	
					if (metaViewport) {
						// user-scalable=no eliminates click delay.
						if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
							return true;
						}
						// width=device-width (or less than device-width) eliminates click delay.
						if (document.documentElement.scrollWidth <= window.outerWidth) {
							return true;
						}
					}
				}
			}
	
			// IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)
			if (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {
				return true;
			}
	
			// Firefox version - zero for other browsers
			firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];
	
			if (firefoxVersion >= 27) {
				// Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896
	
				metaViewport = document.querySelector('meta[name=viewport]');
				if (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {
					return true;
				}
			}
	
			// IE11: prefixed -ms-touch-action is no longer supported and it's recommended to use non-prefixed version
			// http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx
			if (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {
				return true;
			}
	
			return false;
		};
	
	
		/**
		 * Factory method for creating a FastClick object
		 *
		 * @param {Element} layer The layer to listen on
		 * @param {Object} [options={}] The options to override the defaults
		 */
		FastClick.attach = function(layer, options) {
			return new FastClick(layer, options);
		};
	
	  window.FastClick = FastClick;
	}());
	
	/**
	 * MicroEvent - to make any js object an event emitter (server or browser)
	 * 
	 * - pure javascript - server compatible, browser compatible
	 * - dont rely on the browser doms
	 * - super simple - you get it immediately, no mystery, no magic involved
	 *
	 * - create a MicroEventDebug with goodies to debug
	 *   - make it safer to use
	*/
	
	/** NOTE: This library is customized for Onsen UI. */
	
	var MicroEvent  = function(){};
	MicroEvent.prototype  = {
	  on  : function(event, fct){
	    this._events = this._events || {};
	    this._events[event] = this._events[event] || [];
	    this._events[event].push(fct);
	  },
	  once : function(event, fct){
	    var self = this;
	    var wrapper = function() {
	      self.off(event, wrapper);
	      return fct.apply(null, arguments);
	    };
	    this.on(event, wrapper);
	  },
	  off  : function(event, fct){
	    this._events = this._events || {};
	    if( event in this._events === false  )  return;
	
	    this._events[event] = this._events[event]
	      .filter(function(_fct) {
	        if (fct) {
	           return fct !== _fct;
	        }
	        else {
	          return false;
	        }
	      });
	  },
	  emit : function(event /* , args... */){
	    this._events = this._events || {};
	    if( event in this._events === false  )  return;
	    for(var i = 0; i < this._events[event].length; i++){
	      this._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));
	    }
	  }
	};
	
	/**
	 * mixin will delegate all MicroEvent.js function in the destination object
	 *
	 * - require('MicroEvent').mixin(Foobar) will make Foobar able to use MicroEvent
	 *
	 * @param {Object} the object which will support MicroEvent
	*/
	MicroEvent.mixin  = function(destObject){
	  var props = ['on', 'once', 'off', 'emit'];
	  for(var i = 0; i < props.length; i ++){
	    if( typeof destObject === 'function' ){
	      destObject.prototype[props[i]]  = MicroEvent.prototype[props[i]];
	    }else{
	      destObject[props[i]] = MicroEvent.prototype[props[i]];
	    }
	  }
	}
	
	// export in common js
	if( typeof module !== "undefined" && ('exports' in module)){
	  module.exports  = MicroEvent;
	}
	
	window.MicroEvent = MicroEvent;
	
	(function (root) {
	
	  // Store setTimeout reference so promise-polyfill will be unaffected by
	  // other code modifying setTimeout (like sinon.useFakeTimers())
	  var setTimeoutFunc = setTimeout;
	
	  function noop() {}
	  
	  // Polyfill for Function.prototype.bind
	  function bind(fn, thisArg) {
	    return function () {
	      fn.apply(thisArg, arguments);
	    };
	  }
	
	  function Promise(fn) {
	    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');
	    if (typeof fn !== 'function') throw new TypeError('not a function');
	    this._state = 0;
	    this._handled = false;
	    this._value = undefined;
	    this._deferreds = [];
	
	    doResolve(fn, this);
	  }
	
	  function handle(self, deferred) {
	    while (self._state === 3) {
	      self = self._value;
	    }
	    if (self._state === 0) {
	      self._deferreds.push(deferred);
	      return;
	    }
	    self._handled = true;
	    Promise._immediateFn(function () {
	      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
	      if (cb === null) {
	        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
	        return;
	      }
	      var ret;
	      try {
	        ret = cb(self._value);
	      } catch (e) {
	        reject(deferred.promise, e);
	        return;
	      }
	      resolve(deferred.promise, ret);
	    });
	  }
	
	  function resolve(self, newValue) {
	    try {
	      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
	      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');
	      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
	        var then = newValue.then;
	        if (newValue instanceof Promise) {
	          self._state = 3;
	          self._value = newValue;
	          finale(self);
	          return;
	        } else if (typeof then === 'function') {
	          doResolve(bind(then, newValue), self);
	          return;
	        }
	      }
	      self._state = 1;
	      self._value = newValue;
	      finale(self);
	    } catch (e) {
	      reject(self, e);
	    }
	  }
	
	  function reject(self, newValue) {
	    self._state = 2;
	    self._value = newValue;
	    finale(self);
	  }
	
	  function finale(self) {
	    if (self._state === 2 && self._deferreds.length === 0) {
	      Promise._immediateFn(function() {
	        if (!self._handled) {
	          Promise._unhandledRejectionFn(self._value);
	        }
	      });
	    }
	
	    for (var i = 0, len = self._deferreds.length; i < len; i++) {
	      handle(self, self._deferreds[i]);
	    }
	    self._deferreds = null;
	  }
	
	  function Handler(onFulfilled, onRejected, promise) {
	    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
	    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
	    this.promise = promise;
	  }
	
	  /**
	   * Take a potentially misbehaving resolver function and make sure
	   * onFulfilled and onRejected are only called once.
	   *
	   * Makes no guarantees about asynchrony.
	   */
	  function doResolve(fn, self) {
	    var done = false;
	    try {
	      fn(function (value) {
	        if (done) return;
	        done = true;
	        resolve(self, value);
	      }, function (reason) {
	        if (done) return;
	        done = true;
	        reject(self, reason);
	      });
	    } catch (ex) {
	      if (done) return;
	      done = true;
	      reject(self, ex);
	    }
	  }
	
	  Promise.prototype['catch'] = function (onRejected) {
	    return this.then(null, onRejected);
	  };
	
	  Promise.prototype.then = function (onFulfilled, onRejected) {
	    var prom = new (this.constructor)(noop);
	
	    handle(this, new Handler(onFulfilled, onRejected, prom));
	    return prom;
	  };
	
	  Promise.all = function (arr) {
	    var args = Array.prototype.slice.call(arr);
	
	    return new Promise(function (resolve, reject) {
	      if (args.length === 0) return resolve([]);
	      var remaining = args.length;
	
	      function res(i, val) {
	        try {
	          if (val && (typeof val === 'object' || typeof val === 'function')) {
	            var then = val.then;
	            if (typeof then === 'function') {
	              then.call(val, function (val) {
	                res(i, val);
	              }, reject);
	              return;
	            }
	          }
	          args[i] = val;
	          if (--remaining === 0) {
	            resolve(args);
	          }
	        } catch (ex) {
	          reject(ex);
	        }
	      }
	
	      for (var i = 0; i < args.length; i++) {
	        res(i, args[i]);
	      }
	    });
	  };
	
	  Promise.resolve = function (value) {
	    if (value && typeof value === 'object' && value.constructor === Promise) {
	      return value;
	    }
	
	    return new Promise(function (resolve) {
	      resolve(value);
	    });
	  };
	
	  Promise.reject = function (value) {
	    return new Promise(function (resolve, reject) {
	      reject(value);
	    });
	  };
	
	  Promise.race = function (values) {
	    return new Promise(function (resolve, reject) {
	      for (var i = 0, len = values.length; i < len; i++) {
	        values[i].then(resolve, reject);
	      }
	    });
	  };
	
	  // Use polyfill for setImmediate for performance gains
	  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||
	    function (fn) {
	      setTimeoutFunc(fn, 0);
	    };
	
	  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
	    if (typeof console !== 'undefined' && console) {
	      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
	    }
	  };
	
	  /**
	   * Set the immediate function to execute callbacks
	   * @param fn {function} Function to execute
	   * @deprecated
	   */
	  Promise._setImmediateFn = function _setImmediateFn(fn) {
	    Promise._immediateFn = fn;
	  };
	
	  /**
	   * Change the function to execute on unhandled rejection
	   * @param {function} fn Function to execute on unhandled rejection
	   * @deprecated
	   */
	  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {
	    Promise._unhandledRejectionFn = fn;
	  };
	
	  if (!window.Promise) {
	    window.Promise = Promise;
	  }
	})(this);
	
	/*
	Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola
	
	Permission is hereby granted, free of charge, to any person obtaining
	a copy of this software and associated documentation files (the
	"Software"), to deal in the Software without restriction, including
	without limitation the rights to use, copy, modify, merge, publish,
	distribute, sublicense, and/or sell copies of the Software, and to
	permit persons to whom the Software is furnished to do so, subject to
	the following conditions:
	
	The above copyright notice and this permission notice shall be
	included in all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
	LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
	OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
	WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	*/
	(function (global, undefined) {
	    "use strict";
	
	    if (global.setImmediate) {
	        return;
	    }
	
	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var setImmediate;
	
	    function addFromSetImmediateArguments(args) {
	        tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);
	        return nextHandle++;
	    }
	
	    // This function accepts the same arguments as setImmediate, but
	    // returns a function that requires no arguments.
	    function partiallyApplied(handler) {
	        var args = [].slice.call(arguments, 1);
	        return function() {
	            if (typeof handler === "function") {
	                handler.apply(undefined, args);
	            } else {
	                (new Function("" + handler))();
	            }
	        };
	    }
	
	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(partiallyApplied(runIfPresent, handle), 0);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    task();
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }
	
	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }
	
	    function installNextTickImplementation() {
	        setImmediate = function() {
	            var handle = addFromSetImmediateArguments(arguments);
	            process.nextTick(partiallyApplied(runIfPresent, handle));
	            return handle;
	        };
	    }
	
	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }
	
	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
	
	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };
	
	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }
	
	        setImmediate = function() {
	            var handle = addFromSetImmediateArguments(arguments);
	            global.postMessage(messagePrefix + handle, "*");
	            return handle;
	        };
	    }
	
	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };
	
	        setImmediate = function() {
	            var handle = addFromSetImmediateArguments(arguments);
	            channel.port2.postMessage(handle);
	            return handle;
	        };
	    }
	
	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        setImmediate = function() {
	            var handle = addFromSetImmediateArguments(arguments);
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	            return handle;
	        };
	    }
	
	    function installSetTimeoutImplementation() {
	        setImmediate = function() {
	            var handle = addFromSetImmediateArguments(arguments);
	            setTimeout(partiallyApplied(runIfPresent, handle), 0);
	            return handle;
	        };
	    }
	
	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;
	
	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();
	
	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();
	
	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();
	
	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();
	
	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }
	
	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(self));
	
	(function() {
	    function Viewport() {
	
	        this.PRE_IOS7_VIEWPORT = "initial-scale=1, maximum-scale=1, user-scalable=no";
	        this.IOS7_VIEWPORT = "initial-scale=1, maximum-scale=1, user-scalable=no";
	        this.DEFAULT_VIEWPORT = "initial-scale=1, maximum-scale=1, user-scalable=no";
	
	        this.ensureViewportElement();
	        this.platform = {};
	        this.platform.name = this.getPlatformName();
	        this.platform.version = this.getPlatformVersion();
	
	        return this;
	    };
	
	    Viewport.prototype.ensureViewportElement = function(){
	        this.viewportElement = document.querySelector('meta[name=viewport]');
	        if(!this.viewportElement){
	            this.viewportElement = document.createElement('meta');
	            this.viewportElement.name = "viewport";
	            document.head.appendChild(this.viewportElement);
	        }
	    },
	
	    Viewport.prototype.setup = function() {
	        if (!this.viewportElement) {
	            return;
	        }
	
	        if (this.viewportElement.getAttribute('data-no-adjust') == "true") {
	            return;
	        }
	
	        if (!this.viewportElement.getAttribute('content')) {
	            if (this.platform.name == 'ios') {
	                if (this.platform.version >= 7 && isWebView()) {
	                    this.viewportElement.setAttribute('content', this.IOS7_VIEWPORT);
	                } else {
	                    this.viewportElement.setAttribute('content', this.PRE_IOS7_VIEWPORT);
	                }
	            } else {
	                this.viewportElement.setAttribute('content', this.DEFAULT_VIEWPORT);
	            }
	        }
	
	        function isWebView() {
	            return !!(window.cordova || window.phonegap || window.PhoneGap);
	        }
	    };
	
	    Viewport.prototype.getPlatformName = function() {
	        if (navigator.userAgent.match(/Android/i)) {
	            return "android";
	        }
	
	        if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {
	            return "ios";
	        }
	
	        // unknown
	        return undefined;
	    };
	
	    Viewport.prototype.getPlatformVersion = function() {
	        var start = window.navigator.userAgent.indexOf('OS ');
	        return window.Number(window.navigator.userAgent.substr(start + 3, 3).replace('_', '.'));
	    };
	
	    window.Viewport = Viewport;
	})();
	
	// Copyright (c) Microsoft Open Technologies, Inc.  All rights reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.
	// JavaScript Dynamic Content shim for Windows Store apps
	(function () {
	
	    if (window.MSApp && MSApp.execUnsafeLocalFunction) {
	
	        // Some nodes will have an "attributes" property which shadows the Node.prototype.attributes property
	        //  and means we don't actually see the attributes of the Node (interestingly the VS debug console
	        //  appears to suffer from the same issue).
	        //
	        var Element_setAttribute = Object.getOwnPropertyDescriptor(Element.prototype, "setAttribute").value;
	        var Element_removeAttribute = Object.getOwnPropertyDescriptor(Element.prototype, "removeAttribute").value;
	        var HTMLElement_insertAdjacentHTMLPropertyDescriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, "insertAdjacentHTML");
	        var Node_get_attributes = Object.getOwnPropertyDescriptor(Node.prototype, "attributes").get;
	        var Node_get_childNodes = Object.getOwnPropertyDescriptor(Node.prototype, "childNodes").get;
	        var detectionDiv = document.createElement("div");
	
	        function getAttributes(element) {
	            return Node_get_attributes.call(element);
	        }
	
	        function setAttribute(element, attribute, value) {
	            try {
	                Element_setAttribute.call(element, attribute, value);
	            } catch (e) {
	                // ignore
	            }
	        }
	
	        function removeAttribute(element, attribute) {
	            Element_removeAttribute.call(element, attribute);
	        }
	
	        function childNodes(element) {
	            return Node_get_childNodes.call(element);
	        }
	
	        function empty(element) {
	            while (element.childNodes.length) {
	                element.removeChild(element.lastChild);
	            }
	        }
	
	        function insertAdjacentHTML(element, position, html) {
	            HTMLElement_insertAdjacentHTMLPropertyDescriptor.value.call(element, position, html);
	        }
	
	        function inUnsafeMode() {
	            var isUnsafe = true;
	            try {
	                detectionDiv.innerHTML = "<test/>";
	            }
	            catch (ex) {
	                isUnsafe = false;
	            }
	
	            return isUnsafe;
	        }
	
	        function cleanse(html, targetElement) {
	            var cleaner = document.implementation.createHTMLDocument("cleaner");
	            empty(cleaner.documentElement);
	            MSApp.execUnsafeLocalFunction(function () {
	                insertAdjacentHTML(cleaner.documentElement, "afterbegin", html);
	            });
	
	            var scripts = cleaner.documentElement.querySelectorAll("script");
	            Array.prototype.forEach.call(scripts, function (script) {
	                switch (script.type.toLowerCase()) {
	                    case "":
	                        script.type = "text/inert";
	                        break;
	                    case "text/javascript":
	                    case "text/ecmascript":
	                    case "text/x-javascript":
	                    case "text/jscript":
	                    case "text/livescript":
	                    case "text/javascript1.1":
	                    case "text/javascript1.2":
	                    case "text/javascript1.3":
	                        script.type = "text/inert-" + script.type.slice("text/".length);
	                        break;
	                    case "application/javascript":
	                    case "application/ecmascript":
	                    case "application/x-javascript":
	                        script.type = "application/inert-" + script.type.slice("application/".length);
	                        break;
	
	                    default:
	                        break;
	                }
	            });
	
	            function cleanseAttributes(element) {
	                var attributes = getAttributes(element);
	                if (attributes && attributes.length) {
	                    // because the attributes collection is live it is simpler to queue up the renames
	                    var events;
	                    for (var i = 0, len = attributes.length; i < len; i++) {
	                        var attribute = attributes[i];
	                        var name = attribute.name;
	                        if ((name[0] === "o" || name[0] === "O") &&
	                            (name[1] === "n" || name[1] === "N")) {
	                            events = events || [];
	                            events.push({ name: attribute.name, value: attribute.value });
	                        }
	                    }
	                    if (events) {
	                        for (var i = 0, len = events.length; i < len; i++) {
	                            var attribute = events[i];
	                            removeAttribute(element, attribute.name);
	                            setAttribute(element, "x-" + attribute.name, attribute.value);
	                        }
	                    }
	                }
	                var children = childNodes(element);
	                for (var i = 0, len = children.length; i < len; i++) {
	                    cleanseAttributes(children[i]);
	                }
	            }
	            cleanseAttributes(cleaner.documentElement);
	
	            var cleanedNodes = [];
	
	            if (targetElement.tagName === 'HTML') {
	                cleanedNodes = Array.prototype.slice.call(document.adoptNode(cleaner.documentElement).childNodes);
	            } else {
	                if (cleaner.head) {
	                    cleanedNodes = cleanedNodes.concat(Array.prototype.slice.call(document.adoptNode(cleaner.head).childNodes));
	                }
	                if (cleaner.body) {
	                    cleanedNodes = cleanedNodes.concat(Array.prototype.slice.call(document.adoptNode(cleaner.body).childNodes));
	                }
	            }
	
	            return cleanedNodes;
	        }
	
	        function cleansePropertySetter(property, setter) {
	            var propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLElement.prototype, property);
	            var originalSetter = propertyDescriptor.set;
	            Object.defineProperty(HTMLElement.prototype, property, {
	                get: propertyDescriptor.get,
	                set: function (value) {
	                    if(window.WinJS && window.WinJS._execUnsafe && inUnsafeMode()) {
	                        originalSetter.call(this, value);
	                    } else {
	                        var that = this;
	                        var nodes = cleanse(value, that);
	                        MSApp.execUnsafeLocalFunction(function () {
	                            setter(propertyDescriptor, that, nodes);
	                        });
	                    }
	                },
	                enumerable: propertyDescriptor.enumerable,
	                configurable: propertyDescriptor.configurable,
	            });
	        }
	        cleansePropertySetter("innerHTML", function (propertyDescriptor, target, elements) {
	            empty(target);
	            for (var i = 0, len = elements.length; i < len; i++) {
	                target.appendChild(elements[i]);
	            }
	        });
	        cleansePropertySetter("outerHTML", function (propertyDescriptor, target, elements) {
	            for (var i = 0, len = elements.length; i < len; i++) {
	                target.insertAdjacentElement("afterend", elements[i]);
	            }
	            target.parentNode.removeChild(target);
	        });
	
	    }
	
	}());
	(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    (global.ons = factory());
	}(this, (function () { 'use strict';
	
	// For @webcomponents/custom-elements
	if (window.customElements) {
	    // even if native CE1 impl exists, use polyfill
	    window.customElements.forcePolyfill = true;
	}
	
	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}
	
	var _global = createCommonjsModule(function (module) {
	  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
	});
	
	var _core = createCommonjsModule(function (module) {
	  var core = module.exports = { version: '2.4.0' };
	  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};
	
	
	
	
	
	var asyncGenerator = function () {
	  function AwaitValue(value) {
	    this.value = value;
	  }
	
	  function AsyncGenerator(gen) {
	    var front, back;
	
	    function send(key, arg) {
	      return new Promise(function (resolve, reject) {
	        var request = {
	          key: key,
	          arg: arg,
	          resolve: resolve,
	          reject: reject,
	          next: null
	        };
	
	        if (back) {
	          back = back.next = request;
	        } else {
	          front = back = request;
	          resume(key, arg);
	        }
	      });
	    }
	
	    function resume(key, arg) {
	      try {
	        var result = gen[key](arg);
	        var value = result.value;
	
	        if (value instanceof AwaitValue) {
	          Promise.resolve(value.value).then(function (arg) {
	            resume("next", arg);
	          }, function (arg) {
	            resume("throw", arg);
	          });
	        } else {
	          settle(result.done ? "return" : "normal", result.value);
	        }
	      } catch (err) {
	        settle("throw", err);
	      }
	    }
	
	    function settle(type, value) {
	      switch (type) {
	        case "return":
	          front.resolve({
	            value: value,
	            done: true
	          });
	          break;
	
	        case "throw":
	          front.reject(value);
	          break;
	
	        default:
	          front.resolve({
	            value: value,
	            done: false
	          });
	          break;
	      }
	
	      front = front.next;
	
	      if (front) {
	        resume(front.key, front.arg);
	      } else {
	        back = null;
	      }
	    }
	
	    this._invoke = send;
	
	    if (typeof gen.return !== "function") {
	      this.return = undefined;
	    }
	  }
	
	  if (typeof Symbol === "function" && Symbol.asyncIterator) {
	    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
	      return this;
	    };
	  }
	
	  AsyncGenerator.prototype.next = function (arg) {
	    return this._invoke("next", arg);
	  };
	
	  AsyncGenerator.prototype.throw = function (arg) {
	    return this._invoke("throw", arg);
	  };
	
	  AsyncGenerator.prototype.return = function (arg) {
	    return this._invoke("return", arg);
	  };
	
	  return {
	    wrap: function (fn) {
	      return function () {
	        return new AsyncGenerator(fn.apply(this, arguments));
	      };
	    },
	    await: function (value) {
	      return new AwaitValue(value);
	    }
	  };
	}();
	
	
	
	
	
	var classCallCheck = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};
	
	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();
	
	
	
	
	
	var defineProperty$1 = function (obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	};
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};
	
	var get$1 = function get$1(object, property, receiver) {
	  if (object === null) object = Function.prototype;
	  var desc = Object.getOwnPropertyDescriptor(object, property);
	
	  if (desc === undefined) {
	    var parent = Object.getPrototypeOf(object);
	
	    if (parent === null) {
	      return undefined;
	    } else {
	      return get$1(parent, property, receiver);
	    }
	  } else if ("value" in desc) {
	    return desc.value;
	  } else {
	    var getter = desc.get;
	
	    if (getter === undefined) {
	      return undefined;
	    }
	
	    return getter.call(receiver);
	  }
	};
	
	var inherits = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	  }
	
	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	};
	
	
	
	
	
	
	
	
	
	
	
	var possibleConstructorReturn = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }
	
	  return call && (typeof call === "object" || typeof call === "function") ? call : self;
	};
	
	
	
	var set$1 = function set$1(object, property, value, receiver) {
	  var desc = Object.getOwnPropertyDescriptor(object, property);
	
	  if (desc === undefined) {
	    var parent = Object.getPrototypeOf(object);
	
	    if (parent !== null) {
	      set$1(parent, property, value, receiver);
	    }
	  } else if ("value" in desc && desc.writable) {
	    desc.value = value;
	  } else {
	    var setter = desc.set;
	
	    if (setter !== undefined) {
	      setter.call(receiver, value);
	    }
	  }
	
	  return value;
	};
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	var toConsumableArray = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];
	
	    return arr2;
	  } else {
	    return Array.from(arr);
	  }
	};
	
	var _isObject = function _isObject(it) {
	  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';
	};
	
	var _anObject = function _anObject(it) {
	  if (!_isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};
	
	var _fails = function _fails(exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};
	
	// Thank's IE8 for his funny defineProperty
	var _descriptors = !_fails(function () {
	  return Object.defineProperty({}, 'a', { get: function get() {
	      return 7;
	    } }).a != 7;
	});
	
	var document$1 = _global.document;
	var is = _isObject(document$1) && _isObject(document$1.createElement);
	var _domCreate = function _domCreate(it) {
	  return is ? document$1.createElement(it) : {};
	};
	
	var _ie8DomDefine = !_descriptors && !_fails(function () {
	  return Object.defineProperty(_domCreate('div'), 'a', { get: function get() {
	      return 7;
	    } }).a != 7;
	});
	
	// 7.1.1 ToPrimitive(input [, PreferredType])
	
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	var _toPrimitive = function _toPrimitive(it, S) {
	  if (!_isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};
	
	var dP = Object.defineProperty;
	
	var f$1 = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  _anObject(O);
	  P = _toPrimitive(P, true);
	  _anObject(Attributes);
	  if (_ie8DomDefine) try {
	    return dP(O, P, Attributes);
	  } catch (e) {/* empty */}
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};
	
	var _objectDp = {
	  f: f$1
	};
	
	var _propertyDesc = function _propertyDesc(bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};
	
	var _hide$1 = _descriptors ? function (object, key, value) {
	  return _objectDp.f(object, key, _propertyDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};
	
	var hasOwnProperty = {}.hasOwnProperty;
	var _has = function _has(it, key) {
	  return hasOwnProperty.call(it, key);
	};
	
	var id = 0;
	var px = Math.random();
	var _uid = function _uid(key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};
	
	var _redefine = createCommonjsModule(function (module) {
	  var SRC = _uid('src'),
	      TO_STRING = 'toString',
	      $toString = Function[TO_STRING],
	      TPL = ('' + $toString).split(TO_STRING);
	
	  _core.inspectSource = function (it) {
	    return $toString.call(it);
	  };
	
	  (module.exports = function (O, key, val, safe) {
	    var isFunction = typeof val == 'function';
	    if (isFunction) _has(val, 'name') || _hide$1(val, 'name', key);
	    if (O[key] === val) return;
	    if (isFunction) _has(val, SRC) || _hide$1(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	    if (O === _global) {
	      O[key] = val;
	    } else {
	      if (!safe) {
	        delete O[key];
	        _hide$1(O, key, val);
	      } else {
	        if (O[key]) O[key] = val;else _hide$1(O, key, val);
	      }
	    }
	    // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	  })(Function.prototype, TO_STRING, function toString() {
	    return typeof this == 'function' && this[SRC] || $toString.call(this);
	  });
	});
	
	var _aFunction = function _aFunction(it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};
	
	// optional / simple context binding
	
	var _ctx = function _ctx(fn, that, length) {
	  _aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1:
	      return function (a) {
	        return fn.call(that, a);
	      };
	    case 2:
	      return function (a, b) {
	        return fn.call(that, a, b);
	      };
	    case 3:
	      return function (a, b, c) {
	        return fn.call(that, a, b, c);
	      };
	  }
	  return function () /* ...args */{
	    return fn.apply(that, arguments);
	  };
	};
	
	var PROTOTYPE = 'prototype';
	
	var $export = function $export(type, name, source) {
	  var IS_FORCED = type & $export.F,
	      IS_GLOBAL = type & $export.G,
	      IS_STATIC = type & $export.S,
	      IS_PROTO = type & $export.P,
	      IS_BIND = type & $export.B,
	      target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE],
	      exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {}),
	      expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {}),
	      key,
	      own,
	      out,
	      exp;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
	    // extend global
	    if (target) _redefine(target, key, out, type & $export.U);
	    // export
	    if (exports[key] != out) _hide$1(exports, key, exp);
	    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
	  }
	};
	_global.core = _core;
	// type bitmap
	$export.F = 1; // forced
	$export.G = 2; // global
	$export.S = 4; // static
	$export.P = 8; // proto
	$export.B = 16; // bind
	$export.W = 32; // wrap
	$export.U = 64; // safe
	$export.R = 128; // real proto method for `library` 
	var _export = $export;
	
	var f$3 = {}.propertyIsEnumerable;
	
	var _objectPie = {
		f: f$3
	};
	
	var toString$1 = {}.toString;
	
	var _cof = function _cof(it) {
	  return toString$1.call(it).slice(8, -1);
	};
	
	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	
	var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return _cof(it) == 'String' ? it.split('') : Object(it);
	};
	
	// 7.2.1 RequireObjectCoercible(argument)
	var _defined = function _defined(it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};
	
	// to indexed object, toObject with fallback for non-array-like ES3 strings
	
	var _toIobject = function _toIobject(it) {
	  return _iobject(_defined(it));
	};
	
	var gOPD = Object.getOwnPropertyDescriptor;
	
	var f$2 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = _toIobject(O);
	  P = _toPrimitive(P, true);
	  if (_ie8DomDefine) try {
	    return gOPD(O, P);
	  } catch (e) {/* empty */}
	  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
	};
	
	var _objectGopd = {
	  f: f$2
	};
	
	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	
	var check = function check(O, proto) {
	  _anObject(O);
	  if (!_isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
	};
	var _setProto = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	  function (test, buggy, set) {
	    try {
	      set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
	      set(test, []);
	      buggy = !(test instanceof Array);
	    } catch (e) {
	      buggy = true;
	    }
	    return function setPrototypeOf(O, proto) {
	      check(O, proto);
	      if (buggy) O.__proto__ = proto;else set(O, proto);
	      return O;
	    };
	  }({}, false) : undefined),
	  check: check
	};
	
	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	
	_export(_export.S, 'Object', { setPrototypeOf: _setProto.set });
	
	var SHARED = '__core-js_shared__';
	var store = _global[SHARED] || (_global[SHARED] = {});
	var _shared = function _shared(key) {
	  return store[key] || (store[key] = {});
	};
	
	var _wks = createCommonjsModule(function (module) {
	  var store = _shared('wks'),
	      _Symbol = _global.Symbol,
	      USE_SYMBOL = typeof _Symbol == 'function';
	
	  var $exports = module.exports = function (name) {
	    return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : _uid)('Symbol.' + name));
	  };
	
	  $exports.store = store;
	});
	
	// getting tag from 19.1.3.6 Object.prototype.toString()
	var TAG = _wks('toStringTag');
	var ARG = _cof(function () {
	  return arguments;
	}()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function tryGet(it, key) {
	  try {
	    return it[key];
	  } catch (e) {/* empty */}
	};
	
	var _classof = function _classof(it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	  // @@toStringTag case
	  : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	  // builtinTag case
	  : ARG ? _cof(O)
	  // ES3 arguments fallback
	  : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};
	
	// 19.1.3.6 Object.prototype.toString()
	var test = {};
	test[_wks('toStringTag')] = 'z';
	if (test + '' != '[object z]') {
	  _redefine(Object.prototype, 'toString', function toString() {
	    return '[object ' + _classof(this) + ']';
	  }, true);
	}
	
	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	var _toInteger = function _toInteger(it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};
	
	// true  -> String#at
	// false -> String#codePointAt
	var _stringAt = function _stringAt(TO_STRING) {
	  return function (that, pos) {
	    var s = String(_defined(that)),
	        i = _toInteger(pos),
	        l = s.length,
	        a,
	        b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};
	
	var _library = false;
	
	var _iterators = {};
	
	// 7.1.15 ToLength
	var min = Math.min;
	var _toLength = function _toLength(it) {
	  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};
	
	var max = Math.max;
	var min$1 = Math.min;
	var _toIndex = function _toIndex(index, length) {
	  index = _toInteger(index);
	  return index < 0 ? max(index + length, 0) : min$1(index, length);
	};
	
	// false -> Array#indexOf
	// true  -> Array#includes
	
	var _arrayIncludes = function _arrayIncludes(IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = _toIobject($this),
	        length = _toLength(O.length),
	        index = _toIndex(fromIndex, length),
	        value;
	    // Array#includes uses SameValueZero equality algorithm
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      if (value != value) return true;
	      // Array#toIndex ignores holes, Array#includes - not
	    } else for (; length > index; index++) {
	      if (IS_INCLUDES || index in O) {
	        if (O[index] === el) return IS_INCLUDES || index || 0;
	      }
	    }return !IS_INCLUDES && -1;
	  };
	};
	
	var shared = _shared('keys');
	var _sharedKey = function _sharedKey(key) {
	  return shared[key] || (shared[key] = _uid(key));
	};
	
	var arrayIndexOf = _arrayIncludes(false);
	var IE_PROTO$1 = _sharedKey('IE_PROTO');
	
	var _objectKeysInternal = function _objectKeysInternal(object, names) {
	  var O = _toIobject(object),
	      i = 0,
	      result = [],
	      key;
	  for (key in O) {
	    if (key != IE_PROTO$1) _has(O, key) && result.push(key);
	  } // Don't enum bug & hidden keys
	  while (names.length > i) {
	    if (_has(O, key = names[i++])) {
	      ~arrayIndexOf(result, key) || result.push(key);
	    }
	  }return result;
	};
	
	// IE 8- don't enum bug keys
	var _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');
	
	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	
	
	var _objectKeys = Object.keys || function keys(O) {
	  return _objectKeysInternal(O, _enumBugKeys);
	};
	
	var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
	  _anObject(O);
	  var keys = _objectKeys(Properties),
	      length = keys.length,
	      i = 0,
	      P;
	  while (length > i) {
	    _objectDp.f(O, P = keys[i++], Properties[P]);
	  }return O;
	};
	
	var _html = _global.document && document.documentElement;
	
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var IE_PROTO = _sharedKey('IE_PROTO');
	var Empty = function Empty() {/* empty */};
	var PROTOTYPE$1 = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var _createDict = function createDict() {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = _domCreate('iframe'),
	      i = _enumBugKeys.length,
	      lt = '<',
	      gt = '>',
	      iframeDocument;
	  iframe.style.display = 'none';
	  _html.appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  _createDict = iframeDocument.F;
	  while (i--) {
	    delete _createDict[PROTOTYPE$1][_enumBugKeys[i]];
	  }return _createDict();
	};
	
	var _objectCreate = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE$1] = _anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE$1] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = _createDict();
	  return Properties === undefined ? result : _objectDps(result, Properties);
	};
	
	var def$1 = _objectDp.f;
	var TAG$1 = _wks('toStringTag');
	
	var _setToStringTag = function _setToStringTag(it, tag, stat) {
	  if (it && !_has(it = stat ? it : it.prototype, TAG$1)) def$1(it, TAG$1, { configurable: true, value: tag });
	};
	
	var IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	_hide$1(IteratorPrototype, _wks('iterator'), function () {
	  return this;
	});
	
	var _iterCreate = function _iterCreate(Constructor, NAME, next) {
	  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });
	  _setToStringTag(Constructor, NAME + ' Iterator');
	};
	
	// 7.1.13 ToObject(argument)
	
	var _toObject = function _toObject(it) {
	  return Object(_defined(it));
	};
	
	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var IE_PROTO$2 = _sharedKey('IE_PROTO');
	var ObjectProto = Object.prototype;
	
	var _objectGpo = Object.getPrototypeOf || function (O) {
	  O = _toObject(O);
	  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  }return O instanceof Object ? ObjectProto : null;
	};
	
	var ITERATOR = _wks('iterator');
	var BUGGY = !([].keys && 'next' in [].keys());
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';
	
	var returnThis = function returnThis() {
	  return this;
	};
	
	var _iterDefine = function _iterDefine(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  _iterCreate(Constructor, NAME, next);
	  var getMethod = function getMethod(kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS:
	        return function keys() {
	          return new Constructor(this, kind);
	        };
	      case VALUES:
	        return function values() {
	          return new Constructor(this, kind);
	        };
	    }return function entries() {
	      return new Constructor(this, kind);
	    };
	  };
	  var TAG = NAME + ' Iterator',
	      DEF_VALUES = DEFAULT == VALUES,
	      VALUES_BUG = false,
	      proto = Base.prototype,
	      $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
	      $default = $native || getMethod(DEFAULT),
	      $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined,
	      $anyNative = NAME == 'Array' ? proto.entries || $native : $native,
	      methods,
	      key,
	      IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = _objectGpo($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype) {
	      // Set @@toStringTag to native iterators
	      _setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!_library && !_has(IteratorPrototype, ITERATOR)) _hide$1(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() {
	      return $native.call(this);
	    };
	  }
	  // Define iterator
	  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    _hide$1(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  _iterators[NAME] = $default;
	  _iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) _redefine(proto, key, methods[key]);
	    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};
	
	var $at = _stringAt(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	_iterDefine(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0; // next index
	  // 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t,
	      index = this._i,
	      point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});
	
	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = _wks('unscopables');
	var ArrayProto = Array.prototype;
	if (ArrayProto[UNSCOPABLES] == undefined) _hide$1(ArrayProto, UNSCOPABLES, {});
	var _addToUnscopables = function _addToUnscopables(key) {
	  ArrayProto[UNSCOPABLES][key] = true;
	};
	
	var _iterStep = function _iterStep(done, value) {
	  return { value: value, done: !!done };
	};
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {
	  this._t = _toIobject(iterated); // target
	  this._i = 0; // next index
	  this._k = kind; // kind
	  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t,
	      kind = this._k,
	      index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return _iterStep(1);
	  }
	  if (kind == 'keys') return _iterStep(0, index);
	  if (kind == 'values') return _iterStep(0, O[index]);
	  return _iterStep(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	_iterators.Arguments = _iterators.Array;
	
	_addToUnscopables('keys');
	_addToUnscopables('values');
	_addToUnscopables('entries');
	
	var ITERATOR$1 = _wks('iterator');
	var TO_STRING_TAG = _wks('toStringTag');
	var ArrayValues = _iterators.Array;
	
	for (var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++) {
	  var NAME = collections[i],
	      Collection = _global[NAME],
	      proto = Collection && Collection.prototype,
	      key;
	  if (proto) {
	    if (!proto[ITERATOR$1]) _hide$1(proto, ITERATOR$1, ArrayValues);
	    if (!proto[TO_STRING_TAG]) _hide$1(proto, TO_STRING_TAG, NAME);
	    _iterators[NAME] = ArrayValues;
	    for (key in es6_array_iterator) {
	      if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);
	    }
	  }
	}
	
	var _redefineAll = function _redefineAll(target, src, safe) {
	  for (var key in src) {
	    _redefine(target, key, src[key], safe);
	  }return target;
	};
	
	var _anInstance = function _anInstance(it, Constructor, name, forbiddenField) {
	  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {
	    throw TypeError(name + ': incorrect invocation!');
	  }return it;
	};
	
	// call something on iterator step with safe closing on error
	
	var _iterCall = function _iterCall(iterator, fn, value, entries) {
	  try {
	    return entries ? fn(_anObject(value)[0], value[1]) : fn(value);
	    // 7.4.6 IteratorClose(iterator, completion)
	  } catch (e) {
	    var ret = iterator['return'];
	    if (ret !== undefined) _anObject(ret.call(iterator));
	    throw e;
	  }
	};
	
	// check on default Array iterator
	var ITERATOR$2 = _wks('iterator');
	var ArrayProto$1 = Array.prototype;
	
	var _isArrayIter = function _isArrayIter(it) {
	  return it !== undefined && (_iterators.Array === it || ArrayProto$1[ITERATOR$2] === it);
	};
	
	var ITERATOR$3 = _wks('iterator');
	var core_getIteratorMethod = _core.getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR$3] || it['@@iterator'] || _iterators[_classof(it)];
	};
	
	var _forOf = createCommonjsModule(function (module) {
	  var BREAK = {},
	      RETURN = {};
	  var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
	    var iterFn = ITERATOR ? function () {
	      return iterable;
	    } : core_getIteratorMethod(iterable),
	        f = _ctx(fn, that, entries ? 2 : 1),
	        index = 0,
	        length,
	        step,
	        iterator,
	        result;
	    if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
	    // fast case for arrays with default iterator
	    if (_isArrayIter(iterFn)) for (length = _toLength(iterable.length); length > index; index++) {
	      result = entries ? f(_anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	      if (result === BREAK || result === RETURN) return result;
	    } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
	      result = _iterCall(iterator, f, step.value, entries);
	      if (result === BREAK || result === RETURN) return result;
	    }
	  };
	  exports.BREAK = BREAK;
	  exports.RETURN = RETURN;
	});
	
	var SPECIES = _wks('species');
	
	var _setSpecies = function _setSpecies(KEY) {
	  var C = _global[KEY];
	  if (_descriptors && C && !C[SPECIES]) _objectDp.f(C, SPECIES, {
	    configurable: true,
	    get: function get() {
	      return this;
	    }
	  });
	};
	
	var _meta = createCommonjsModule(function (module) {
	  var META = _uid('meta'),
	      setDesc = _objectDp.f,
	      id = 0;
	  var isExtensible = Object.isExtensible || function () {
	    return true;
	  };
	  var FREEZE = !_fails(function () {
	    return isExtensible(Object.preventExtensions({}));
	  });
	  var setMeta = function setMeta(it) {
	    setDesc(it, META, { value: {
	        i: 'O' + ++id, // object ID
	        w: {} // weak collections IDs
	      } });
	  };
	  var fastKey = function fastKey(it, create) {
	    // return primitive with prefix
	    if (!_isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	    if (!_has(it, META)) {
	      // can't set metadata to uncaught frozen object
	      if (!isExtensible(it)) return 'F';
	      // not necessary to add metadata
	      if (!create) return 'E';
	      // add missing metadata
	      setMeta(it);
	      // return object ID
	    }return it[META].i;
	  };
	  var getWeak = function getWeak(it, create) {
	    if (!_has(it, META)) {
	      // can't set metadata to uncaught frozen object
	      if (!isExtensible(it)) return true;
	      // not necessary to add metadata
	      if (!create) return false;
	      // add missing metadata
	      setMeta(it);
	      // return hash weak collections IDs
	    }return it[META].w;
	  };
	  // add metadata on freeze-family methods calling
	  var onFreeze = function onFreeze(it) {
	    if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);
	    return it;
	  };
	  var meta = module.exports = {
	    KEY: META,
	    NEED: false,
	    fastKey: fastKey,
	    getWeak: getWeak,
	    onFreeze: onFreeze
	  };
	});
	
	var dP$1 = _objectDp.f;
	var fastKey = _meta.fastKey;
	var SIZE = _descriptors ? '_s' : 'size';
	
	var getEntry = function getEntry(that, key) {
	  // fast case
	  var index = fastKey(key),
	      entry;
	  if (index !== 'F') return that._i[index];
	  // frozen object case
	  for (entry = that._f; entry; entry = entry.n) {
	    if (entry.k == key) return entry;
	  }
	};
	
	var _collectionStrong = {
	  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {
	    var C = wrapper(function (that, iterable) {
	      _anInstance(that, C, NAME, '_i');
	      that._i = _objectCreate(null); // index
	      that._f = undefined; // first entry
	      that._l = undefined; // last entry
	      that[SIZE] = 0; // size
	      if (iterable != undefined) _forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    _redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear() {
	        for (var that = this, data = that._i, entry = that._f; entry; entry = entry.n) {
	          entry.r = true;
	          if (entry.p) entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function _delete(key) {
	        var that = this,
	            entry = getEntry(that, key);
	        if (entry) {
	          var next = entry.n,
	              prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if (prev) prev.n = next;
	          if (next) next.p = prev;
	          if (that._f == entry) that._f = next;
	          if (that._l == entry) that._l = prev;
	          that[SIZE]--;
	        }return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */) {
	        _anInstance(this, C, 'forEach');
	        var f = _ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3),
	            entry;
	        while (entry = entry ? entry.n : this._f) {
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while (entry && entry.r) {
	            entry = entry.p;
	          }
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key) {
	        return !!getEntry(this, key);
	      }
	    });
	    if (_descriptors) dP$1(C.prototype, 'size', {
	      get: function get() {
	        return _defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function def(that, key, value) {
	    var entry = getEntry(that, key),
	        prev,
	        index;
	    // change existing entry
	    if (entry) {
	      entry.v = value;
	      // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key, // <- key
	        v: value, // <- value
	        p: prev = that._l, // <- previous entry
	        n: undefined, // <- next entry
	        r: false // <- removed
	      };
	      if (!that._f) that._f = entry;
	      if (prev) prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if (index !== 'F') that._i[index] = entry;
	    }return that;
	  },
	  getEntry: getEntry,
	  setStrong: function setStrong(C, NAME, IS_MAP) {
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    _iterDefine(C, NAME, function (iterated, kind) {
	      this._t = iterated; // target
	      this._k = kind; // kind
	      this._l = undefined; // previous
	    }, function () {
	      var that = this,
	          kind = that._k,
	          entry = that._l;
	      // revert to the last existing entry
	      while (entry && entry.r) {
	        entry = entry.p;
	      } // get next entry
	      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
	        // or finish the iteration
	        that._t = undefined;
	        return _iterStep(1);
	      }
	      // return step by kind
	      if (kind == 'keys') return _iterStep(0, entry.k);
	      if (kind == 'values') return _iterStep(0, entry.v);
	      return _iterStep(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    _setSpecies(NAME);
	  }
	};
	
	var ITERATOR$4 = _wks('iterator');
	var SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR$4]();
	  riter['return'] = function () {
	    SAFE_CLOSING = true;
	  };
	  Array.from(riter, function () {
	    throw 2;
	  });
	} catch (e) {/* empty */}
	
	var _iterDetect = function _iterDetect(exec, skipClosing) {
	  if (!skipClosing && !SAFE_CLOSING) return false;
	  var safe = false;
	  try {
	    var arr = [7],
	        iter = arr[ITERATOR$4]();
	    iter.next = function () {
	      return { done: safe = true };
	    };
	    arr[ITERATOR$4] = function () {
	      return iter;
	    };
	    exec(arr);
	  } catch (e) {/* empty */}
	  return safe;
	};
	
	var setPrototypeOf$3 = _setProto.set;
	var _inheritIfRequired = function _inheritIfRequired(that, target, C) {
	  var P,
	      S = target.constructor;
	  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && _isObject(P) && setPrototypeOf$3) {
	    setPrototypeOf$3(that, P);
	  }return that;
	};
	
	var _collection = function _collection(NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
	  var Base = _global[NAME],
	      C = Base,
	      ADDER = IS_MAP ? 'set' : 'add',
	      proto = C && C.prototype,
	      O = {};
	  var fixMethod = function fixMethod(KEY) {
	    var fn = proto[KEY];
	    _redefine(proto, KEY, KEY == 'delete' ? function (a) {
	      return IS_WEAK && !_isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	    } : KEY == 'has' ? function has(a) {
	      return IS_WEAK && !_isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	    } : KEY == 'get' ? function get(a) {
	      return IS_WEAK && !_isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	    } : KEY == 'add' ? function add(a) {
	      fn.call(this, a === 0 ? 0 : a);return this;
	    } : function set(a, b) {
	      fn.call(this, a === 0 ? 0 : a, b);return this;
	    });
	  };
	  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !_fails(function () {
	    new C().entries().next();
	  }))) {
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    _redefineAll(C.prototype, methods);
	    _meta.NEED = true;
	  } else {
	    var instance = new C()
	    // early implementations not supports chaining
	    ,
	        HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	    ,
	        THROWS_ON_PRIMITIVES = _fails(function () {
	      instance.has(1);
	    })
	    // most early implementations doesn't supports iterables, most modern - not close it correctly
	    ,
	        ACCEPT_ITERABLES = _iterDetect(function (iter) {
	      new C(iter);
	    }) // eslint-disable-line no-new
	    // for early implementations -0 and +0 not the same
	    ,
	        BUGGY_ZERO = !IS_WEAK && _fails(function () {
	      // V8 ~ Chromium 42- fails only with 5+ elements
	      var $instance = new C(),
	          index = 5;
	      while (index--) {
	        $instance[ADDER](index, index);
	      }return !$instance.has(-0);
	    });
	    if (!ACCEPT_ITERABLES) {
	      C = wrapper(function (target, iterable) {
	        _anInstance(target, C, NAME);
	        var that = _inheritIfRequired(new Base(), target, C);
	        if (iterable != undefined) _forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if (IS_WEAK && proto.clear) delete proto.clear;
	  }
	
	  _setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  _export(_export.G + _export.W + _export.F * (C != Base), O);
	
	  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};
	
	// 23.2 Set Objects
	var es6_set = _collection('Set', function (get) {
	  return function Set() {
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value) {
	    return _collectionStrong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, _collectionStrong);
	
	var _arrayFromIterable = function _arrayFromIterable(iter, ITERATOR) {
	  var result = [];
	  _forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};
	
	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	
	var _collectionToJson = function _collectionToJson(NAME) {
	  return function toJSON() {
	    if (_classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
	    return _arrayFromIterable(this);
	  };
	};
	
	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	
	
	_export(_export.P + _export.R, 'Set', { toJSON: _collectionToJson('Set') });
	
	// 23.1 Map Objects
	var es6_map = _collection('Map', function (get) {
	  return function Map() {
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key) {
	    var entry = _collectionStrong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value) {
	    return _collectionStrong.def(this, key === 0 ? 0 : key, value);
	  }
	}, _collectionStrong, true);
	
	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	
	
	_export(_export.P + _export.R, 'Map', { toJSON: _collectionToJson('Map') });
	
	(function () {
	  'use strict';
	  var g = new function () {}();var aa = new Set("annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph".split(" "));function k(b) {
	    var a = aa.has(b);b = /^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(b);return !a && b;
	  }function l(b) {
	    var a = b.isConnected;if (void 0 !== a) return a;for (; b && !(b.__CE_isImportDocument || b instanceof Document);) {
	      b = b.parentNode || (window.ShadowRoot && b instanceof ShadowRoot ? b.host : void 0);
	    }return !(!b || !(b.__CE_isImportDocument || b instanceof Document));
	  }
	  function m(b, a) {
	    for (; a && a !== b && !a.nextSibling;) {
	      a = a.parentNode;
	    }return a && a !== b ? a.nextSibling : null;
	  }
	  function n(b, a, e) {
	    e = e ? e : new Set();for (var c = b; c;) {
	      if (c.nodeType === Node.ELEMENT_NODE) {
	        var d = c;a(d);var h = d.localName;if ("link" === h && "import" === d.getAttribute("rel")) {
	          c = d.import;if (c instanceof Node && !e.has(c)) for (e.add(c), c = c.firstChild; c; c = c.nextSibling) {
	            n(c, a, e);
	          }c = m(b, d);continue;
	        } else if ("template" === h) {
	          c = m(b, d);continue;
	        }if (d = d.__CE_shadowRoot) for (d = d.firstChild; d; d = d.nextSibling) {
	          n(d, a, e);
	        }
	      }c = c.firstChild ? c.firstChild : m(b, c);
	    }
	  }function q(b, a, e) {
	    b[a] = e;
	  }function r() {
	    this.a = new Map();this.f = new Map();this.c = [];this.b = !1;
	  }function ba(b, a, e) {
	    b.a.set(a, e);b.f.set(e.constructor, e);
	  }function t(b, a) {
	    b.b = !0;b.c.push(a);
	  }function v(b, a) {
	    b.b && n(a, function (a) {
	      return w(b, a);
	    });
	  }function w(b, a) {
	    if (b.b && !a.__CE_patched) {
	      a.__CE_patched = !0;for (var e = 0; e < b.c.length; e++) {
	        b.c[e](a);
	      }
	    }
	  }function x(b, a) {
	    var e = [];n(a, function (b) {
	      return e.push(b);
	    });for (a = 0; a < e.length; a++) {
	      var c = e[a];1 === c.__CE_state ? l(c) && b.connectedCallback(c) : y(b, c);
	    }
	  }
	  function z(b, a) {
	    var e = [];n(a, function (b) {
	      return e.push(b);
	    });for (a = 0; a < e.length; a++) {
	      var c = e[a];1 === c.__CE_state && b.disconnectedCallback(c);
	    }
	  }
	  function A(b, a, e) {
	    e = e ? e : new Set();var c = [];n(a, function (d) {
	      if ("link" === d.localName && "import" === d.getAttribute("rel")) {
	        var a = d.import;a instanceof Node && "complete" === a.readyState ? (a.__CE_isImportDocument = !0, a.__CE_hasRegistry = !0) : d.addEventListener("load", function () {
	          var a = d.import;a.__CE_documentLoadHandled || (a.__CE_documentLoadHandled = !0, a.__CE_isImportDocument = !0, a.__CE_hasRegistry = !0, new Set(e), e.delete(a), A(b, a, e));
	        });
	      } else c.push(d);
	    }, e);if (b.b) for (a = 0; a < c.length; a++) {
	      w(b, c[a]);
	    }for (a = 0; a < c.length; a++) {
	      y(b, c[a]);
	    }
	  }
	  function y(b, a) {
	    if (void 0 === a.__CE_state) {
	      var e = b.a.get(a.localName);if (e) {
	        e.constructionStack.push(a);var c = e.constructor;try {
	          try {
	            if (new c() !== a) throw Error("The custom element constructor did not produce the element being upgraded.");
	          } finally {
	            e.constructionStack.pop();
	          }
	        } catch (f) {
	          throw a.__CE_state = 2, f;
	        }a.__CE_state = 1;a.__CE_definition = e;if (e.attributeChangedCallback) for (e = e.observedAttributes, c = 0; c < e.length; c++) {
	          var d = e[c],
	              h = a.getAttribute(d);null !== h && b.attributeChangedCallback(a, d, null, h, null);
	        }l(a) && b.connectedCallback(a);
	      }
	    }
	  }
	  r.prototype.connectedCallback = function (b) {
	    var a = b.__CE_definition;a.connectedCallback && a.connectedCallback.call(b);b.i = !0;
	  };r.prototype.disconnectedCallback = function (b) {
	    b.i || this.connectedCallback(b);var a = b.__CE_definition;a.disconnectedCallback && a.disconnectedCallback.call(b);b.i = void 0;
	  };r.prototype.attributeChangedCallback = function (b, a, e, c, d) {
	    var h = b.__CE_definition;h.attributeChangedCallback && -1 < h.observedAttributes.indexOf(a) && h.attributeChangedCallback.call(b, a, e, c, d);
	  };function B(b, a) {
	    this.c = b;this.a = a;this.b = void 0;A(this.c, this.a);"loading" === this.a.readyState && (this.b = new MutationObserver(this.f.bind(this)), this.b.observe(this.a, { childList: !0, subtree: !0 }));
	  }function C(b) {
	    b.b && b.b.disconnect();
	  }B.prototype.f = function (b) {
	    var a = this.a.readyState;"interactive" !== a && "complete" !== a || C(this);for (a = 0; a < b.length; a++) {
	      for (var e = b[a].addedNodes, c = 0; c < e.length; c++) {
	        A(this.c, e[c]);
	      }
	    }
	  };function ca() {
	    var b = this;this.b = this.a = void 0;this.c = new Promise(function (a) {
	      b.b = a;b.a && a(b.a);
	    });
	  }function D(b) {
	    if (b.a) throw Error("Already resolved.");b.a = void 0;b.b && b.b(void 0);
	  }function E(b) {
	    this.f = !1;this.a = b;this.h = new Map();this.g = function (b) {
	      return b();
	    };this.b = !1;this.c = [];this.l = new B(b, document);
	  }
	  E.prototype.m = function (b, a) {
	    var e = this;if (!(a instanceof Function)) throw new TypeError("Custom element constructors must be functions.");if (!k(b)) throw new SyntaxError("The element name '" + b + "' is not valid.");if (this.a.a.get(b)) throw Error("A custom element with name '" + b + "' has already been defined.");if (this.f) throw Error("A custom element is already being defined.");this.f = !0;var c, d, h, f, u;try {
	      var p = function p(b) {
	        var a = P[b];if (void 0 !== a && !(a instanceof Function)) throw Error("The '" + b + "' callback must be a function.");
	        return a;
	      },
	          P = a.prototype;if (!(P instanceof Object)) throw new TypeError("The custom element constructor's prototype is not an object.");c = p("connectedCallback");d = p("disconnectedCallback");h = p("adoptedCallback");f = p("attributeChangedCallback");u = a.observedAttributes || [];
	    } catch (va) {
	      return;
	    } finally {
	      this.f = !1;
	    }ba(this.a, b, { localName: b, constructor: a, connectedCallback: c, disconnectedCallback: d, adoptedCallback: h, attributeChangedCallback: f, observedAttributes: u, constructionStack: [] });this.c.push(b);this.b || (this.b = !0, this.g(function () {
	      if (!1 !== e.b) for (e.b = !1, A(e.a, document); 0 < e.c.length;) {
	        var b = e.c.shift();(b = e.h.get(b)) && D(b);
	      }
	    }));
	  };E.prototype.get = function (b) {
	    if (b = this.a.a.get(b)) return b.constructor;
	  };E.prototype.s = function (b) {
	    if (!k(b)) return Promise.reject(new SyntaxError("'" + b + "' is not a valid custom element name."));var a = this.h.get(b);if (a) return a.c;a = new ca();this.h.set(b, a);this.a.a.get(b) && -1 === this.c.indexOf(b) && D(a);return a.c;
	  };E.prototype.o = function (b) {
	    C(this.l);var a = this.g;this.g = function (e) {
	      return b(function () {
	        return a(e);
	      });
	    };
	  };
	  window.CustomElementRegistry = E;E.prototype.define = E.prototype.m;E.prototype.get = E.prototype.get;E.prototype.whenDefined = E.prototype.s;E.prototype.polyfillWrapFlushCallback = E.prototype.o;var F = window.Document.prototype.createElement,
	      da = window.Document.prototype.createElementNS,
	      ea = window.Document.prototype.importNode,
	      fa = window.Document.prototype.prepend,
	      ga = window.Document.prototype.append,
	      G = window.Node.prototype.cloneNode,
	      H = window.Node.prototype.appendChild,
	      I = window.Node.prototype.insertBefore,
	      J = window.Node.prototype.removeChild,
	      K = window.Node.prototype.replaceChild,
	      L = Object.getOwnPropertyDescriptor(window.Node.prototype, "textContent"),
	      M = window.Element.prototype.attachShadow,
	      N = Object.getOwnPropertyDescriptor(window.Element.prototype, "innerHTML"),
	      O = window.Element.prototype.getAttribute,
	      Q = window.Element.prototype.setAttribute,
	      R = window.Element.prototype.removeAttribute,
	      S = window.Element.prototype.getAttributeNS,
	      T = window.Element.prototype.setAttributeNS,
	      U = window.Element.prototype.removeAttributeNS,
	      V = window.Element.prototype.insertAdjacentElement,
	      ha = window.Element.prototype.prepend,
	      ia = window.Element.prototype.append,
	      ja = window.Element.prototype.before,
	      ka = window.Element.prototype.after,
	      la = window.Element.prototype.replaceWith,
	      ma = window.Element.prototype.remove,
	      na = window.HTMLElement,
	      W = Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, "innerHTML"),
	      X = window.HTMLElement.prototype.insertAdjacentElement;function oa() {
	    var b = Y;window.HTMLElement = function () {
	      function a() {
	        var a = this.constructor,
	            c = b.f.get(a);if (!c) throw Error("The custom element being constructed was not registered with `customElements`.");var d = c.constructionStack;if (!d.length) return d = F.call(document, c.localName), Object.setPrototypeOf(d, a.prototype), d.__CE_state = 1, d.__CE_definition = c, w(b, d), d;var c = d.length - 1,
	            h = d[c];if (h === g) throw Error("The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.");
	        d[c] = g;Object.setPrototypeOf(h, a.prototype);w(b, h);return h;
	      }a.prototype = na.prototype;return a;
	    }();
	  }function pa(b, a, e) {
	    a.prepend = function (a) {
	      for (var d = [], c = 0; c < arguments.length; ++c) {
	        d[c - 0] = arguments[c];
	      }c = d.filter(function (b) {
	        return b instanceof Node && l(b);
	      });e.j.apply(this, d);for (var f = 0; f < c.length; f++) {
	        z(b, c[f]);
	      }if (l(this)) for (c = 0; c < d.length; c++) {
	        f = d[c], f instanceof Element && x(b, f);
	      }
	    };a.append = function (a) {
	      for (var d = [], c = 0; c < arguments.length; ++c) {
	        d[c - 0] = arguments[c];
	      }c = d.filter(function (b) {
	        return b instanceof Node && l(b);
	      });e.append.apply(this, d);for (var f = 0; f < c.length; f++) {
	        z(b, c[f]);
	      }if (l(this)) for (c = 0; c < d.length; c++) {
	        f = d[c], f instanceof Element && x(b, f);
	      }
	    };
	  }function qa() {
	    var b = Y;q(Document.prototype, "createElement", function (a) {
	      if (this.__CE_hasRegistry) {
	        var e = b.a.get(a);if (e) return new e.constructor();
	      }a = F.call(this, a);w(b, a);return a;
	    });q(Document.prototype, "importNode", function (a, e) {
	      a = ea.call(this, a, e);this.__CE_hasRegistry ? A(b, a) : v(b, a);return a;
	    });q(Document.prototype, "createElementNS", function (a, e) {
	      if (this.__CE_hasRegistry && (null === a || "http://www.w3.org/1999/xhtml" === a)) {
	        var c = b.a.get(e);if (c) return new c.constructor();
	      }a = da.call(this, a, e);w(b, a);return a;
	    });
	    pa(b, Document.prototype, { j: fa, append: ga });
	  }function ra() {
	    var b = Y;function a(a, c) {
	      Object.defineProperty(a, "textContent", { enumerable: c.enumerable, configurable: !0, get: c.get, set: function set(a) {
	          if (this.nodeType === Node.TEXT_NODE) c.set.call(this, a);else {
	            var d = void 0;if (this.firstChild) {
	              var e = this.childNodes,
	                  u = e.length;if (0 < u && l(this)) for (var d = Array(u), p = 0; p < u; p++) {
	                d[p] = e[p];
	              }
	            }c.set.call(this, a);if (d) for (a = 0; a < d.length; a++) {
	              z(b, d[a]);
	            }
	          }
	        } });
	    }q(Node.prototype, "insertBefore", function (a, c) {
	      if (a instanceof DocumentFragment) {
	        var d = Array.prototype.slice.apply(a.childNodes);
	        a = I.call(this, a, c);if (l(this)) for (c = 0; c < d.length; c++) {
	          x(b, d[c]);
	        }return a;
	      }d = l(a);c = I.call(this, a, c);d && z(b, a);l(this) && x(b, a);return c;
	    });q(Node.prototype, "appendChild", function (a) {
	      if (a instanceof DocumentFragment) {
	        var c = Array.prototype.slice.apply(a.childNodes);a = H.call(this, a);if (l(this)) for (var d = 0; d < c.length; d++) {
	          x(b, c[d]);
	        }return a;
	      }c = l(a);d = H.call(this, a);c && z(b, a);l(this) && x(b, a);return d;
	    });q(Node.prototype, "cloneNode", function (a) {
	      a = G.call(this, a);this.ownerDocument.__CE_hasRegistry ? A(b, a) : v(b, a);
	      return a;
	    });q(Node.prototype, "removeChild", function (a) {
	      var c = l(a),
	          d = J.call(this, a);c && z(b, a);return d;
	    });q(Node.prototype, "replaceChild", function (a, c) {
	      if (a instanceof DocumentFragment) {
	        var d = Array.prototype.slice.apply(a.childNodes);a = K.call(this, a, c);if (l(this)) for (z(b, c), c = 0; c < d.length; c++) {
	          x(b, d[c]);
	        }return a;
	      }var d = l(a),
	          e = K.call(this, a, c),
	          f = l(this);f && z(b, c);d && z(b, a);f && x(b, a);return e;
	    });L && L.get ? a(Node.prototype, L) : t(b, function (b) {
	      a(b, { enumerable: !0, configurable: !0, get: function get() {
	          for (var a = [], b = 0; b < this.childNodes.length; b++) {
	            a.push(this.childNodes[b].textContent);
	          }return a.join("");
	        }, set: function set(a) {
	          for (; this.firstChild;) {
	            J.call(this, this.firstChild);
	          }H.call(this, document.createTextNode(a));
	        } });
	    });
	  }function sa(b) {
	    var a = Element.prototype;a.before = function (a) {
	      for (var c = [], d = 0; d < arguments.length; ++d) {
	        c[d - 0] = arguments[d];
	      }d = c.filter(function (a) {
	        return a instanceof Node && l(a);
	      });ja.apply(this, c);for (var e = 0; e < d.length; e++) {
	        z(b, d[e]);
	      }if (l(this)) for (d = 0; d < c.length; d++) {
	        e = c[d], e instanceof Element && x(b, e);
	      }
	    };a.after = function (a) {
	      for (var c = [], d = 0; d < arguments.length; ++d) {
	        c[d - 0] = arguments[d];
	      }d = c.filter(function (a) {
	        return a instanceof Node && l(a);
	      });ka.apply(this, c);for (var e = 0; e < d.length; e++) {
	        z(b, d[e]);
	      }if (l(this)) for (d = 0; d < c.length; d++) {
	        e = c[d], e instanceof Element && x(b, e);
	      }
	    };a.replaceWith = function (a) {
	      for (var c = [], d = 0; d < arguments.length; ++d) {
	        c[d - 0] = arguments[d];
	      }var d = c.filter(function (a) {
	        return a instanceof Node && l(a);
	      }),
	          e = l(this);la.apply(this, c);for (var f = 0; f < d.length; f++) {
	        z(b, d[f]);
	      }if (e) for (z(b, this), d = 0; d < c.length; d++) {
	        e = c[d], e instanceof Element && x(b, e);
	      }
	    };a.remove = function () {
	      var a = l(this);ma.call(this);a && z(b, this);
	    };
	  }function ta() {
	    var b = Y;function a(a, c) {
	      Object.defineProperty(a, "innerHTML", { enumerable: c.enumerable, configurable: !0, get: c.get, set: function set(a) {
	          var d = this,
	              e = void 0;l(this) && (e = [], n(this, function (a) {
	            a !== d && e.push(a);
	          }));c.set.call(this, a);if (e) for (var f = 0; f < e.length; f++) {
	            var h = e[f];1 === h.__CE_state && b.disconnectedCallback(h);
	          }this.ownerDocument.__CE_hasRegistry ? A(b, this) : v(b, this);return a;
	        } });
	    }function e(a, c) {
	      q(a, "insertAdjacentElement", function (a, d) {
	        var e = l(d);a = c.call(this, a, d);e && z(b, d);l(a) && x(b, d);
	        return a;
	      });
	    }M ? q(Element.prototype, "attachShadow", function (a) {
	      return this.__CE_shadowRoot = a = M.call(this, a);
	    }) : console.warn("Custom Elements: `Element#attachShadow` was not patched.");if (N && N.get) a(Element.prototype, N);else if (W && W.get) a(HTMLElement.prototype, W);else {
	      var c = F.call(document, "div");t(b, function (b) {
	        a(b, { enumerable: !0, configurable: !0, get: function get() {
	            return G.call(this, !0).innerHTML;
	          }, set: function set(a) {
	            var b = "template" === this.localName ? this.content : this;for (c.innerHTML = a; 0 < b.childNodes.length;) {
	              J.call(b, b.childNodes[0]);
	            }for (; 0 < c.childNodes.length;) {
	              H.call(b, c.childNodes[0]);
	            }
	          } });
	      });
	    }q(Element.prototype, "setAttribute", function (a, c) {
	      if (1 !== this.__CE_state) return Q.call(this, a, c);var d = O.call(this, a);Q.call(this, a, c);c = O.call(this, a);b.attributeChangedCallback(this, a, d, c, null);
	    });q(Element.prototype, "setAttributeNS", function (a, c, e) {
	      if (1 !== this.__CE_state) return T.call(this, a, c, e);var d = S.call(this, a, c);T.call(this, a, c, e);e = S.call(this, a, c);b.attributeChangedCallback(this, c, d, e, a);
	    });q(Element.prototype, "removeAttribute", function (a) {
	      if (1 !== this.__CE_state) return R.call(this, a);var c = O.call(this, a);R.call(this, a);null !== c && b.attributeChangedCallback(this, a, c, null, null);
	    });q(Element.prototype, "removeAttributeNS", function (a, c) {
	      if (1 !== this.__CE_state) return U.call(this, a, c);var d = S.call(this, a, c);U.call(this, a, c);var e = S.call(this, a, c);d !== e && b.attributeChangedCallback(this, c, d, e, a);
	    });X ? e(HTMLElement.prototype, X) : V ? e(Element.prototype, V) : console.warn("Custom Elements: `Element#insertAdjacentElement` was not patched.");
	    pa(b, Element.prototype, { j: ha, append: ia });sa(b);
	  } /*
	     Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
	     This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
	     The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
	     The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
	     Code distributed by Google as part of the polymer project is also
	     subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
	     */
	  var Z = window.customElements;if (!Z || Z.forcePolyfill || "function" != typeof Z.define || "function" != typeof Z.get) {
	    var Y = new r();oa();qa();ra();ta();document.__CE_hasRegistry = !0;var ua = new E(Y);Object.defineProperty(window, "customElements", { configurable: !0, enumerable: !0, value: ua });
	  }
	}).call(self);
	
	// Caution:
	// Do not replace this import statement with codes.
	//
	// If you replace this import statement with codes,
	// the codes will be executed after the following polyfills are imported
	// because import statements are hoisted during compilation.
	// Polyfill ECMAScript standard features with global namespace pollution
	// Polyfill Custom Elements v1 with global namespace pollution
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @object ons.platform
	 * @category util
	 * @description
	 *   [en]Utility methods to detect current platform.[/en]
	 *   [ja]現在実行されているプラットフォームを検知するためのユーティリティメソッドを収めたオブジェクトです。[/ja]
	 */
	var Platform = function () {
	
	  /**
	   * All elements will be rendered as if the app was running on this platform.
	   * @type {String}
	   */
	  function Platform() {
	    classCallCheck(this, Platform);
	
	    this._renderPlatform = null;
	  }
	
	  /**
	   * @method select
	   * @signature select(platform)
	   * @param  {string} platform Name of the platform.
	   *   [en]Possible values are: "opera", "firefox", "safari", "chrome", "ie", "android", "blackberry", "ios" or "wp".[/en]
	   *   [ja]"opera", "firefox", "safari", "chrome", "ie", "android", "blackberry", "ios", "wp"のいずれかを指定します。[/ja]
	   * @description
	   *   [en]Sets the platform used to render the elements. Useful for testing.[/en]
	   *   [ja]要素を描画するために利用するプラットフォーム名を設定します。テストに便利です。[/ja]
	   */
	
	
	  createClass(Platform, [{
	    key: 'select',
	    value: function select(platform) {
	      if (typeof platform === 'string') {
	        this._renderPlatform = platform.trim().toLowerCase();
	      }
	    }
	
	    /**
	     * @method isWebView
	     * @signature isWebView()
	     * @description
	     *   [en]Returns whether app is running in Cordova.[/en]
	     *   [ja]Cordova内で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isWebView',
	    value: function isWebView() {
	      if (document.readyState === 'loading' || document.readyState == 'uninitialized') {
	        throw new Error('isWebView() method is available after dom contents loaded.');
	      }
	
	      return !!(window.cordova || window.phonegap || window.PhoneGap);
	    }
	
	    /**
	     * @method isIOS
	     * @signature isIOS()
	     * @description
	     *   [en]Returns whether the OS is iOS.[/en]
	     *   [ja]iOS上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isIOS',
	    value: function isIOS() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'ios';
	      } else if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {
	        return (/iOS/i.test(device.platform)
	        );
	      } else {
	        return (/iPhone|iPad|iPod/i.test(navigator.userAgent)
	        );
	      }
	    }
	
	    /**
	     * @method isAndroid
	     * @signature isAndroid()
	     * @description
	     *   [en]Returns whether the OS is Android.[/en]
	     *   [ja]Android上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isAndroid',
	    value: function isAndroid() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'android';
	      } else if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {
	        return (/Android/i.test(device.platform)
	        );
	      } else {
	        return (/Android/i.test(navigator.userAgent)
	        );
	      }
	    }
	
	    /**
	     * @method isAndroidPhone
	     * @signature isAndroidPhone()
	     * @description
	     *   [en]Returns whether the device is Android phone.[/en]
	     *   [ja]Android携帯上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isAndroidPhone',
	    value: function isAndroidPhone() {
	      return (/Android/i.test(navigator.userAgent) && /Mobile/i.test(navigator.userAgent)
	      );
	    }
	
	    /**
	     * @method isAndroidTablet
	     * @signature isAndroidTablet()
	     * @description
	     *   [en]Returns whether the device is Android tablet.[/en]
	     *   [ja]Androidタブレット上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isAndroidTablet',
	    value: function isAndroidTablet() {
	      return (/Android/i.test(navigator.userAgent) && !/Mobile/i.test(navigator.userAgent)
	      );
	    }
	
	    /**
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isWP',
	    value: function isWP() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'wp';
	      } else if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {
	        return (/Win32NT|WinCE/i.test(device.platform)
	        );
	      } else {
	        return (/Windows Phone|IEMobile|WPDesktop/i.test(navigator.userAgent)
	        );
	      }
	    }
	
	    /**
	     * @methos isIPhone
	     * @signature isIPhone()
	     * @description
	     *   [en]Returns whether the device is iPhone.[/en]
	     *   [ja]iPhone上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isIPhone',
	    value: function isIPhone() {
	      return (/iPhone/i.test(navigator.userAgent)
	      );
	    }
	
	    /**
	     * @method isIPad
	     * @signature isIPad()
	     * @description
	     *   [en]Returns whether the device is iPad.[/en]
	     *   [ja]iPad上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isIPad',
	    value: function isIPad() {
	      return (/iPad/i.test(navigator.userAgent)
	      );
	    }
	
	    /**
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isIPod',
	    value: function isIPod() {
	      return (/iPod/i.test(navigator.userAgent)
	      );
	    }
	
	    /**
	     * @method isBlackBerry
	     * @signature isBlackBerry()
	     * @description
	     *   [en]Returns whether the device is BlackBerry.[/en]
	     *   [ja]BlackBerry上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isBlackBerry',
	    value: function isBlackBerry() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'blackberry';
	      } else if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {
	        return (/BlackBerry/i.test(device.platform)
	        );
	      } else {
	        return (/BlackBerry|RIM Tablet OS|BB10/i.test(navigator.userAgent)
	        );
	      }
	    }
	
	    /**
	     * @method isOpera
	     * @signature isOpera()
	     * @description
	     *   [en]Returns whether the browser is Opera.[/en]
	     *   [ja]Opera上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isOpera',
	    value: function isOpera() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'opera';
	      } else {
	        return !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;
	      }
	    }
	
	    /**
	     * @method isFirefox
	     * @signature isFirefox()
	     * @description
	     *   [en]Returns whether the browser is Firefox.[/en]
	     *   [ja]Firefox上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isFirefox',
	    value: function isFirefox() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'firefox';
	      } else {
	        return typeof InstallTrigger !== 'undefined';
	      }
	    }
	
	    /**
	     * @method isSafari
	     * @signature isSafari()
	     * @description
	     *   [en]Returns whether the browser is Safari.[/en]
	     *   [ja]Safari上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isSafari',
	    value: function isSafari() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'safari';
	      } else {
	        return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 || function (p) {
	          return p.toString() === '[object SafariRemoteNotification]';
	        }(!window['safari'] || safari.pushNotification);
	      }
	    }
	
	    /**
	     * @method isChrome
	     * @signature isChrome()
	     * @description
	     *   [en]Returns whether the browser is Chrome.[/en]
	     *   [ja]Chrome上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isChrome',
	    value: function isChrome() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'chrome';
	      } else {
	        return !!window.chrome && !(!!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0) && !(navigator.userAgent.indexOf(' Edge/') >= 0);
	      }
	    }
	
	    /**
	     * @method isIE
	     * @signature isIE()
	     * @description
	     *   [en]Returns whether the browser is Internet Explorer.[/en]
	     *   [ja]Internet Explorer上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isIE',
	    value: function isIE() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'ie';
	      } else {
	        return false || !!document.documentMode;
	      }
	    }
	
	    /**
	     * @method isEdge
	     * @signature isEdge()
	     * @description
	     *   [en]Returns whether the browser is Edge.[/en]
	     *   [ja]Edge上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isEdge',
	    value: function isEdge() {
	      if (this._renderPlatform) {
	        return this._renderPlatform === 'edge';
	      } else {
	        return navigator.userAgent.indexOf(' Edge/') >= 0;
	      }
	    }
	
	    /**
	     * @method isIOS7above
	     * @signature isIOS7above()
	     * @description
	     *   [en]Returns whether the iOS version is 7 or above.[/en]
	     *   [ja]iOS7以上で実行されているかどうかを返します。[/ja]
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isIOS7above',
	    value: function isIOS7above() {
	      if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {
	        return (/iOS/i.test(device.platform) && parseInt(device.version.split('.')[0]) >= 7
	        );
	      } else if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {
	        var ver = (navigator.userAgent.match(/\b[0-9]+_[0-9]+(?:_[0-9]+)?\b/) || [''])[0].replace(/_/g, '.');
	        return parseInt(ver.split('.')[0]) >= 7;
	      }
	      return false;
	    }
	
	    /**
	     * @return {String}
	     */
	
	  }, {
	    key: 'getMobileOS',
	    value: function getMobileOS() {
	      if (this.isAndroid()) {
	        return 'android';
	      } else if (this.isIOS()) {
	        return 'ios';
	      } else if (this.isWP()) {
	        return 'wp';
	      } else {
	        return 'other';
	      }
	    }
	
	    /**
	     * @return {String}
	     */
	
	  }, {
	    key: 'getIOSDevice',
	    value: function getIOSDevice() {
	      if (this.isIPhone()) {
	        return 'iphone';
	      } else if (this.isIPad()) {
	        return 'ipad';
	      } else if (this.isIPod()) {
	        return 'ipod';
	      } else {
	        return 'na';
	      }
	    }
	  }]);
	  return Platform;
	}();
	
	var platform = new Platform();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var pageAttributeExpression = {
	  _variables: {},
	
	  /**
	   * Define a variable.
	   *
	   * @param {String} name Name of the variable
	   * @param {String|Function} value Value of the variable. Can be a string or a function. The function must return a string.
	   * @param {Boolean} overwrite If this value is false, an error will be thrown when trying to define a variable that has already been defined.
	   */
	  defineVariable: function defineVariable(name, value) {
	    var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	
	    if (typeof name !== 'string') {
	      throw new Error('Variable name must be a string.');
	    } else if (typeof value !== 'string' && typeof value !== 'function') {
	      throw new Error('Variable value must be a string or a function.');
	    } else if (this._variables.hasOwnProperty(name) && !overwrite) {
	      throw new Error('"' + name + '" is already defined.');
	    }
	    this._variables[name] = value;
	  },
	
	  /**
	   * Get a variable.
	   *
	   * @param {String} name Name of the variable.
	   * @return {String|Function|null}
	   */
	  getVariable: function getVariable(name) {
	    if (!this._variables.hasOwnProperty(name)) {
	      return null;
	    }
	
	    return this._variables[name];
	  },
	
	  /**
	   * Remove a variable.
	   *
	   * @param {String} name Name of the varaible.
	   */
	  removeVariable: function removeVariable(name) {
	    delete this._variables[name];
	  },
	
	  /**
	   * Get all variables.
	   *
	   * @return {Object}
	   */
	  getAllVariables: function getAllVariables() {
	    return this._variables;
	  },
	  _parsePart: function _parsePart(part) {
	    var c = void 0,
	        inInterpolation = false,
	        currentIndex = 0;
	
	    var tokens = [];
	
	    if (part.length === 0) {
	      throw new Error('Unable to parse empty string.');
	    }
	
	    for (var i = 0; i < part.length; i++) {
	      c = part.charAt(i);
	
	      if (c === '$' && part.charAt(i + 1) === '{') {
	        if (inInterpolation) {
	          throw new Error('Nested interpolation not supported.');
	        }
	
	        var token = part.substring(currentIndex, i);
	        if (token.length > 0) {
	          tokens.push(part.substring(currentIndex, i));
	        }
	
	        currentIndex = i;
	        inInterpolation = true;
	      } else if (c === '}') {
	        if (!inInterpolation) {
	          throw new Error('} must be preceeded by ${');
	        }
	
	        var _token = part.substring(currentIndex, i + 1);
	        if (_token.length > 0) {
	          tokens.push(part.substring(currentIndex, i + 1));
	        }
	
	        currentIndex = i + 1;
	        inInterpolation = false;
	      }
	    }
	
	    if (inInterpolation) {
	      throw new Error('Unterminated interpolation.');
	    }
	
	    tokens.push(part.substring(currentIndex, part.length));
	
	    return tokens;
	  },
	  _replaceToken: function _replaceToken(token) {
	    var re = /^\${(.*?)}$/,
	        match = token.match(re);
	
	    if (match) {
	      var name = match[1].trim();
	      var variable = this.getVariable(name);
	
	      if (variable === null) {
	        throw new Error('Variable "' + name + '" does not exist.');
	      } else if (typeof variable === 'string') {
	        return variable;
	      } else {
	        var rv = variable();
	
	        if (typeof rv !== 'string') {
	          throw new Error('Must return a string.');
	        }
	
	        return rv;
	      }
	    } else {
	      return token;
	    }
	  },
	  _replaceTokens: function _replaceTokens(tokens) {
	    return tokens.map(this._replaceToken.bind(this));
	  },
	  _parseExpression: function _parseExpression(expression) {
	    return expression.split(',').map(function (part) {
	      return part.trim();
	    }).map(this._parsePart.bind(this)).map(this._replaceTokens.bind(this)).map(function (part) {
	      return part.join('');
	    });
	  },
	
	  /**
	   * Evaluate an expression.
	   *
	   * @param {String} expression An page attribute expression.
	   * @return {Array}
	   */
	  evaluate: function evaluate(expression) {
	    if (!expression) {
	      return [];
	    }
	
	    return this._parseExpression(expression);
	  }
	};
	
	// Define default variables.
	pageAttributeExpression.defineVariable('mobileOS', platform.getMobileOS());
	pageAttributeExpression.defineVariable('iOSDevice', platform.getIOSDevice());
	pageAttributeExpression.defineVariable('runtime', function () {
	  return platform.isWebView() ? 'cordova' : 'browser';
	});
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var internal$1 = {};
	
	internal$1.config = {
	  autoStatusBarFill: true,
	  animationsDisabled: false,
	  warningsDisabled: false
	};
	
	internal$1.nullElement = window.document.createElement('div');
	
	/**
	 * @return {Boolean}
	 */
	internal$1.isEnabledAutoStatusBarFill = function () {
	  return !!internal$1.config.autoStatusBarFill;
	};
	
	/**
	 * @param {String} html
	 * @return {String}
	 */
	internal$1.normalizePageHTML = function (html) {
	  html = ('' + html).trim();
	
	  if (!html.match(/^<ons-page/)) {
	    html = '<ons-page _muted>' + html + '</ons-page>';
	  }
	
	  return html;
	};
	
	internal$1.waitDOMContentLoaded = function (callback) {
	  if (window.document.readyState === 'loading' || window.document.readyState == 'uninitialized') {
	    window.document.addEventListener('DOMContentLoaded', callback);
	  } else {
	    setImmediate(callback);
	  }
	};
	
	internal$1.autoStatusBarFill = function (action) {
	  var onReady = function onReady() {
	    if (internal$1.shouldFillStatusBar()) {
	      action();
	    }
	    document.removeEventListener('deviceready', onReady);
	    document.removeEventListener('DOMContentLoaded', onReady);
	  };
	
	  if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object') {
	    document.addEventListener('deviceready', onReady);
	  } else if (['complete', 'interactive'].indexOf(document.readyState) === -1) {
	    document.addEventListener('DOMContentLoaded', function () {
	      onReady();
	    });
	  } else {
	    onReady();
	  }
	};
	
	internal$1.shouldFillStatusBar = function () {
	  return internal$1.isEnabledAutoStatusBarFill() && platform.isWebView() && platform.isIOS7above();
	};
	
	internal$1.templateStore = {
	  _storage: {},
	
	  /**
	   * @param {String} key
	   * @return {String/null} template
	   */
	  get: function get(key) {
	    return internal$1.templateStore._storage[key] || null;
	  },
	
	
	  /**
	   * @param {String} key
	   * @param {String} template
	   */
	  set: function set(key, template) {
	    internal$1.templateStore._storage[key] = template;
	  }
	};
	
	window.document.addEventListener('_templateloaded', function (e) {
	  if (e.target.nodeName.toLowerCase() === 'ons-template') {
	    internal$1.templateStore.set(e.templateId, e.template);
	  }
	}, false);
	
	window.document.addEventListener('DOMContentLoaded', function () {
	  register('script[type="text/ons-template"]');
	  register('script[type="text/template"]');
	  register('script[type="text/ng-template"]');
	
	  function register(query) {
	    var templates = window.document.querySelectorAll(query);
	    for (var i = 0; i < templates.length; i++) {
	      internal$1.templateStore.set(templates[i].getAttribute('id'), templates[i].textContent);
	    }
	  }
	}, false);
	
	/**
	 * @param {String} page
	 * @return {Promise}
	 */
	internal$1.getTemplateHTMLAsync = function (page) {
	  return new Promise(function (resolve, reject) {
	    setImmediate(function () {
	      var cache = internal$1.templateStore.get(page);
	
	      if (cache) {
	        var html = typeof cache === 'string' ? cache : cache[1];
	        resolve(html);
	      } else {
	        var xhr = new XMLHttpRequest();
	        xhr.open('GET', page, true);
	        xhr.onload = function (response) {
	          var html = xhr.responseText;
	          if (xhr.status >= 400 && xhr.status < 600) {
	            reject(html);
	          } else {
	            resolve(html);
	          }
	        };
	        xhr.onerror = function () {
	          throw new Error('The page is not found: ' + page);
	        };
	        xhr.send(null);
	      }
	    });
	  });
	};
	
	/**
	 * @param {String} page
	 * @return {Promise}
	 */
	internal$1.getPageHTMLAsync = function (page) {
	  var pages = pageAttributeExpression.evaluate(page);
	
	  var getPage = function getPage(page) {
	    if (typeof page !== 'string') {
	      return Promise.reject('Must specify a page.');
	    }
	
	    return internal$1.getTemplateHTMLAsync(page).then(function (html) {
	      return internal$1.normalizePageHTML(html);
	    }, function (error) {
	      if (pages.length === 0) {
	        return Promise.reject(error);
	      }
	
	      return getPage(pages.shift());
	    }).then(function (html) {
	      return internal$1.normalizePageHTML(html);
	    });
	  };
	
	  return getPage(pages.shift());
	};
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var AnimatorFactory = function () {
	
	  /**
	   * @param {Object} opts
	   * @param {Object} opts.animators The dictionary for animator classes
	   * @param {Function} opts.baseClass The base class of animators
	   * @param {String} [opts.baseClassName] The name of the base class of animators
	   * @param {String} [opts.defaultAnimation] The default animation name
	   * @param {Object} [opts.defaultAnimationOptions] The default animation options
	   */
	  function AnimatorFactory(opts) {
	    classCallCheck(this, AnimatorFactory);
	
	    this._animators = opts.animators;
	    this._baseClass = opts.baseClass;
	    this._baseClassName = opts.baseClassName || opts.baseClass.name;
	    this._animation = opts.defaultAnimation || 'default';
	    this._animationOptions = opts.defaultAnimationOptions || {};
	
	    if (!this._animators[this._animation]) {
	      throw new Error('No such animation: ' + this._animation);
	    }
	  }
	
	  /**
	   * @param {String} jsonString
	   * @return {Object/null}
	   */
	
	
	  createClass(AnimatorFactory, [{
	    key: 'setAnimationOptions',
	
	
	    /**
	     * @param {Object} options
	     */
	    value: function setAnimationOptions(options) {
	      this._animationOptions = options;
	    }
	
	    /**
	     * @param {Object} options
	     * @param {String} [options.animation] The animation name
	     * @param {Object} [options.animationOptions] The animation options
	     * @param {Object} defaultAnimator The default animator instance
	     * @return {Object} An animator instance
	     */
	
	  }, {
	    key: 'newAnimator',
	    value: function newAnimator() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var defaultAnimator = arguments[1];
	
	
	      var animator = null;
	
	      if (options.animation instanceof this._baseClass) {
	        return options.animation;
	      }
	
	      var Animator = null;
	
	      if (typeof options.animation === 'string') {
	        Animator = this._animators[options.animation];
	      }
	
	      if (!Animator && defaultAnimator) {
	        animator = defaultAnimator;
	      } else {
	        Animator = Animator || this._animators[this._animation];
	
	        var animationOpts = util.extend({}, this._animationOptions, options.animationOptions || {}, internal$1.config.animationsDisabled ? { duration: 0, delay: 0 } : {});
	
	        animator = new Animator(animationOpts);
	
	        if (typeof animator === 'function') {
	          animator = new animator(animationOpts); // eslint-disable-line new-cap
	        }
	      }
	
	      if (!(animator instanceof this._baseClass)) {
	        throw new Error('"animator" is not an instance of ' + this._baseClassName + '.');
	      }
	
	      return animator;
	    }
	  }], [{
	    key: 'parseAnimationOptionsString',
	    value: function parseAnimationOptionsString(jsonString) {
	      try {
	        if (typeof jsonString === 'string') {
	          var result = util.animationOptionsParse(jsonString);
	          if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object' && result !== null) {
	            return result;
	          } else {
	            console.error('"animation-options" attribute must be a JSON object string: ' + jsonString);
	          }
	        }
	        return {};
	      } catch (e) {
	        console.error('"animation-options" attribute must be a JSON object string: ' + jsonString);
	        return {};
	      }
	    }
	  }]);
	  return AnimatorFactory;
	}();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var ModifierUtil = function () {
	  function ModifierUtil() {
	    classCallCheck(this, ModifierUtil);
	  }
	
	  createClass(ModifierUtil, null, [{
	    key: 'diff',
	
	    /**
	     * @param {String} last
	     * @param {String} current
	     */
	    value: function diff(last, current) {
	      last = makeDict(('' + last).trim());
	      current = makeDict(('' + current).trim());
	
	      var removed = Object.keys(last).reduce(function (result, token) {
	        if (!current[token]) {
	          result.push(token);
	        }
	        return result;
	      }, []);
	
	      var added = Object.keys(current).reduce(function (result, token) {
	        if (!last[token]) {
	          result.push(token);
	        }
	        return result;
	      }, []);
	
	      return { added: added, removed: removed };
	
	      function makeDict(modifier) {
	        var dict = {};
	        ModifierUtil.split(modifier).forEach(function (token) {
	          return dict[token] = token;
	        });
	        return dict;
	      }
	    }
	
	    /**
	     * @param {Object} diff
	     * @param {Array} diff.removed
	     * @param {Array} diff.added
	     * @param {Object} classList
	     * @param {String} template
	     */
	
	  }, {
	    key: 'applyDiffToClassList',
	    value: function applyDiffToClassList(diff, classList, template) {
	      diff.added.map(function (modifier) {
	        return template.replace(/\*/g, modifier);
	      }).forEach(function (klass) {
	        return classList.add(klass);
	      });
	
	      diff.removed.map(function (modifier) {
	        return template.replace(/\*/g, modifier);
	      }).forEach(function (klass) {
	        return classList.remove(klass);
	      });
	    }
	
	    /**
	     * @param {Object} diff
	     * @param {Array} diff.removed
	     * @param {Array} diff.added
	     * @param {HTMLElement} element
	     * @param {Object} scheme
	     */
	
	  }, {
	    key: 'applyDiffToElement',
	    value: function applyDiffToElement(diff, element, scheme) {
	      for (var selector in scheme) {
	        if (scheme.hasOwnProperty(selector)) {
	          var targetElements = !selector || util.match(element, selector) ? [element] : element.querySelectorAll(selector);
	          for (var i = 0; i < targetElements.length; i++) {
	            ModifierUtil.applyDiffToClassList(diff, targetElements[i].classList, scheme[selector]);
	          }
	        }
	      }
	    }
	
	    /**
	     * @param {String} last
	     * @param {String} current
	     * @param {HTMLElement} element
	     * @param {Object} scheme
	     */
	
	  }, {
	    key: 'onModifierChanged',
	    value: function onModifierChanged(last, current, element, scheme) {
	      return ModifierUtil.applyDiffToElement(ModifierUtil.diff(last, current), element, scheme);
	    }
	
	    /**
	     * @param {HTMLElement} element
	     * @param {Object} scheme
	     */
	
	  }, {
	    key: 'initModifier',
	    value: function initModifier(element, scheme) {
	      var modifier = element.getAttribute('modifier');
	      if (typeof modifier !== 'string') {
	        return;
	      }
	
	      ModifierUtil.applyDiffToElement({
	        removed: [],
	        added: ModifierUtil.split(modifier)
	      }, element, scheme);
	    }
	  }, {
	    key: 'split',
	    value: function split(modifier) {
	      if (typeof modifier !== 'string') {
	        return [];
	      }
	
	      return modifier.trim().split(/ +/).filter(function (token) {
	        return token !== '';
	      });
	    }
	
	    /**
	     * Add modifier token to an element.
	     */
	
	  }, {
	    key: 'addModifier',
	    value: function addModifier(element, modifierToken) {
	      if (!element.hasAttribute('modifier')) {
	        element.setAttribute('modifier', modifierToken);
	      } else {
	        var tokens = ModifierUtil.split(element.getAttribute('modifier'));
	        if (tokens.indexOf(modifierToken) == -1) {
	          tokens.push(modifierToken);
	          element.setAttribute('modifier', tokens.join(' '));
	        }
	      }
	    }
	
	    /**
	     * Remove modifier token from an element.
	     */
	
	  }, {
	    key: 'removeModifier',
	    value: function removeModifier(element, modifierToken) {
	      if (element.hasAttribute('modifier')) {
	        var tokens = ModifierUtil.split(element.getAttribute('modifier'));
	        var index = tokens.indexOf(modifierToken);
	        if (index !== -1) {
	          tokens.splice(index, 1);
	          element.setAttribute('modifier', tokens.join(' '));
	        }
	      }
	    }
	  }]);
	  return ModifierUtil;
	}();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var LazyRepeatDelegate = function () {
	  function LazyRepeatDelegate(userDelegate) {
	    var templateElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	    classCallCheck(this, LazyRepeatDelegate);
	
	    if ((typeof userDelegate === 'undefined' ? 'undefined' : _typeof(userDelegate)) !== 'object' || userDelegate === null) {
	      throw Error('"delegate" parameter must be an object.');
	    }
	    this._userDelegate = userDelegate;
	
	    if (!(templateElement instanceof Element) && templateElement !== null) {
	      throw Error('"templateElement" parameter must be an instance of Element or null.');
	    }
	    this._templateElement = templateElement;
	  }
	
	  createClass(LazyRepeatDelegate, [{
	    key: 'hasRenderFunction',
	
	
	    /**
	     * @return {Boolean}
	     */
	    value: function hasRenderFunction() {
	      return this._userDelegate._render instanceof Function;
	    }
	
	    /**
	     * @return {void}
	     */
	
	  }, {
	    key: '_render',
	    value: function _render() {
	      this._userDelegate._render.apply(this._userDelegate, arguments);
	    }
	
	    /**
	     * @param {Number} index
	     * @param {Function} done A function that take item object as parameter.
	     */
	
	  }, {
	    key: 'loadItemElement',
	    value: function loadItemElement(index, done) {
	      if (this._userDelegate.loadItemElement instanceof Function) {
	        this._userDelegate.loadItemElement(index, done);
	      } else {
	        var element = this._userDelegate.createItemContent(index, this._templateElement);
	        if (!(element instanceof Element)) {
	          throw Error('createItemContent() must return an instance of Element.');
	        }
	
	        done({ element: element });
	      }
	    }
	
	    /**
	     * @return {Number}
	     */
	
	  }, {
	    key: 'countItems',
	    value: function countItems() {
	      var count = this._userDelegate.countItems();
	      if (typeof count !== 'number') {
	        throw Error('countItems() must return a number.');
	      }
	      return count;
	    }
	
	    /**
	     * @param {Number} index
	     * @param {Object} item
	     * @param {Element} item.element
	     */
	
	  }, {
	    key: 'updateItem',
	    value: function updateItem(index, item) {
	      if (this._userDelegate.updateItemContent instanceof Function) {
	        this._userDelegate.updateItemContent(index, item);
	      }
	    }
	
	    /**
	     * @return {Number}
	     */
	
	  }, {
	    key: 'calculateItemHeight',
	    value: function calculateItemHeight(index) {
	      if (this._userDelegate.calculateItemHeight instanceof Function) {
	        var height = this._userDelegate.calculateItemHeight(index);
	
	        if (typeof height !== 'number') {
	          throw Error('calculateItemHeight() must return a number.');
	        }
	
	        return height;
	      }
	
	      return 0;
	    }
	
	    /**
	     * @param {Number} index
	     * @param {Object} item
	     */
	
	  }, {
	    key: 'destroyItem',
	    value: function destroyItem(index, item) {
	      if (this._userDelegate.destroyItem instanceof Function) {
	        this._userDelegate.destroyItem(index, item);
	      }
	    }
	
	    /**
	     * @return {void}
	     */
	
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      if (this._userDelegate.destroy instanceof Function) {
	        this._userDelegate.destroy();
	      }
	
	      this._userDelegate = this._templateElement = null;
	    }
	  }, {
	    key: 'itemHeight',
	    get: function get() {
	      return this._userDelegate.itemHeight;
	    }
	  }]);
	  return LazyRepeatDelegate;
	}();
	
	/**
	 * This class provide core functions for ons-lazy-repeat.
	 */
	var LazyRepeatProvider = function () {
	
	  /**
	   * @param {Element} wrapperElement
	   * @param {LazyRepeatDelegate} delegate
	   */
	  function LazyRepeatProvider(wrapperElement, delegate) {
	    classCallCheck(this, LazyRepeatProvider);
	
	    if (!(delegate instanceof LazyRepeatDelegate)) {
	      throw Error('"delegate" parameter must be an instance of LazyRepeatDelegate.');
	    }
	
	    this._wrapperElement = wrapperElement;
	    this._delegate = delegate;
	    this._insertIndex = this._wrapperElement.children[0] && this._wrapperElement.children[0].tagName === 'ONS-LAZY-REPEAT' ? 1 : 0;
	
	    if (wrapperElement.tagName.toLowerCase() === 'ons-list') {
	      wrapperElement.classList.add('lazy-list');
	    }
	
	    this._pageContent = this._findPageContentElement(wrapperElement);
	
	    if (!this._pageContent) {
	      throw new Error('ons-lazy-repeat must be a descendant of an <ons-page> or an element.');
	    }
	
	    this.lastScrollTop = this._pageContent.scrollTop;
	    this.padding = 0;
	    this._topPositions = [0];
	    this._renderedItems = {};
	
	    if (!this._delegate.itemHeight && !this._delegate.calculateItemHeight(0)) {
	      this._unknownItemHeight = true;
	    }
	
	    this._addEventListeners();
	    this._onChange();
	  }
	
	  createClass(LazyRepeatProvider, [{
	    key: '_findPageContentElement',
	    value: function _findPageContentElement(wrapperElement) {
	      var pageContent = util.findParent(wrapperElement, '.page__content');
	
	      if (pageContent) {
	        return pageContent;
	      }
	
	      var page = util.findParent(wrapperElement, 'ons-page');
	      if (page) {
	        var content = util.findChild(page, '.content');
	        if (content) {
	          return content;
	        }
	      }
	
	      return null;
	    }
	  }, {
	    key: '_checkItemHeight',
	    value: function _checkItemHeight(callback) {
	      var _this = this;
	
	      this._delegate.loadItemElement(0, function (item) {
	        if (!_this._unknownItemHeight) {
	          throw Error('Invalid state');
	        }
	
	        _this._wrapperElement.appendChild(item.element);
	
	        var done = function done() {
	          _this._delegate.destroyItem(0, item);
	          _this._wrapperElement.removeChild(item.element);
	          delete _this._unknownItemHeight;
	          callback();
	        };
	
	        _this._itemHeight = item.element.offsetHeight;
	
	        if (_this._itemHeight > 0) {
	          done();
	          return;
	        }
	
	        // retry to measure offset height
	        // dirty fix for angular2 directive
	        var lastVisibility = _this._wrapperElement.style.visibility;
	        _this._wrapperElement.style.visibility = 'hidden';
	        item.element.style.visibility = 'hidden';
	
	        setImmediate(function () {
	          _this._itemHeight = item.element.offsetHeight;
	          if (_this._itemHeight == 0) {
	            throw Error('Invalid state: this._itemHeight must be greater than zero.');
	          }
	          _this._wrapperElement.style.visibility = lastVisibility;
	          done();
	        });
	      });
	    }
	  }, {
	    key: '_countItems',
	    value: function _countItems() {
	      return this._delegate.countItems();
	    }
	  }, {
	    key: '_getItemHeight',
	    value: function _getItemHeight(i) {
	      // Item is rendered
	      if (this._renderedItems.hasOwnProperty(i)) {
	        if (!this._renderedItems[i].hasOwnProperty('height')) {
	          this._renderedItems[i].height = this._renderedItems[i].element.offsetHeight;
	        }
	        return this._renderedItems[i].height;
	      }
	
	      // Item is not rendered, scroll up
	      if (this._topPositions[i + 1] && this._topPositions[i]) {
	        return this._topPositions[i + 1] - this._topPositions[i];
	      }
	      // Item is not rendered, scroll down
	      return this.staticItemHeight || this._delegate.calculateItemHeight(i);
	    }
	  }, {
	    key: '_calculateRenderedHeight',
	    value: function _calculateRenderedHeight() {
	      var _this2 = this;
	
	      return Object.keys(this._renderedItems).reduce(function (a, b) {
	        return a + _this2._getItemHeight(+b);
	      }, 0);
	    }
	  }, {
	    key: '_onChange',
	    value: function _onChange() {
	      this._render();
	    }
	  }, {
	    key: '_lastItemRendered',
	    value: function _lastItemRendered() {
	      return Math.max.apply(Math, toConsumableArray(Object.keys(this._renderedItems)));
	    }
	  }, {
	    key: '_firstItemRendered',
	    value: function _firstItemRendered() {
	      return Math.min.apply(Math, toConsumableArray(Object.keys(this._renderedItems)));
	    }
	  }, {
	    key: 'refresh',
	    value: function refresh() {
	      var lastItemIndex = Math.min(this._lastItemRendered(), this._countItems() - 1);
	      var firstItemIndex = this._firstItemRendered();
	      this._wrapperElement.style.height = this._topPositions[firstItemIndex] + this._calculateRenderedHeight() + 'px';
	      this.padding = this._topPositions[firstItemIndex];
	      this._removeAllElements();
	      this._render({ forceScrollDown: true, forceFirstIndex: firstItemIndex, forceLastIndex: lastItemIndex });
	      this._wrapperElement.style.height = 'inherit';
	    }
	  }, {
	    key: '_render',
	    value: function _render() {
	      var _this3 = this;
	
	      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	          _ref$forceScrollDown = _ref.forceScrollDown,
	          forceScrollDown = _ref$forceScrollDown === undefined ? false : _ref$forceScrollDown,
	          forceFirstIndex = _ref.forceFirstIndex,
	          forceLastIndex = _ref.forceLastIndex;
	
	      if (this._unknownItemHeight) {
	        return this._checkItemHeight(this._render.bind(this, arguments[0]));
	      }
	
	      var isScrollUp = !forceScrollDown && this.lastScrollTop > this._pageContent.scrollTop;
	      this.lastScrollTop = this._pageContent.scrollTop;
	      var keep = {};
	
	      var offset = this._wrapperElement.getBoundingClientRect().top;
	      var limit = 4 * window.innerHeight - offset;
	      var count = this._countItems();
	
	      var items = [];
	      var start = forceFirstIndex || Math.max(0, this._calculateStartIndex(offset) - 30);
	      var i = start;
	
	      for (var top = this._topPositions[i]; i < count && top < limit; i++) {
	        if (i >= this._topPositions.length) {
	          // perf optimization
	          this._topPositions.length += 100;
	        }
	
	        this._topPositions[i] = top;
	        top += this._getItemHeight(i);
	      }
	
	      if (this._delegate.hasRenderFunction && this._delegate.hasRenderFunction()) {
	        return this._delegate._render(start, i, function () {
	          _this3.padding = _this3._topPositions[start];
	        });
	      }
	
	      if (isScrollUp) {
	        for (var j = i - 1; j >= start; j--) {
	          keep[j] = true;
	          this._renderElement(j, isScrollUp);
	        }
	      } else {
	        var lastIndex = forceLastIndex || Math.max.apply(Math, [i - 1].concat(toConsumableArray(Object.keys(this._renderedItems))));
	        for (var _j = start; _j <= lastIndex; _j++) {
	          keep[_j] = true;
	          this._renderElement(_j, isScrollUp);
	        }
	      }
	
	      Object.keys(this._renderedItems).forEach(function (key) {
	        return keep[key] || _this3._removeElement(key, isScrollUp);
	      });
	    }
	
	    /**
	     * @param {Number} index
	     * @param {Boolean} isScrollUp
	     */
	
	  }, {
	    key: '_renderElement',
	    value: function _renderElement(index, isScrollUp) {
	      var _this4 = this;
	
	      var item = this._renderedItems[index];
	      if (item) {
	        this._delegate.updateItem(index, item); // update if it exists
	        return;
	      }
	
	      this._delegate.loadItemElement(index, function (item) {
	        if (isScrollUp) {
	          _this4._wrapperElement.insertBefore(item.element, _this4._wrapperElement.children[_this4._insertIndex]);
	          _this4.padding = _this4._topPositions[index];
	          item.height = _this4._topPositions[index + 1] - _this4._topPositions[index];
	        } else {
	          _this4._wrapperElement.appendChild(item.element);
	        }
	
	        _this4._renderedItems[index] = item;
	      });
	    }
	
	    /**
	     * @param {Number} index
	     * @param {Boolean} isScrollUp
	     */
	
	  }, {
	    key: '_removeElement',
	    value: function _removeElement(index) {
	      var isScrollUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	      index = +index;
	      var item = this._renderedItems[index];
	      this._delegate.destroyItem(index, item);
	
	      if (isScrollUp) {
	        this._topPositions[index + 1] = undefined;
	      } else {
	        this.padding = this.padding + this._getItemHeight(index);
	      }
	
	      if (item.element.parentElement) {
	        item.element.parentElement.removeChild(item.element);
	      }
	
	      delete this._renderedItems[index];
	    }
	  }, {
	    key: '_removeAllElements',
	    value: function _removeAllElements() {
	      var _this5 = this;
	
	      Object.keys(this._renderedItems).forEach(function (key) {
	        return _this5._removeElement(key);
	      });
	    }
	  }, {
	    key: '_recalculateTopPositions',
	    value: function _recalculateTopPositions(start, end) {
	      for (var i = start; i <= end; i++) {
	        this._topPositions[i + 1] = this._topPositions[i] + this._getItemHeight(i);
	      }
	    }
	  }, {
	    key: '_calculateStartIndex',
	    value: function _calculateStartIndex(current) {
	      var firstItemIndex = this._firstItemRendered();
	      var lastItemIndex = this._lastItemRendered();
	
	      // Fix for Safari scroll and Angular 2
	      this._recalculateTopPositions(firstItemIndex, lastItemIndex);
	
	      var start = 0;
	      var end = this._countItems() - 1;
	
	      // Binary search for index at top of screen so we can speed up rendering.
	      for (;;) {
	        var middle = Math.floor((start + end) / 2);
	        var value = current + this._topPositions[middle];
	
	        if (end < start) {
	          return 0;
	        } else if (value <= 0 && value + this._getItemHeight(middle) > 0) {
	          return middle;
	        } else if (isNaN(value) || value >= 0) {
	          end = middle - 1;
	        } else {
	          start = middle + 1;
	        }
	      }
	    }
	  }, {
	    key: '_debounce',
	    value: function _debounce(func, wait, immediate) {
	      var timeout = void 0;
	      return function () {
	        var _this6 = this,
	            _arguments = arguments;
	
	        var callNow = immediate && !timeout;
	        clearTimeout(timeout);
	        if (callNow) {
	          func.apply(this, arguments);
	        } else {
	          timeout = setTimeout(function () {
	            timeout = null;
	            func.apply(_this6, _arguments);
	          }, wait);
	        }
	      };
	    }
	  }, {
	    key: '_doubleFireOnTouchend',
	    value: function _doubleFireOnTouchend() {
	      this._render();
	      this._debounce(this._render.bind(this), 100);
	    }
	  }, {
	    key: '_addEventListeners',
	    value: function _addEventListeners() {
	      util.bindListeners(this, ['_onChange', '_doubleFireOnTouchend']);
	
	      if (platform.isIOS()) {
	        this._boundOnChange = this._debounce(this._boundOnChange, 30);
	      }
	
	      this._pageContent.addEventListener('scroll', this._boundOnChange, true);
	
	      if (platform.isIOS()) {
	        this._pageContent.addEventListener('touchmove', this._boundOnChange, true);
	        this._pageContent.addEventListener('touchend', this._boundDoubleFireOnTouchend, true);
	      }
	
	      window.document.addEventListener('resize', this._boundOnChange, true);
	    }
	  }, {
	    key: '_removeEventListeners',
	    value: function _removeEventListeners() {
	      this._pageContent.removeEventListener('scroll', this._boundOnChange, true);
	
	      if (platform.isIOS()) {
	        this._pageContent.removeEventListener('touchmove', this._boundOnChange, true);
	        this._pageContent.removeEventListener('touchend', this._boundDoubleFireOnTouchend, true);
	      }
	
	      window.document.removeEventListener('resize', this._boundOnChange, true);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      this._removeAllElements();
	      this._delegate.destroy();
	      this._parentElement = this._delegate = this._renderedItems = null;
	      this._removeEventListeners();
	    }
	  }, {
	    key: 'padding',
	    get: function get() {
	      return parseInt(this._wrapperElement.style.paddingTop, 10);
	    },
	    set: function set(newValue) {
	      this._wrapperElement.style.paddingTop = newValue + 'px';
	    }
	  }, {
	    key: 'staticItemHeight',
	    get: function get() {
	      return this._delegate.itemHeight || this._itemHeight;
	    }
	  }]);
	  return LazyRepeatProvider;
	}();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	internal$1.AnimatorFactory = AnimatorFactory;
	internal$1.ModifierUtil = ModifierUtil;
	internal$1.LazyRepeatProvider = LazyRepeatProvider;
	internal$1.LazyRepeatDelegate = LazyRepeatDelegate;
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var autoStyleEnabled = true;
	
	// Modifiers
	var modifiersMap = {
	  'quiet': 'material--flat',
	  'light': 'material--flat',
	  'outline': 'material--flat',
	  'cta': '',
	  'large--quiet': 'material--flat large',
	  'large--cta': 'large',
	  'noborder': '',
	  'chevron': '',
	  'tappable': ''
	};
	
	var platforms = {};
	
	platforms.android = function (element) {
	
	  if (!/ons-fab|ons-speed-dial|ons-progress/.test(element.tagName.toLowerCase()) && !/material/.test(element.getAttribute('modifier'))) {
	
	    var oldModifier = element.getAttribute('modifier') || '';
	
	    var newModifier = oldModifier.trim().split(/\s+/).map(function (e) {
	      return modifiersMap.hasOwnProperty(e) ? modifiersMap[e] : e;
	    });
	    newModifier.unshift('material');
	
	    element.setAttribute('modifier', newModifier.join(' ').trim());
	  }
	
	  // Effects
	  if (/ons-button|ons-list-item|ons-fab|ons-speed-dial|ons-tab$/.test(element.tagName.toLowerCase()) && !element.hasAttribute('ripple') && !element.querySelector('ons-ripple')) {
	
	    if (element.tagName.toLowerCase() === 'ons-list-item') {
	      if (element.hasAttribute('tappable')) {
	        element.setAttribute('ripple', '');
	        element.removeAttribute('tappable');
	      }
	    } else {
	      element.setAttribute('ripple', '');
	    }
	  }
	};
	
	platforms.ios = function (element) {
	
	  // Modifiers
	  if (/material/.test(element.getAttribute('modifier'))) {
	    util.removeModifier(element, 'material');
	
	    if (util.removeModifier(element, 'material--flat')) {
	      util.addModifier(element, util.removeModifier(element, 'large') ? 'large--quiet' : 'quiet');
	    }
	
	    if (!element.getAttribute('modifier')) {
	      element.removeAttribute('modifier');
	    }
	  }
	
	  // Effects
	  if (element.hasAttribute('ripple')) {
	    if (element.tagName.toLowerCase() === 'ons-list-item') {
	      element.setAttribute('tappable', '');
	    }
	
	    element.removeAttribute('ripple');
	  }
	};
	
	var unlocked = {
	  android: true
	};
	
	var prepareAutoStyle = function prepareAutoStyle(element, force) {
	  if (autoStyleEnabled && !element.hasAttribute('disable-auto-styling')) {
	    var mobileOS = platform.getMobileOS();
	    if (platforms.hasOwnProperty(mobileOS) && (unlocked.hasOwnProperty(mobileOS) || force)) {
	      platforms[mobileOS](element);
	    }
	  }
	};
	
	var mapModifier = function mapModifier(modifier, element, force) {
	  if (autoStyleEnabled && !element.hasAttribute('disable-auto-styling')) {
	    var mobileOS = platform.getMobileOS();
	    if (platforms.hasOwnProperty(mobileOS) && (unlocked.hasOwnProperty(mobileOS) || force)) {
	      return modifiersMap.hasOwnProperty(modifier) ? modifiersMap[modifier] : modifier;
	    }
	  }
	
	  return modifier;
	};
	
	var autoStyle = {
	  isEnabled: function isEnabled() {
	    return autoStyleEnabled;
	  },
	  enable: function enable() {
	    return autoStyleEnabled = true;
	  },
	  disable: function disable() {
	    return autoStyleEnabled = false;
	  },
	  prepare: prepareAutoStyle,
	  mapModifier: mapModifier
	};
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var unwrap = function unwrap(string) {
	  return string.slice(1, -1);
	};
	var isObjectString = function isObjectString(string) {
	  return string.startsWith('{') && string.endsWith('}');
	};
	var isArrayString = function isArrayString(string) {
	  return string.startsWith('[') && string.endsWith(']');
	};
	var isQuotedString = function isQuotedString(string) {
	  return string.startsWith('\'') && string.endsWith('\'') || string.startsWith('"') && string.endsWith('"');
	};
	
	var error$1 = function error$1(token, string, originalString) {
	  throw new Error('Unexpected token \'' + token + '\' at position ' + (originalString.length - string.length - 1) + ' in string: \'' + originalString + '\'');
	};
	
	var processToken = function processToken(token, string, originalString) {
	  if (token === 'true' || token === 'false') {
	    return token === 'true';
	  } else if (isQuotedString(token)) {
	    return unwrap(token);
	  } else if (!isNaN(token)) {
	    return +token;
	  } else if (isObjectString(token)) {
	    return parseObject(unwrap(token));
	  } else if (isArrayString(token)) {
	    return parseArray(unwrap(token));
	  } else {
	    error$1(token, string, originalString);
	  }
	};
	
	var nextToken = function nextToken(string) {
	  string = string.trimLeft();
	  var limit = string.length;
	
	  if (string[0] === ':' || string[0] === ',') {
	
	    limit = 1;
	  } else if (string[0] === '{' || string[0] === '[') {
	
	    var c = string.charCodeAt(0);
	    var nestedObject = 1;
	    for (var i = 1; i < string.length; i++) {
	      if (string.charCodeAt(i) === c) {
	        nestedObject++;
	      } else if (string.charCodeAt(i) === c + 2) {
	        nestedObject--;
	        if (nestedObject === 0) {
	          limit = i + 1;
	          break;
	        }
	      }
	    }
	  } else if (string[0] === '\'' || string[0] === '\"') {
	
	    for (var _i = 1; _i < string.length; _i++) {
	      if (string[_i] === string[0]) {
	        limit = _i + 1;
	        break;
	      }
	    }
	  } else {
	
	    for (var _i2 = 1; _i2 < string.length; _i2++) {
	      if ([' ', ',', ':'].indexOf(string[_i2]) !== -1) {
	        limit = _i2;
	        break;
	      }
	    }
	  }
	
	  return string.slice(0, limit);
	};
	
	var parseObject = function parseObject(string) {
	  var isValidKey = function isValidKey(key) {
	    return (/^[A-Z_\$][A-Z0-9_\$]*$/i.test(key)
	    );
	  };
	
	  string = string.trim();
	  var originalString = string;
	  var object = {};
	  var readingKey = true,
	      key = void 0,
	      previousToken = void 0,
	      token = void 0;
	
	  while (string.length > 0) {
	    previousToken = token;
	    token = nextToken(string);
	    string = string.slice(token.length, string.length).trimLeft();
	
	    if (token === ':' && (!readingKey || !previousToken || previousToken === ',') || token === ',' && readingKey || token !== ':' && token !== ',' && previousToken && previousToken !== ',' && previousToken !== ':') {
	      error$1(token, string, originalString);
	    } else if (token === ':' && readingKey && previousToken) {
	      if (isValidKey(previousToken)) {
	        key = previousToken;
	        readingKey = false;
	      } else {
	        throw new Error('Invalid key token \'' + previousToken + '\' at position 0 in string: \'' + originalString + '\'');
	      }
	    } else if (token === ',' && !readingKey && previousToken) {
	      object[key] = processToken(previousToken, string, originalString);
	      readingKey = true;
	    }
	  }
	
	  if (token) {
	    object[key] = processToken(token, string, originalString);
	  }
	
	  return object;
	};
	
	var parseArray = function parseArray(string) {
	  string = string.trim();
	  var originalString = string;
	  var array = [];
	  var previousToken = void 0,
	      token = void 0;
	
	  while (string.length > 0) {
	    previousToken = token;
	    token = nextToken(string);
	    string = string.slice(token.length, string.length).trimLeft();
	
	    if (token === ',' && (!previousToken || previousToken === ',')) {
	      error$1(token, string, originalString);
	    } else if (token === ',') {
	      array.push(processToken(previousToken, string, originalString));
	    }
	  }
	
	  if (token) {
	    if (token !== ',') {
	      array.push(processToken(token, string, originalString));
	    } else {
	      error$1(token, string, originalString);
	    }
	  }
	
	  return array;
	};
	
	var parse = function parse(string) {
	  string = string.trim();
	
	  if (isObjectString(string)) {
	    return parseObject(unwrap(string));
	  } else if (isArrayString(string)) {
	    return parseArray(unwrap(string));
	  } else {
	    throw new Error('Provided string must be object or array like: ' + string);
	  }
	};
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var util = {};
	
	/**
	 * @param {String/Function} query dot class name or node name or matcher function.
	 * @return {Function}
	 */
	util.prepareQuery = function (query) {
	  return query instanceof Function ? query : function (element) {
	    return util.match(element, query);
	  };
	};
	
	/**
	 * @param {Element} e
	 * @param {String/Function} s CSS Selector.
	 * @return {Boolean}
	 */
	util.match = function (e, s) {
	  return (e.matches || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector).call(e, s);
	};
	
	/**
	 * @param {Element} element
	 * @param {String/Function} query dot class name or node name or matcher function.
	 * @return {HTMLElement/null}
	 */
	util.findChild = function (element, query) {
	  var match = util.prepareQuery(query);
	
	  // Caution: `element.children` is `undefined` in some environments if `element` is `svg`
	  for (var i = 0; i < element.childNodes.length; i++) {
	    var node = element.childNodes[i];
	    if (node.nodeType !== Node.ELEMENT_NODE) {
	      // process only element nodes
	      continue;
	    }
	    if (match(node)) {
	      return node;
	    }
	  }
	  return null;
	};
	
	/**
	 * @param {Element} element
	 * @param {String/Function} query dot class name or node name or matcher function.
	 * @return {HTMLElement/null}
	 */
	util.findParent = function (element, query) {
	  var match = util.prepareQuery(query);
	
	  var parent = element.parentNode;
	  for (;;) {
	    if (!parent || parent === document) {
	      return null;
	    }
	    if (match(parent)) {
	      return parent;
	    }
	    parent = parent.parentNode;
	  }
	};
	
	/**
	 * @param {Element} element
	 * @return {boolean}
	 */
	util.isAttached = function (element) {
	  while (document.documentElement !== element) {
	    if (!element) {
	      return false;
	    }
	    element = element.parentNode;
	  }
	  return true;
	};
	
	/**
	 * @param {Element} element
	 * @return {boolean}
	 */
	util.hasAnyComponentAsParent = function (element) {
	  while (element && document.documentElement !== element) {
	    element = element.parentNode;
	    if (element && element.nodeName.toLowerCase().match(/(ons-navigator|ons-tabbar|ons-modal|ons-sliding-menu|ons-split-view)/)) {
	      return true;
	    }
	  }
	  return false;
	};
	
	/**
	 * @param {Element} element
	 * @param {String} action to propagate
	 */
	util.propagateAction = function (element, action) {
	  for (var i = 0; i < element.childNodes.length; i++) {
	    var child = element.childNodes[i];
	    if (child[action] instanceof Function) {
	      child[action]();
	    } else {
	      util.propagateAction(child, action);
	    }
	  }
	};
	
	/**
	 * @param {String} string - string to be camelized
	 * @return {String} Camelized string
	 */
	util.camelize = function (string) {
	  return string.toLowerCase().replace(/-([a-z])/g, function (m, l) {
	    return l.toUpperCase();
	  });
	};
	
	/**
	 * @param {String} selector - tag and class only
	 * @param {Object} style
	 * @param {Element}
	 */
	util.create = function () {
	  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	  var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  var classList = selector.split('.');
	  var element = document.createElement(classList.shift() || 'div');
	
	  if (classList.length) {
	    element.className = classList.join(' ');
	  }
	
	  util.extend(element.style, style);
	
	  return element;
	};
	
	/**
	 * @param {String} html
	 * @return {Element}
	 */
	util.createElement = function (html) {
	  var wrapper = document.createElement('div');
	  wrapper.innerHTML = html;
	
	  if (wrapper.children.length > 1) {
	    throw new Error('"html" must be one wrapper element.');
	  }
	
	  return wrapper.children[0];
	};
	
	/**
	 * @param {String} html
	 * @return {HTMLFragment}
	 */
	util.createFragment = function (html) {
	  var wrapper = document.createElement('div');
	  wrapper.innerHTML = html;
	  var fragment = document.createDocumentFragment();
	
	  while (wrapper.firstChild) {
	    fragment.appendChild(wrapper.firstChild);
	  }
	
	  return fragment;
	};
	
	/*
	 * @param {Object} dst Destination object.
	 * @param {...Object} src Source object(s).
	 * @returns {Object} Reference to `dst`.
	 */
	util.extend = function (dst) {
	  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    args[_key - 1] = arguments[_key];
	  }
	
	  for (var i = 0; i < args.length; i++) {
	    if (args[i]) {
	      var keys = Object.keys(args[i]);
	      for (var j = 0; j < keys.length; j++) {
	        var key = keys[j];
	        dst[key] = args[i][key];
	      }
	    }
	  }
	
	  return dst;
	};
	
	/**
	 * @param {Object} arrayLike
	 * @return {Array}
	 */
	util.arrayFrom = function (arrayLike) {
	  return Array.prototype.slice.apply(arrayLike);
	};
	
	/**
	 * @param {String} jsonString
	 * @param {Object} [failSafe]
	 * @return {Object}
	 */
	util.parseJSONObjectSafely = function (jsonString) {
	  var failSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	  try {
	    var result = JSON.parse('' + jsonString);
	    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object' && result !== null) {
	      return result;
	    }
	  } catch (e) {
	    return failSafe;
	  }
	  return failSafe;
	};
	
	/**
	 * @param {String} path - path such as 'myApp.controllers.data.loadData'
	 * @return {Any} - whatever is located at that path
	 */
	util.findFromPath = function (path) {
	  path = path.split('.');
	  var el = window,
	      key;
	  while (key = path.shift()) {
	    // eslint-disable-line no-cond-assign
	    el = el[key];
	  }
	  return el;
	};
	
	/**
	 * @param {HTMLElement} container - Page or page-container that implements 'topPage'
	 * @return {HTMLElement|null} - Visible page element or null if not found.
	 */
	util.getTopPage = function (container) {
	  return container && (container.tagName.toLowerCase() === 'ons-page' ? container : container.topPage) || null;
	};
	
	/**
	 * @param {HTMLElement} container - Element where the search begins
	 * @return {HTMLElement|null} - Page element that contains the visible toolbar or null.
	 */
	util.findToolbarPage = function (container) {
	  var page = util.getTopPage(container);
	
	  if (page) {
	    if (page._canAnimateToolbar()) {
	      return page;
	    }
	
	    for (var i = 0; i < page._contentElement.children.length; i++) {
	      var nextPage = util.getTopPage(page._contentElement.children[i]);
	      if (nextPage && !/ons-tabbar/i.test(page._contentElement.children[i].tagName)) {
	        return util.findToolbarPage(nextPage);
	      }
	    }
	  }
	
	  return null;
	};
	
	/**
	 * @param {Element} element
	 * @param {String} eventName
	 * @param {Object} [detail]
	 * @return {CustomEvent}
	 */
	util.triggerElementEvent = function (target, eventName) {
	  var detail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	
	  var event = new CustomEvent(eventName, {
	    bubbles: true,
	    cancelable: true,
	    detail: detail
	  });
	
	  Object.keys(detail).forEach(function (key) {
	    event[key] = detail[key];
	  });
	
	  target.dispatchEvent(event);
	
	  return event;
	};
	
	/**
	 * @param {Element} target
	 * @param {String} modifierName
	 * @return {Boolean}
	 */
	util.hasModifier = function (target, modifierName) {
	  if (!target.hasAttribute('modifier')) {
	    return false;
	  }
	  return target.getAttribute('modifier').split(/\s+/).some(function (e) {
	    return e === modifierName;
	  });
	};
	
	/**
	 * @param {Element} target
	 * @param {String} modifierName
	 * @param {Object} options.autoStyle Maps the modifierName to the corresponding styled modifier.
	 * @param {Object} options.forceAutoStyle Ignores platform limitation.
	 * @return {Boolean} Whether it was added or not.
	 */
	util.addModifier = function (target, modifierName) {
	  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  if (options.autoStyle) {
	    modifierName = autoStyle.mapModifier(modifierName, target, options.forceAutoStyle);
	  }
	
	  if (util.hasModifier(target, modifierName)) {
	    return false;
	  }
	
	  modifierName = modifierName.trim();
	  var modifierAttribute = target.getAttribute('modifier') || '';
	  target.setAttribute('modifier', (modifierAttribute + ' ' + modifierName).trim());
	  return true;
	};
	
	/**
	 * @param {Element} target
	 * @param {String} modifierName
	 * @param {Object} options.autoStyle Maps the modifierName to the corresponding styled modifier.
	 * @param {Object} options.forceAutoStyle Ignores platform limitation.
	 * @return {Boolean} Whether it was found or not.
	 */
	util.removeModifier = function (target, modifierName) {
	  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  if (!target.getAttribute('modifier')) {
	    return false;
	  }
	
	  if (options.autoStyle) {
	    modifierName = autoStyle.mapModifier(modifierName, target, options.forceAutoStyle);
	  }
	
	  var modifiers = target.getAttribute('modifier').split(/\s+/);
	
	  var newModifiers = modifiers.filter(function (item) {
	    return item && item !== modifierName;
	  });
	  target.setAttribute('modifier', newModifiers.join(' '));
	
	  return modifiers.length !== newModifiers.length;
	};
	
	// TODO: FIX
	util.updateParentPosition = function (el) {
	  if (!el._parentUpdated && el.parentElement) {
	    if (window.getComputedStyle(el.parentElement).getPropertyValue('position') === 'static') {
	      el.parentElement.style.position = 'relative';
	    }
	    el._parentUpdated = true;
	  }
	};
	
	util.toggleAttribute = function (element, name, value) {
	  if (value) {
	    element.setAttribute(name, value);
	  } else {
	    element.removeAttribute(name);
	  }
	};
	
	util.bindListeners = function (element, listenerNames) {
	  listenerNames.forEach(function (name) {
	    var boundName = name.replace(/^_[a-z]/, '_bound' + name[1].toUpperCase());
	    element[boundName] = element[boundName] || element[name].bind(element);
	  });
	};
	
	util.each = function (obj, f) {
	  return Object.keys(obj).forEach(function (key) {
	    return f(key, obj[key]);
	  });
	};
	
	/**
	 * @param {Element} target
	 * @param {Element} hasRipple
	 */
	util.updateRipple = function (target, hasRipple) {
	  if (hasRipple === undefined) {
	    hasRipple = target.hasAttribute('ripple');
	  }
	
	  var rippleElement = util.findChild(target, 'ons-ripple');
	
	  if (hasRipple) {
	    if (!rippleElement) {
	      target.insertBefore(document.createElement('ons-ripple'), target.firstChild);
	    }
	  } else if (rippleElement) {
	    rippleElement.remove();
	  }
	};
	
	/**
	 * @param {String}
	 * @return {Object}
	 */
	util.animationOptionsParse = parse;
	
	/**
	 * @param {*} value
	 */
	util.isInteger = function (value) {
	  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;
	};
	
	/**
	 * @return {Obejct} Deferred promise.
	 */
	util.defer = function () {
	  var deferred = {};
	  deferred.promise = new Promise(function (resolve, reject) {
	    deferred.resolve = resolve;
	    deferred.reject = reject;
	  });
	  return deferred;
	};
	
	/**
	 * Show warnings when they are enabled.
	 *
	 * @param {*} arguments to console.warn
	 */
	util.warn = function () {
	  if (!internal$1.config.warningsDisabled) {
	    var _console;
	
	    (_console = console).warn.apply(_console, arguments);
	  }
	};
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * Minimal animation library for managing css transition on mobile browsers.
	 */
	var TIMEOUT_RATIO = 1.4;
	
	var util$2 = {};
	
	// capitalize string
	util$2.capitalize = function (str) {
	  return str.charAt(0).toUpperCase() + str.slice(1);
	};
	
	/**
	 * @param {Object} params
	 * @param {String} params.property
	 * @param {Float} params.duration
	 * @param {String} params.timing
	 */
	util$2.buildTransitionValue = function (params) {
	  params.property = params.property || 'all';
	  params.duration = params.duration || 0.4;
	  params.timing = params.timing || 'linear';
	
	  var props = params.property.split(/ +/);
	
	  return props.map(function (prop) {
	    return prop + ' ' + params.duration + 's ' + params.timing;
	  }).join(', ');
	};
	
	/**
	 * Add an event handler on "transitionend" event.
	 */
	util$2.onceOnTransitionEnd = function (element, callback) {
	  if (!element) {
	    return function () {};
	  }
	
	  var fn = function fn(event) {
	    if (element == event.target) {
	      event.stopPropagation();
	      removeListeners();
	
	      callback();
	    }
	  };
	
	  var removeListeners = function removeListeners() {
	    util$2._transitionEndEvents.forEach(function (eventName) {
	      element.removeEventListener(eventName, fn, false);
	    });
	  };
	
	  util$2._transitionEndEvents.forEach(function (eventName) {
	    element.addEventListener(eventName, fn, false);
	  });
	
	  return removeListeners;
	};
	
	util$2._transitionEndEvents = function () {
	
	  if ('ontransitionend' in window) {
	    return ['transitionend'];
	  }
	
	  if ('onwebkittransitionend' in window) {
	    return ['webkitTransitionEnd'];
	  }
	
	  if (util$2.vendorPrefix === 'webkit' || util$2.vendorPrefix === 'o' || util$2.vendorPrefix === 'moz' || util$2.vendorPrefix === 'ms') {
	    return [util$2.vendorPrefix + 'TransitionEnd', 'transitionend'];
	  }
	
	  return [];
	}();
	
	util$2._cssPropertyDict = function () {
	  var styles = window.getComputedStyle(document.documentElement, '');
	  var dict = {};
	  var a = 'A'.charCodeAt(0);
	  var z = 'z'.charCodeAt(0);
	
	  var upper = function upper(s) {
	    return s.substr(1).toUpperCase();
	  };
	
	  for (var i = 0; i < styles.length; i++) {
	
	    var key = styles[i].replace(/^[\-]+/, '').replace(/[\-][a-z]/g, upper).replace(/^moz/, 'Moz');
	
	    if (a <= key.charCodeAt(0) && z >= key.charCodeAt(0)) {
	      if (key !== 'cssText' && key !== 'parentText') {
	        dict[key] = true;
	      }
	    }
	  }
	
	  return dict;
	}();
	
	util$2.hasCssProperty = function (name) {
	  return name in util$2._cssPropertyDict;
	};
	
	/**
	 * Vendor prefix for css property.
	 */
	util$2.vendorPrefix = function () {
	  var styles = window.getComputedStyle(document.documentElement, ''),
	      pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];
	  return pre;
	}();
	
	util$2.forceLayoutAtOnce = function (elements, callback) {
	  this.batchImmediate(function () {
	    elements.forEach(function (element) {
	      // force layout
	      element.offsetHeight;
	    });
	    callback();
	  });
	};
	
	util$2.batchImmediate = function () {
	  var callbacks = [];
	
	  return function (callback) {
	    if (callbacks.length === 0) {
	      setImmediate(function () {
	        var concreateCallbacks = callbacks.slice(0);
	        callbacks = [];
	        concreateCallbacks.forEach(function (callback) {
	          callback();
	        });
	      });
	    }
	
	    callbacks.push(callback);
	  };
	}();
	
	util$2.batchAnimationFrame = function () {
	  var callbacks = [];
	
	  var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
	    setTimeout(callback, 1000 / 60);
	  };
	
	  return function (callback) {
	    if (callbacks.length === 0) {
	      raf(function () {
	        var concreateCallbacks = callbacks.slice(0);
	        callbacks = [];
	        concreateCallbacks.forEach(function (callback) {
	          callback();
	        });
	      });
	    }
	
	    callbacks.push(callback);
	  };
	}();
	
	util$2.transitionPropertyName = function () {
	  if (util$2.hasCssProperty('transitionDuration')) {
	    return 'transition';
	  }
	
	  if (util$2.hasCssProperty(util$2.vendorPrefix + 'TransitionDuration')) {
	    return util$2.vendorPrefix + 'Transition';
	  }
	
	  throw new Error('Invalid state');
	}();
	
	/**
	 * @param {HTMLElement} element
	 */
	var Animit = function Animit(element) {
	  if (!(this instanceof Animit)) {
	    return new Animit(element);
	  }
	
	  if (element instanceof HTMLElement) {
	    this.elements = [element];
	  } else if (Object.prototype.toString.call(element) === '[object Array]') {
	    this.elements = element;
	  } else {
	    throw new Error('First argument must be an array or an instance of HTMLElement.');
	  }
	
	  this.transitionQueue = [];
	  this.lastStyleAttributeDict = [];
	};
	
	Animit.prototype = {
	
	  /**
	   * @property {Array}
	   */
	  transitionQueue: undefined,
	
	  /**
	   * @property {Array}
	   */
	  elements: undefined,
	
	  /**
	   * Start animation sequence with passed animations.
	   *
	   * @param {Function} callback
	   */
	  play: function play(callback) {
	    if (typeof callback === 'function') {
	      this.transitionQueue.push(function (done) {
	        callback();
	        done();
	      });
	    }
	
	    this.startAnimation();
	
	    return this;
	  },
	
	  /**
	   * Queue transition animations or other function.
	   *
	   * e.g. animit(elt).queue({color: 'red'})
	   * e.g. animit(elt).queue({color: 'red'}, {duration: 0.4})
	   * e.g. animit(elt).queue({css: {color: 'red'}, duration: 0.2})
	   *
	   * @param {Object|Animit.Transition|Function} transition
	   * @param {Object} [options]
	   */
	  queue: function queue(transition, options) {
	    var queue = this.transitionQueue;
	
	    if (transition && options) {
	      options.css = transition;
	      transition = new Animit.Transition(options);
	    }
	
	    if (!(transition instanceof Function || transition instanceof Animit.Transition)) {
	      if (transition.css) {
	        transition = new Animit.Transition(transition);
	      } else {
	        transition = new Animit.Transition({
	          css: transition
	        });
	      }
	    }
	
	    if (transition instanceof Function) {
	      queue.push(transition);
	    } else if (transition instanceof Animit.Transition) {
	      queue.push(transition.build());
	    } else {
	      throw new Error('Invalid arguments');
	    }
	
	    return this;
	  },
	
	  /**
	   * Queue transition animations.
	   *
	   * @param {Float} seconds
	   */
	  wait: function wait(seconds) {
	    if (seconds > 0) {
	      this.transitionQueue.push(function (done) {
	        setTimeout(done, 1000 * seconds);
	      });
	    }
	
	    return this;
	  },
	
	  saveStyle: function saveStyle() {
	
	    this.transitionQueue.push(function (done) {
	      this.elements.forEach(function (element, index) {
	        var css = this.lastStyleAttributeDict[index] = {};
	
	        for (var i = 0; i < element.style.length; i++) {
	          css[element.style[i]] = element.style[element.style[i]];
	        }
	      }.bind(this));
	      done();
	    }.bind(this));
	
	    return this;
	  },
	
	  /**
	   * Restore element's style.
	   *
	   * @param {Object} [options]
	   * @param {Float} [options.duration]
	   * @param {String} [options.timing]
	   * @param {String} [options.transition]
	   */
	  restoreStyle: function restoreStyle(options) {
	    options = options || {};
	    var self = this;
	
	    if (options.transition && !options.duration) {
	      throw new Error('"options.duration" is required when "options.transition" is enabled.');
	    }
	
	    var transitionName = util$2.transitionPropertyName;
	
	    if (options.transition || options.duration && options.duration > 0) {
	      var transitionValue = options.transition || 'all ' + options.duration + 's ' + (options.timing || 'linear');
	
	      this.transitionQueue.push(function (done) {
	        var elements = this.elements;
	        var timeoutId;
	
	        var clearTransition = function clearTransition() {
	          elements.forEach(function (element) {
	            element.style[transitionName] = '';
	          });
	        };
	
	        // add "transitionend" event handler
	        var removeListeners = util$2.onceOnTransitionEnd(elements[0], function () {
	          clearTimeout(timeoutId);
	          clearTransition();
	          done();
	        });
	
	        // for fail safe.
	        timeoutId = setTimeout(function () {
	          removeListeners();
	          clearTransition();
	          done();
	        }, options.duration * 1000 * TIMEOUT_RATIO);
	
	        // transition and style settings
	        elements.forEach(function (element, index) {
	
	          var css = self.lastStyleAttributeDict[index];
	
	          if (!css) {
	            throw new Error('restoreStyle(): The style is not saved. Invoke saveStyle() before.');
	          }
	
	          self.lastStyleAttributeDict[index] = undefined;
	
	          var name;
	          for (var i = 0, len = element.style.length; i < len; i++) {
	            name = element.style[i];
	            if (css[name] === undefined) {
	              css[name] = '';
	            }
	          }
	
	          element.style[transitionName] = transitionValue;
	
	          Object.keys(css).forEach(function (key) {
	            if (key !== transitionName) {
	              element.style[key] = css[key];
	            }
	          });
	
	          element.style[transitionName] = transitionValue;
	        });
	      });
	    } else {
	      this.transitionQueue.push(function (done) {
	        reset();
	        done();
	      });
	    }
	
	    return this;
	
	    function reset() {
	      // Clear transition animation settings.
	      self.elements.forEach(function (element, index) {
	        element.style[transitionName] = 'none';
	
	        var css = self.lastStyleAttributeDict[index];
	
	        if (!css) {
	          throw new Error('restoreStyle(): The style is not saved. Invoke saveStyle() before.');
	        }
	
	        self.lastStyleAttributeDict[index] = undefined;
	
	        for (var i = 0, name = ''; i < element.style.length; i++) {
	          name = element.style[i];
	          if (typeof css[element.style[i]] === 'undefined') {
	            css[element.style[i]] = '';
	          }
	        }
	
	        Object.keys(css).forEach(function (key) {
	          element.style[key] = css[key];
	        });
	      });
	    }
	  },
	
	  /**
	   * Start animation sequence.
	   */
	  startAnimation: function startAnimation() {
	    this._dequeueTransition();
	
	    return this;
	  },
	
	  _dequeueTransition: function _dequeueTransition() {
	    var transition = this.transitionQueue.shift();
	    if (this._currentTransition) {
	      throw new Error('Current transition exists.');
	    }
	    this._currentTransition = transition;
	    var self = this;
	    var called = false;
	
	    var done = function done() {
	      if (!called) {
	        called = true;
	        self._currentTransition = undefined;
	        self._dequeueTransition();
	      } else {
	        throw new Error('Invalid state: This callback is called twice.');
	      }
	    };
	
	    if (transition) {
	      transition.call(this, done);
	    }
	  }
	
	};
	
	/**
	 * @param {Animit} arguments
	 */
	Animit.runAll = function () /* arguments... */{
	  for (var i = 0; i < arguments.length; i++) {
	    arguments[i].play();
	  }
	};
	
	/**
	 * @param {Object} options
	 * @param {Float} [options.duration]
	 * @param {String} [options.property]
	 * @param {String} [options.timing]
	 */
	Animit.Transition = function (options) {
	  this.options = options || {};
	  this.options.duration = this.options.duration || 0;
	  this.options.timing = this.options.timing || 'linear';
	  this.options.css = this.options.css || {};
	  this.options.property = this.options.property || 'all';
	};
	
	Animit.Transition.prototype = {
	
	  /**
	   * @param {HTMLElement} element
	   * @return {Function}
	   */
	  build: function build() {
	
	    if (Object.keys(this.options.css).length === 0) {
	      throw new Error('options.css is required.');
	    }
	
	    var css = createActualCssProps(this.options.css);
	
	    if (this.options.duration > 0) {
	      var transitionValue = util$2.buildTransitionValue(this.options);
	      var self = this;
	
	      return function (callback) {
	        var elements = this.elements;
	        var timeout = self.options.duration * 1000 * TIMEOUT_RATIO;
	        var timeoutId;
	
	        var removeListeners = util$2.onceOnTransitionEnd(elements[0], function () {
	          clearTimeout(timeoutId);
	          callback();
	        });
	
	        timeoutId = setTimeout(function () {
	          removeListeners();
	          callback();
	        }, timeout);
	
	        elements.forEach(function (element) {
	          element.style[util$2.transitionPropertyName] = transitionValue;
	
	          Object.keys(css).forEach(function (name) {
	            element.style[name] = css[name];
	          });
	        });
	      };
	    }
	
	    if (this.options.duration <= 0) {
	      return function (callback) {
	        var elements = this.elements;
	
	        elements.forEach(function (element) {
	          element.style[util$2.transitionPropertyName] = '';
	
	          Object.keys(css).forEach(function (name) {
	            element.style[name] = css[name];
	          });
	        });
	
	        if (elements.length > 0) {
	          util$2.forceLayoutAtOnce(elements, function () {
	            util$2.batchAnimationFrame(callback);
	          });
	        } else {
	          util$2.batchAnimationFrame(callback);
	        }
	      };
	    }
	
	    function createActualCssProps(css) {
	      var result = {};
	
	      Object.keys(css).forEach(function (name) {
	        var value = css[name];
	
	        if (util$2.hasCssProperty(name)) {
	          result[name] = value;
	          return;
	        }
	
	        var prefixed = util$2.vendorPrefix + util$2.capitalize(name);
	        if (util$2.hasCssProperty(prefixed)) {
	          result[prefixed] = value;
	        } else {
	          result[prefixed] = value;
	          result[name] = value;
	        }
	      });
	
	      return result;
	    }
	  }
	};
	
	/*
	 * Gesture detector library that forked from github.com/EightMedia/hammer.js.
	 */
	
	var Event$1;
	var Utils;
	var Detection;
	var PointerEvent;
	
	/**
	 * @object ons.GestureDetector
	 * @category gesture
	 * @description
	 *   [en]Utility class for gesture detection.[/en]
	 *   [ja]ジェスチャを検知するためのユーティリティクラスです。[/ja]
	 */
	
	/**
	 * @method constructor
	 * @signature constructor(element[, options])
	 * @description
	 *  [en]Create a new GestureDetector instance.[/en]
	 *  [ja]GestureDetectorのインスタンスを生成します。[/ja]
	 * @param {Element} element
	 *   [en]Name of the event.[/en]
	 *   [ja]ジェスチャを検知するDOM要素を指定します。[/ja]
	 * @param {Object} [options]
	 *   [en]Options object.[/en]
	 *   [ja]オプションを指定します。[/ja]
	 * @return {ons.GestureDetector.Instance}
	 */
	var GestureDetector = function GestureDetector(element, options) {
	  return new GestureDetector.Instance(element, options || {});
	};
	
	/**
	 * default settings.
	 * more settings are defined per gesture at `/gestures`. Each gesture can be disabled/enabled
	 * by setting it's name (like `swipe`) to false.
	 * You can set the defaults for all instances by changing this object before creating an instance.
	 * @example
	 * ````
	 *  GestureDetector.defaults.drag = false;
	 *  GestureDetector.defaults.behavior.touchAction = 'pan-y';
	 *  delete GestureDetector.defaults.behavior.userSelect;
	 * ````
	 * @property defaults
	 * @type {Object}
	 */
	GestureDetector.defaults = {
	  behavior: {
	    // userSelect: 'none', // Also disables selection in `input` children
	    touchAction: 'pan-y',
	    touchCallout: 'none',
	    contentZooming: 'none',
	    userDrag: 'none',
	    tapHighlightColor: 'rgba(0,0,0,0)'
	  }
	};
	
	/**
	 * GestureDetector document where the base events are added at
	 * @property DOCUMENT
	 * @type {HTMLElement}
	 * @default window.document
	 */
	GestureDetector.DOCUMENT = document;
	
	/**
	 * detect support for pointer events
	 * @property HAS_POINTEREVENTS
	 * @type {Boolean}
	 */
	GestureDetector.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled;
	
	/**
	 * detect support for touch events
	 * @property HAS_TOUCHEVENTS
	 * @type {Boolean}
	 */
	GestureDetector.HAS_TOUCHEVENTS = 'ontouchstart' in window;
	
	/**
	 * detect mobile browsers
	 * @property IS_MOBILE
	 * @type {Boolean}
	 */
	GestureDetector.IS_MOBILE = /mobile|tablet|ip(ad|hone|od)|android|silk/i.test(navigator.userAgent);
	
	/**
	 * detect if we want to support mouseevents at all
	 * @property NO_MOUSEEVENTS
	 * @type {Boolean}
	 */
	GestureDetector.NO_MOUSEEVENTS = GestureDetector.HAS_TOUCHEVENTS && GestureDetector.IS_MOBILE || GestureDetector.HAS_POINTEREVENTS;
	
	/**
	 * interval in which GestureDetector recalculates current velocity/direction/angle in ms
	 * @property CALCULATE_INTERVAL
	 * @type {Number}
	 * @default 25
	 */
	GestureDetector.CALCULATE_INTERVAL = 25;
	
	/**
	 * eventtypes per touchevent (start, move, end) are filled by `Event.determineEventTypes` on `setup`
	 * the object contains the DOM event names per type (`EVENT_START`, `EVENT_MOVE`, `EVENT_END`)
	 * @property EVENT_TYPES
	 * @private
	 * @writeOnce
	 * @type {Object}
	 */
	var EVENT_TYPES = {};
	
	/**
	 * direction strings, for safe comparisons
	 * @property DIRECTION_DOWN|LEFT|UP|RIGHT
	 * @final
	 * @type {String}
	 * @default 'down' 'left' 'up' 'right'
	 */
	var DIRECTION_DOWN = GestureDetector.DIRECTION_DOWN = 'down';
	var DIRECTION_LEFT = GestureDetector.DIRECTION_LEFT = 'left';
	var DIRECTION_UP = GestureDetector.DIRECTION_UP = 'up';
	var DIRECTION_RIGHT = GestureDetector.DIRECTION_RIGHT = 'right';
	
	/**
	 * pointertype strings, for safe comparisons
	 * @property POINTER_MOUSE|TOUCH|PEN
	 * @final
	 * @type {String}
	 * @default 'mouse' 'touch' 'pen'
	 */
	var POINTER_MOUSE = GestureDetector.POINTER_MOUSE = 'mouse';
	var POINTER_TOUCH = GestureDetector.POINTER_TOUCH = 'touch';
	var POINTER_PEN = GestureDetector.POINTER_PEN = 'pen';
	
	/**
	 * eventtypes
	 * @property EVENT_START|MOVE|END|RELEASE|TOUCH
	 * @final
	 * @type {String}
	 * @default 'start' 'change' 'move' 'end' 'release' 'touch'
	 */
	var EVENT_START = GestureDetector.EVENT_START = 'start';
	var EVENT_MOVE = GestureDetector.EVENT_MOVE = 'move';
	var EVENT_END = GestureDetector.EVENT_END = 'end';
	var EVENT_RELEASE = GestureDetector.EVENT_RELEASE = 'release';
	var EVENT_TOUCH = GestureDetector.EVENT_TOUCH = 'touch';
	
	/**
	 * if the window events are set...
	 * @property READY
	 * @writeOnce
	 * @type {Boolean}
	 * @default false
	 */
	GestureDetector.READY = false;
	
	/**
	 * plugins namespace
	 * @property plugins
	 * @type {Object}
	 */
	GestureDetector.plugins = GestureDetector.plugins || {};
	
	/**
	 * gestures namespace
	 * see `/gestures` for the definitions
	 * @property gestures
	 * @type {Object}
	 */
	GestureDetector.gestures = GestureDetector.gestures || {};
	
	/**
	 * setup events to detect gestures on the document
	 * this function is called when creating an new instance
	 * @private
	 */
	function setup() {
	  if (GestureDetector.READY) {
	    return;
	  }
	
	  // find what eventtypes we add listeners to
	  Event$1.determineEventTypes();
	
	  // Register all gestures inside GestureDetector.gestures
	  Utils.each(GestureDetector.gestures, function (gesture) {
	    Detection.register(gesture);
	  });
	
	  // Add touch events on the document
	  Event$1.onTouch(GestureDetector.DOCUMENT, EVENT_MOVE, Detection.detect);
	  Event$1.onTouch(GestureDetector.DOCUMENT, EVENT_END, Detection.detect);
	
	  // GestureDetector is ready...!
	  GestureDetector.READY = true;
	}
	
	/**
	 * @module GestureDetector
	 *
	 * @class Utils
	 * @static
	 */
	Utils = GestureDetector.utils = {
	  /**
	   * extend method, could also be used for cloning when `dest` is an empty object.
	   * changes the dest object
	   * @param {Object} dest
	   * @param {Object} src
	   * @param {Boolean} [merge=false]  do a merge
	   * @return {Object} dest
	   */
	  extend: function extend(dest, src, merge) {
	    for (var key in src) {
	      if (src.hasOwnProperty(key) && (dest[key] === undefined || !merge)) {
	        dest[key] = src[key];
	      }
	    }
	    return dest;
	  },
	
	  /**
	   * simple addEventListener wrapper
	   * @param {HTMLElement} element
	   * @param {String} type
	   * @param {Function} handler
	   */
	  on: function on(element, type, handler) {
	    element.addEventListener(type, handler, false);
	  },
	
	  /**
	   * simple removeEventListener wrapper
	   * @param {HTMLElement} element
	   * @param {String} type
	   * @param {Function} handler
	   */
	  off: function off(element, type, handler) {
	    element.removeEventListener(type, handler, false);
	  },
	
	  /**
	   * forEach over arrays and objects
	   * @param {Object|Array} obj
	   * @param {Function} iterator
	   * @param {any} iterator.item
	   * @param {Number} iterator.index
	   * @param {Object|Array} iterator.obj the source object
	   * @param {Object} context value to use as `this` in the iterator
	   */
	  each: function each(obj, iterator, context) {
	    var i, len;
	
	    // native forEach on arrays
	    if ('forEach' in obj) {
	      obj.forEach(iterator, context);
	      // arrays
	    } else if (obj.length !== undefined) {
	      for (i = 0, len = obj.length; i < len; i++) {
	        if (iterator.call(context, obj[i], i, obj) === false) {
	          return;
	        }
	      }
	      // objects
	    } else {
	      for (i in obj) {
	        if (obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj) === false) {
	          return;
	        }
	      }
	    }
	  },
	
	  /**
	   * find if a string contains the string using indexOf
	   * @param {String} src
	   * @param {String} find
	   * @return {Boolean} found
	   */
	  inStr: function inStr(src, find) {
	    return src.indexOf(find) > -1;
	  },
	
	  /**
	   * find if a array contains the object using indexOf or a simple polyfill
	   * @param {String} src
	   * @param {String} find
	   * @return {Boolean|Number} false when not found, or the index
	   */
	  inArray: function inArray(src, find) {
	    if (src.indexOf) {
	      var index = src.indexOf(find);
	      return index === -1 ? false : index;
	    } else {
	      for (var i = 0, len = src.length; i < len; i++) {
	        if (src[i] === find) {
	          return i;
	        }
	      }
	      return false;
	    }
	  },
	
	  /**
	   * convert an array-like object (`arguments`, `touchlist`) to an array
	   * @param {Object} obj
	   * @return {Array}
	   */
	  toArray: function toArray(obj) {
	    return Array.prototype.slice.call(obj, 0);
	  },
	
	  /**
	   * find if a node is in the given parent
	   * @param {HTMLElement} node
	   * @param {HTMLElement} parent
	   * @return {Boolean} found
	   */
	  hasParent: function hasParent(node, parent) {
	    while (node) {
	      if (node == parent) {
	        return true;
	      }
	      node = node.parentNode;
	    }
	    return false;
	  },
	
	  /**
	   * get the center of all the touches
	   * @param {Array} touches
	   * @return {Object} center contains `pageX`, `pageY`, `clientX` and `clientY` properties
	   */
	  getCenter: function getCenter(touches) {
	    var pageX = [],
	        pageY = [],
	        clientX = [],
	        clientY = [],
	        min = Math.min,
	        max = Math.max;
	
	    // no need to loop when only one touch
	    if (touches.length === 1) {
	      return {
	        pageX: touches[0].pageX,
	        pageY: touches[0].pageY,
	        clientX: touches[0].clientX,
	        clientY: touches[0].clientY
	      };
	    }
	
	    Utils.each(touches, function (touch) {
	      pageX.push(touch.pageX);
	      pageY.push(touch.pageY);
	      clientX.push(touch.clientX);
	      clientY.push(touch.clientY);
	    });
	
	    return {
	      pageX: (min.apply(Math, pageX) + max.apply(Math, pageX)) / 2,
	      pageY: (min.apply(Math, pageY) + max.apply(Math, pageY)) / 2,
	      clientX: (min.apply(Math, clientX) + max.apply(Math, clientX)) / 2,
	      clientY: (min.apply(Math, clientY) + max.apply(Math, clientY)) / 2
	    };
	  },
	
	  /**
	   * calculate the velocity between two points. unit is in px per ms.
	   * @param {Number} deltaTime
	   * @param {Number} deltaX
	   * @param {Number} deltaY
	   * @return {Object} velocity `x` and `y`
	   */
	  getVelocity: function getVelocity(deltaTime, deltaX, deltaY) {
	    return {
	      x: Math.abs(deltaX / deltaTime) || 0,
	      y: Math.abs(deltaY / deltaTime) || 0
	    };
	  },
	
	  /**
	   * calculate the angle between two coordinates
	   * @param {Touch} touch1
	   * @param {Touch} touch2
	   * @return {Number} angle
	   */
	  getAngle: function getAngle(touch1, touch2) {
	    var x = touch2.clientX - touch1.clientX,
	        y = touch2.clientY - touch1.clientY;
	
	    return Math.atan2(y, x) * 180 / Math.PI;
	  },
	
	  /**
	   * do a small comparison to get the direction between two touches.
	   * @param {Touch} touch1
	   * @param {Touch} touch2
	   * @return {String} direction matches `DIRECTION_LEFT|RIGHT|UP|DOWN`
	   */
	  getDirection: function getDirection(touch1, touch2) {
	    var x = Math.abs(touch1.clientX - touch2.clientX),
	        y = Math.abs(touch1.clientY - touch2.clientY);
	
	    if (x >= y) {
	      return touch1.clientX - touch2.clientX > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
	    }
	    return touch1.clientY - touch2.clientY > 0 ? DIRECTION_UP : DIRECTION_DOWN;
	  },
	
	  /**
	   * calculate the distance between two touches
	   * @param {Touch}touch1
	   * @param {Touch} touch2
	   * @return {Number} distance
	   */
	  getDistance: function getDistance(touch1, touch2) {
	    var x = touch2.clientX - touch1.clientX,
	        y = touch2.clientY - touch1.clientY;
	
	    return Math.sqrt(x * x + y * y);
	  },
	
	  /**
	   * calculate the scale factor between two touchLists
	   * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
	   * @param {Array} start array of touches
	   * @param {Array} end array of touches
	   * @return {Number} scale
	   */
	  getScale: function getScale(start, end) {
	    // need two fingers...
	    if (start.length >= 2 && end.length >= 2) {
	      return this.getDistance(end[0], end[1]) / this.getDistance(start[0], start[1]);
	    }
	    return 1;
	  },
	
	  /**
	   * calculate the rotation degrees between two touchLists
	   * @param {Array} start array of touches
	   * @param {Array} end array of touches
	   * @return {Number} rotation
	   */
	  getRotation: function getRotation(start, end) {
	    // need two fingers
	    if (start.length >= 2 && end.length >= 2) {
	      return this.getAngle(end[1], end[0]) - this.getAngle(start[1], start[0]);
	    }
	    return 0;
	  },
	
	  /**
	   * find out if the direction is vertical   *
	   * @param {String} direction matches `DIRECTION_UP|DOWN`
	   * @return {Boolean} is_vertical
	   */
	  isVertical: function isVertical(direction) {
	    return direction == DIRECTION_UP || direction == DIRECTION_DOWN;
	  },
	
	  /**
	   * set css properties with their prefixes
	   * @param {HTMLElement} element
	   * @param {String} prop
	   * @param {String} value
	   * @param {Boolean} [toggle=true]
	   * @return {Boolean}
	   */
	  setPrefixedCss: function setPrefixedCss(element, prop, value, toggle) {
	    var prefixes = ['', 'Webkit', 'Moz', 'O', 'ms'];
	    prop = Utils.toCamelCase(prop);
	
	    for (var i = 0; i < prefixes.length; i++) {
	      var p = prop;
	      // prefixes
	      if (prefixes[i]) {
	        p = prefixes[i] + p.slice(0, 1).toUpperCase() + p.slice(1);
	      }
	
	      // test the style
	      if (p in element.style) {
	        element.style[p] = (toggle === null || toggle) && value || '';
	        break;
	      }
	    }
	  },
	
	  /**
	   * toggle browser default behavior by setting css properties.
	   * `userSelect='none'` also sets `element.onselectstart` to false
	   * `userDrag='none'` also sets `element.ondragstart` to false
	   *
	   * @param {HtmlElement} element
	   * @param {Object} props
	   * @param {Boolean} [toggle=true]
	   */
	  toggleBehavior: function toggleBehavior(element, props, toggle) {
	    if (!props || !element || !element.style) {
	      return;
	    }
	
	    // set the css properties
	    Utils.each(props, function (value, prop) {
	      Utils.setPrefixedCss(element, prop, value, toggle);
	    });
	
	    var falseFn = toggle && function () {
	      return false;
	    };
	
	    // also the disable onselectstart
	    if (props.userSelect == 'none') {
	      element.onselectstart = falseFn;
	    }
	    // and disable ondragstart
	    if (props.userDrag == 'none') {
	      element.ondragstart = falseFn;
	    }
	  },
	
	  /**
	   * convert a string with underscores to camelCase
	   * so prevent_default becomes preventDefault
	   * @param {String} str
	   * @return {String} camelCaseStr
	   */
	  toCamelCase: function toCamelCase(str) {
	    return str.replace(/[_-]([a-z])/g, function (s) {
	      return s[1].toUpperCase();
	    });
	  }
	};
	
	/**
	 * @module GestureDetector
	 */
	/**
	 * @class Event
	 * @static
	 */
	Event$1 = GestureDetector.event = {
	  /**
	   * when touch events have been fired, this is true
	   * this is used to stop mouse events
	   * @property prevent_mouseevents
	   * @private
	   * @type {Boolean}
	   */
	  preventMouseEvents: false,
	
	  /**
	   * if EVENT_START has been fired
	   * @property started
	   * @private
	   * @type {Boolean}
	   */
	  started: false,
	
	  /**
	   * when the mouse is hold down, this is true
	   * @property should_detect
	   * @private
	   * @type {Boolean}
	   */
	  shouldDetect: false,
	
	  /**
	   * simple event binder with a hook and support for multiple types
	   * @param {HTMLElement} element
	   * @param {String} type
	   * @param {Function} handler
	   * @param {Function} [hook]
	   * @param {Object} hook.type
	   */
	  on: function on(element, type, handler, hook) {
	    var types = type.split(' ');
	    Utils.each(types, function (type) {
	      Utils.on(element, type, handler);
	      hook && hook(type);
	    });
	  },
	
	  /**
	   * simple event unbinder with a hook and support for multiple types
	   * @param {HTMLElement} element
	   * @param {String} type
	   * @param {Function} handler
	   * @param {Function} [hook]
	   * @param {Object} hook.type
	   */
	  off: function off(element, type, handler, hook) {
	    var types = type.split(' ');
	    Utils.each(types, function (type) {
	      Utils.off(element, type, handler);
	      hook && hook(type);
	    });
	  },
	
	  /**
	   * the core touch event handler.
	   * this finds out if we should to detect gestures
	   * @param {HTMLElement} element
	   * @param {String} eventType matches `EVENT_START|MOVE|END`
	   * @param {Function} handler
	   * @return onTouchHandler {Function} the core event handler
	   */
	  onTouch: function onTouch(element, eventType, handler) {
	    var self = this;
	
	    var onTouchHandler = function onTouchHandler(ev) {
	      var srcType = ev.type.toLowerCase(),
	          isPointer = GestureDetector.HAS_POINTEREVENTS,
	          isMouse = Utils.inStr(srcType, 'mouse'),
	          triggerType;
	
	      // if we are in a mouseevent, but there has been a touchevent triggered in this session
	      // we want to do nothing. simply break out of the event.
	      if (isMouse && self.preventMouseEvents) {
	        return;
	
	        // mousebutton must be down
	      } else if (isMouse && eventType == EVENT_START && ev.button === 0) {
	        self.preventMouseEvents = false;
	        self.shouldDetect = true;
	      } else if (isPointer && eventType == EVENT_START) {
	        self.shouldDetect = ev.buttons === 1 || PointerEvent.matchType(POINTER_TOUCH, ev);
	        // just a valid start event, but no mouse
	      } else if (!isMouse && eventType == EVENT_START) {
	        self.preventMouseEvents = true;
	        self.shouldDetect = true;
	      }
	
	      // update the pointer event before entering the detection
	      if (isPointer && eventType != EVENT_END) {
	        PointerEvent.updatePointer(eventType, ev);
	      }
	
	      // we are in a touch/down state, so allowed detection of gestures
	      if (self.shouldDetect) {
	        triggerType = self.doDetect.call(self, ev, eventType, element, handler);
	      }
	
	      // ...and we are done with the detection
	      // so reset everything to start each detection totally fresh
	      if (triggerType == EVENT_END) {
	        self.preventMouseEvents = false;
	        self.shouldDetect = false;
	        PointerEvent.reset();
	        // update the pointerevent object after the detection
	      }
	
	      if (isPointer && eventType == EVENT_END) {
	        PointerEvent.updatePointer(eventType, ev);
	      }
	    };
	
	    this.on(element, EVENT_TYPES[eventType], onTouchHandler);
	    return onTouchHandler;
	  },
	
	  /**
	   * the core detection method
	   * this finds out what GestureDetector-touch-events to trigger
	   * @param {Object} ev
	   * @param {String} eventType matches `EVENT_START|MOVE|END`
	   * @param {HTMLElement} element
	   * @param {Function} handler
	   * @return {String} triggerType matches `EVENT_START|MOVE|END`
	   */
	  doDetect: function doDetect(ev, eventType, element, handler) {
	    var touchList = this.getTouchList(ev, eventType);
	    var touchListLength = touchList.length;
	    var triggerType = eventType;
	    var triggerChange = touchList.trigger; // used by fakeMultitouch plugin
	    var changedLength = touchListLength;
	
	    // at each touchstart-like event we want also want to trigger a TOUCH event...
	    if (eventType == EVENT_START) {
	      triggerChange = EVENT_TOUCH;
	      // ...the same for a touchend-like event
	    } else if (eventType == EVENT_END) {
	      triggerChange = EVENT_RELEASE;
	
	      // keep track of how many touches have been removed
	      changedLength = touchList.length - (ev.changedTouches ? ev.changedTouches.length : 1);
	    }
	
	    // after there are still touches on the screen,
	    // we just want to trigger a MOVE event. so change the START or END to a MOVE
	    // but only after detection has been started, the first time we actually want a START
	    if (changedLength > 0 && this.started) {
	      triggerType = EVENT_MOVE;
	    }
	
	    // detection has been started, we keep track of this, see above
	    this.started = true;
	
	    // generate some event data, some basic information
	    var evData = this.collectEventData(element, triggerType, touchList, ev);
	
	    // trigger the triggerType event before the change (TOUCH, RELEASE) events
	    // but the END event should be at last
	    if (eventType != EVENT_END) {
	      handler.call(Detection, evData);
	    }
	
	    // trigger a change (TOUCH, RELEASE) event, this means the length of the touches changed
	    if (triggerChange) {
	      evData.changedLength = changedLength;
	      evData.eventType = triggerChange;
	
	      handler.call(Detection, evData);
	
	      evData.eventType = triggerType;
	      delete evData.changedLength;
	    }
	
	    // trigger the END event
	    if (triggerType == EVENT_END) {
	      handler.call(Detection, evData);
	
	      // ...and we are done with the detection
	      // so reset everything to start each detection totally fresh
	      this.started = false;
	    }
	
	    return triggerType;
	  },
	
	  /**
	   * we have different events for each device/browser
	   * determine what we need and set them in the EVENT_TYPES constant
	   * the `onTouch` method is bind to these properties.
	   * @return {Object} events
	   */
	  determineEventTypes: function determineEventTypes() {
	    var types;
	    if (GestureDetector.HAS_POINTEREVENTS) {
	      if (window.PointerEvent) {
	        types = ['pointerdown', 'pointermove', 'pointerup pointercancel lostpointercapture'];
	      } else {
	        types = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp MSPointerCancel MSLostPointerCapture'];
	      }
	    } else if (GestureDetector.NO_MOUSEEVENTS) {
	      types = ['touchstart', 'touchmove', 'touchend touchcancel'];
	    } else {
	      types = ['touchstart mousedown', 'touchmove mousemove', 'touchend touchcancel mouseup'];
	    }
	
	    EVENT_TYPES[EVENT_START] = types[0];
	    EVENT_TYPES[EVENT_MOVE] = types[1];
	    EVENT_TYPES[EVENT_END] = types[2];
	    return EVENT_TYPES;
	  },
	
	  /**
	   * create touchList depending on the event
	   * @param {Object} ev
	   * @param {String} eventType
	   * @return {Array} touches
	   */
	  getTouchList: function getTouchList(ev, eventType) {
	    // get the fake pointerEvent touchlist
	    if (GestureDetector.HAS_POINTEREVENTS) {
	      return PointerEvent.getTouchList();
	    }
	
	    // get the touchlist
	    if (ev.touches) {
	      if (eventType == EVENT_MOVE) {
	        return ev.touches;
	      }
	
	      var identifiers = [];
	      var concat = [].concat(Utils.toArray(ev.touches), Utils.toArray(ev.changedTouches));
	      var touchList = [];
	
	      Utils.each(concat, function (touch) {
	        if (Utils.inArray(identifiers, touch.identifier) === false) {
	          touchList.push(touch);
	        }
	        identifiers.push(touch.identifier);
	      });
	
	      return touchList;
	    }
	
	    // make fake touchList from mouse position
	    ev.identifier = 1;
	    return [ev];
	  },
	
	  /**
	   * collect basic event data
	   * @param {HTMLElement} element
	   * @param {String} eventType matches `EVENT_START|MOVE|END`
	   * @param {Array} touches
	   * @param {Object} ev
	   * @return {Object} ev
	   */
	  collectEventData: function collectEventData(element, eventType, touches, ev) {
	    // find out pointerType
	    var pointerType = POINTER_TOUCH;
	    if (Utils.inStr(ev.type, 'mouse') || PointerEvent.matchType(POINTER_MOUSE, ev)) {
	      pointerType = POINTER_MOUSE;
	    } else if (PointerEvent.matchType(POINTER_PEN, ev)) {
	      pointerType = POINTER_PEN;
	    }
	
	    return {
	      center: Utils.getCenter(touches),
	      timeStamp: Date.now(),
	      target: ev.target,
	      touches: touches,
	      eventType: eventType,
	      pointerType: pointerType,
	      srcEvent: ev,
	
	      /**
	       * prevent the browser default actions
	       * mostly used to disable scrolling of the browser
	       */
	      preventDefault: function preventDefault() {
	        var srcEvent = this.srcEvent;
	        srcEvent.preventManipulation && srcEvent.preventManipulation();
	        srcEvent.preventDefault && srcEvent.preventDefault();
	      },
	
	      /**
	       * stop bubbling the event up to its parents
	       */
	      stopPropagation: function stopPropagation() {
	        this.srcEvent.stopPropagation();
	      },
	
	      /**
	       * immediately stop gesture detection
	       * might be useful after a swipe was detected
	       * @return {*}
	       */
	      stopDetect: function stopDetect() {
	        return Detection.stopDetect();
	      }
	    };
	  }
	};
	
	/**
	 * @module GestureDetector
	 *
	 * @class PointerEvent
	 * @static
	 */
	PointerEvent = GestureDetector.PointerEvent = {
	  /**
	   * holds all pointers, by `identifier`
	   * @property pointers
	   * @type {Object}
	   */
	  pointers: {},
	
	  /**
	   * get the pointers as an array
	   * @return {Array} touchlist
	   */
	  getTouchList: function getTouchList() {
	    var touchlist = [];
	    // we can use forEach since pointerEvents only is in IE10
	    Utils.each(this.pointers, function (pointer) {
	      touchlist.push(pointer);
	    });
	    return touchlist;
	  },
	
	  /**
	   * update the position of a pointer
	   * @param {String} eventType matches `EVENT_START|MOVE|END`
	   * @param {Object} pointerEvent
	   */
	  updatePointer: function updatePointer(eventType, pointerEvent) {
	    if (eventType == EVENT_END || eventType != EVENT_END && pointerEvent.buttons !== 1) {
	      delete this.pointers[pointerEvent.pointerId];
	    } else {
	      pointerEvent.identifier = pointerEvent.pointerId;
	      this.pointers[pointerEvent.pointerId] = pointerEvent;
	    }
	  },
	
	  /**
	   * check if ev matches pointertype
	   * @param {String} pointerType matches `POINTER_MOUSE|TOUCH|PEN`
	   * @param {PointerEvent} ev
	   */
	  matchType: function matchType(pointerType, ev) {
	    if (!ev.pointerType) {
	      return false;
	    }
	
	    var pt = ev.pointerType,
	        types = {};
	
	    types[POINTER_MOUSE] = pt === (ev.MSPOINTER_TYPE_MOUSE || POINTER_MOUSE);
	    types[POINTER_TOUCH] = pt === (ev.MSPOINTER_TYPE_TOUCH || POINTER_TOUCH);
	    types[POINTER_PEN] = pt === (ev.MSPOINTER_TYPE_PEN || POINTER_PEN);
	    return types[pointerType];
	  },
	
	  /**
	   * reset the stored pointers
	   */
	  reset: function resetList() {
	    this.pointers = {};
	  }
	};
	
	/**
	 * @module GestureDetector
	 *
	 * @class Detection
	 * @static
	 */
	Detection = GestureDetector.detection = {
	  // contains all registered GestureDetector.gestures in the correct order
	  gestures: [],
	
	  // data of the current GestureDetector.gesture detection session
	  current: null,
	
	  // the previous GestureDetector.gesture session data
	  // is a full clone of the previous gesture.current object
	  previous: null,
	
	  // when this becomes true, no gestures are fired
	  stopped: false,
	
	  /**
	   * start GestureDetector.gesture detection
	   * @param {GestureDetector.Instance} inst
	   * @param {Object} eventData
	   */
	  startDetect: function startDetect(inst, eventData) {
	    // already busy with a GestureDetector.gesture detection on an element
	    if (this.current) {
	      return;
	    }
	
	    this.stopped = false;
	
	    // holds current session
	    this.current = {
	      inst: inst, // reference to GestureDetectorInstance we're working for
	      startEvent: Utils.extend({}, eventData), // start eventData for distances, timing etc
	      lastEvent: false, // last eventData
	      lastCalcEvent: false, // last eventData for calculations.
	      futureCalcEvent: false, // last eventData for calculations.
	      lastCalcData: {}, // last lastCalcData
	      name: '' // current gesture we're in/detected, can be 'tap', 'hold' etc
	    };
	
	    this.detect(eventData);
	  },
	
	  /**
	   * GestureDetector.gesture detection
	   * @param {Object} eventData
	   * @return {any}
	   */
	  detect: function detect(eventData) {
	    if (!this.current || this.stopped) {
	      return;
	    }
	
	    // extend event data with calculations about scale, distance etc
	    eventData = this.extendEventData(eventData);
	
	    // GestureDetector instance and instance options
	    var inst = this.current.inst,
	        instOptions = inst.options;
	
	    // call GestureDetector.gesture handlers
	    Utils.each(this.gestures, function triggerGesture(gesture) {
	      // only when the instance options have enabled this gesture
	      if (!this.stopped && inst.enabled && instOptions[gesture.name]) {
	        gesture.handler.call(gesture, eventData, inst);
	      }
	    }, this);
	
	    // store as previous event event
	    if (this.current) {
	      this.current.lastEvent = eventData;
	    }
	
	    if (eventData.eventType == EVENT_END) {
	      this.stopDetect();
	    }
	
	    return eventData; // eslint-disable-line consistent-return
	  },
	
	  /**
	   * clear the GestureDetector.gesture vars
	   * this is called on endDetect, but can also be used when a final GestureDetector.gesture has been detected
	   * to stop other GestureDetector.gestures from being fired
	   */
	  stopDetect: function stopDetect() {
	    // clone current data to the store as the previous gesture
	    // used for the double tap gesture, since this is an other gesture detect session
	    this.previous = Utils.extend({}, this.current);
	
	    // reset the current
	    this.current = null;
	    this.stopped = true;
	  },
	
	  /**
	   * calculate velocity, angle and direction
	   * @param {Object} ev
	   * @param {Object} center
	   * @param {Number} deltaTime
	   * @param {Number} deltaX
	   * @param {Number} deltaY
	   */
	  getCalculatedData: function getCalculatedData(ev, center, deltaTime, deltaX, deltaY) {
	    var cur = this.current,
	        recalc = false,
	        calcEv = cur.lastCalcEvent,
	        calcData = cur.lastCalcData;
	
	    if (calcEv && ev.timeStamp - calcEv.timeStamp > GestureDetector.CALCULATE_INTERVAL) {
	      center = calcEv.center;
	      deltaTime = ev.timeStamp - calcEv.timeStamp;
	      deltaX = ev.center.clientX - calcEv.center.clientX;
	      deltaY = ev.center.clientY - calcEv.center.clientY;
	      recalc = true;
	    }
	
	    if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {
	      cur.futureCalcEvent = ev;
	    }
	
	    if (!cur.lastCalcEvent || recalc) {
	      calcData.velocity = Utils.getVelocity(deltaTime, deltaX, deltaY);
	      calcData.angle = Utils.getAngle(center, ev.center);
	      calcData.direction = Utils.getDirection(center, ev.center);
	
	      cur.lastCalcEvent = cur.futureCalcEvent || ev;
	      cur.futureCalcEvent = ev;
	    }
	
	    ev.velocityX = calcData.velocity.x;
	    ev.velocityY = calcData.velocity.y;
	    ev.interimAngle = calcData.angle;
	    ev.interimDirection = calcData.direction;
	  },
	
	  /**
	   * extend eventData for GestureDetector.gestures
	   * @param {Object} ev
	   * @return {Object} ev
	   */
	  extendEventData: function extendEventData(ev) {
	    var cur = this.current,
	        startEv = cur.startEvent,
	        lastEv = cur.lastEvent || startEv;
	
	    // update the start touchlist to calculate the scale/rotation
	    if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {
	      startEv.touches = [];
	      Utils.each(ev.touches, function (touch) {
	        startEv.touches.push({
	          clientX: touch.clientX,
	          clientY: touch.clientY
	        });
	      });
	    }
	
	    var deltaTime = ev.timeStamp - startEv.timeStamp,
	        deltaX = ev.center.clientX - startEv.center.clientX,
	        deltaY = ev.center.clientY - startEv.center.clientY;
	
	    this.getCalculatedData(ev, lastEv.center, deltaTime, deltaX, deltaY);
	
	    Utils.extend(ev, {
	      startEvent: startEv,
	
	      deltaTime: deltaTime,
	      deltaX: deltaX,
	      deltaY: deltaY,
	
	      distance: Utils.getDistance(startEv.center, ev.center),
	      angle: Utils.getAngle(startEv.center, ev.center),
	      direction: Utils.getDirection(startEv.center, ev.center),
	      scale: Utils.getScale(startEv.touches, ev.touches),
	      rotation: Utils.getRotation(startEv.touches, ev.touches)
	    });
	
	    return ev;
	  },
	
	  /**
	   * register new gesture
	   * @param {Object} gesture object, see `gestures/` for documentation
	   * @return {Array} gestures
	   */
	  register: function register(gesture) {
	    // add an enable gesture options if there is no given
	    var options = gesture.defaults || {};
	    if (options[gesture.name] === undefined) {
	      options[gesture.name] = true;
	    }
	
	    // extend GestureDetector default options with the GestureDetector.gesture options
	    Utils.extend(GestureDetector.defaults, options, true);
	
	    // set its index
	    gesture.index = gesture.index || 1000;
	
	    // add GestureDetector.gesture to the list
	    this.gestures.push(gesture);
	
	    // sort the list by index
	    this.gestures.sort(function (a, b) {
	      if (a.index < b.index) {
	        return -1;
	      }
	      if (a.index > b.index) {
	        return 1;
	      }
	      return 0;
	    });
	
	    return this.gestures;
	  }
	};
	
	/**
	 * @module GestureDetector
	 */
	
	/**
	 * create new GestureDetector instance
	 * all methods should return the instance itself, so it is chainable.
	 *
	 * @class Instance
	 * @constructor
	 * @param {HTMLElement} element
	 * @param {Object} [options={}] options are merged with `GestureDetector.defaults`
	 * @return {GestureDetector.Instance}
	 */
	GestureDetector.Instance = function (element, options) {
	  var self = this;
	
	  // setup GestureDetectorJS window events and register all gestures
	  // this also sets up the default options
	  setup();
	
	  /**
	   * @property element
	   * @type {HTMLElement}
	   */
	  this.element = element;
	
	  /**
	   * @property enabled
	   * @type {Boolean}
	   * @protected
	   */
	  this.enabled = true;
	
	  /**
	   * options, merged with the defaults
	   * options with an _ are converted to camelCase
	   * @property options
	   * @type {Object}
	   */
	  Utils.each(options, function (value, name) {
	    delete options[name];
	    options[Utils.toCamelCase(name)] = value;
	  });
	
	  this.options = Utils.extend(Utils.extend({}, GestureDetector.defaults), options || {});
	
	  // add some css to the element to prevent the browser from doing its native behavior
	  if (this.options.behavior) {
	    Utils.toggleBehavior(this.element, this.options.behavior, true);
	  }
	
	  /**
	   * event start handler on the element to start the detection
	   * @property eventStartHandler
	   * @type {Object}
	   */
	  this.eventStartHandler = Event$1.onTouch(element, EVENT_START, function (ev) {
	    if (self.enabled && ev.eventType == EVENT_START) {
	      Detection.startDetect(self, ev);
	    } else if (ev.eventType == EVENT_TOUCH) {
	      Detection.detect(ev);
	    }
	  });
	
	  /**
	   * keep a list of user event handlers which needs to be removed when calling 'dispose'
	   * @property eventHandlers
	   * @type {Array}
	   */
	  this.eventHandlers = [];
	};
	
	GestureDetector.Instance.prototype = {
	  /**
	   * @method on
	   * @signature on(gestures, handler)
	   * @description
	   *  [en]Adds an event handler for a gesture. Available gestures are: drag, dragleft, dragright, dragup, dragdown, hold, release, swipe, swipeleft, swiperight, swipeup, swipedown, tap, doubletap, touch, transform, pinch, pinchin, pinchout and rotate. [/en]
	   *  [ja]ジェスチャに対するイベントハンドラを追加します。指定できるジェスチャ名は、drag dragleft dragright dragup dragdown hold release swipe swipeleft swiperight swipeup swipedown tap doubletap touch transform pinch pinchin pinchout rotate です。[/ja]
	   * @param {String} gestures
	   *   [en]A space separated list of gestures.[/en]
	   *   [ja]検知するジェスチャ名を指定します。スペースで複数指定することができます。[/ja]
	   * @param {Function} handler
	   *   [en]An event handling function.[/en]
	   *   [ja]イベントハンドラとなる関数オブジェクトを指定します。[/ja]
	   */
	  on: function onEvent(gestures, handler) {
	    var self = this;
	    Event$1.on(self.element, gestures, handler, function (type) {
	      self.eventHandlers.push({ gesture: type, handler: handler });
	    });
	    return self;
	  },
	
	  /**
	   * @method off
	   * @signature off(gestures, handler)
	   * @description
	   *  [en]Remove an event listener.[/en]
	   *  [ja]イベントリスナーを削除します。[/ja]
	   * @param {String} gestures
	   *   [en]A space separated list of gestures.[/en]
	   *   [ja]ジェスチャ名を指定します。スペースで複数指定することができます。[/ja]
	   * @param {Function} handler
	   *   [en]An event handling function.[/en]
	   *   [ja]イベントハンドラとなる関数オブジェクトを指定します。[/ja]
	   */
	  off: function offEvent(gestures, handler) {
	    var self = this;
	
	    Event$1.off(self.element, gestures, handler, function (type) {
	      var index = Utils.inArray({ gesture: type, handler: handler });
	      if (index !== false) {
	        self.eventHandlers.splice(index, 1);
	      }
	    });
	    return self;
	  },
	
	  /**
	   * trigger gesture event
	   * @method trigger
	   * @signature trigger(gesture, eventData)
	   * @param {String} gesture
	   * @param {Object} [eventData]
	   */
	  trigger: function triggerEvent(gesture, eventData) {
	    // optional
	    if (!eventData) {
	      eventData = {};
	    }
	
	    // create DOM event
	    var event = GestureDetector.DOCUMENT.createEvent('Event');
	    event.initEvent(gesture, true, true);
	    event.gesture = eventData;
	
	    // trigger on the target if it is in the instance element,
	    // this is for event delegation tricks
	    var element = this.element;
	    if (Utils.hasParent(eventData.target, element)) {
	      element = eventData.target;
	    }
	
	    element.dispatchEvent(event);
	    return this;
	  },
	
	  /**
	   * @method enable
	   * @signature enable(state)
	   * @description
	   *  [en]Enable or disable gesture detection.[/en]
	   *  [ja]ジェスチャ検知を有効化/無効化します。[/ja]
	   * @param {Boolean} state
	   *   [en]Specify if it should be enabled or not.[/en]
	   *   [ja]有効にするかどうかを指定します。[/ja]
	   */
	  enable: function enable(state) {
	    this.enabled = state;
	    return this;
	  },
	
	  /**
	   * @method dispose
	   * @signature dispose()
	   * @description
	   *  [en]Remove and destroy all event handlers for this instance.[/en]
	   *  [ja]このインスタンスでのジェスチャの検知や、イベントハンドラを全て解除して廃棄します。[/ja]
	   */
	  dispose: function dispose() {
	    var i, eh;
	
	    // undo all changes made by stop_browser_behavior
	    Utils.toggleBehavior(this.element, this.options.behavior, false);
	
	    // unbind all custom event handlers
	    for (i = -1; eh = this.eventHandlers[++i];) {
	      // eslint-disable-line no-cond-assign
	      Utils.off(this.element, eh.gesture, eh.handler);
	    }
	
	    this.eventHandlers = [];
	
	    // unbind the start event listener
	    Event$1.off(this.element, EVENT_TYPES[EVENT_START], this.eventStartHandler);
	
	    return null;
	  }
	};
	
	/**
	 * @module gestures
	 */
	/**
	 * Move with x fingers (default 1) around on the page.
	 * Preventing the default browser behavior is a good way to improve feel and working.
	 * ````
	 *  GestureDetectortime.on("drag", function(ev) {
	 *    console.log(ev);
	 *    ev.gesture.preventDefault();
	 *  });
	 * ````
	 *
	 * @class Drag
	 * @static
	 */
	/**
	 * @event drag
	 * @param {Object} ev
	 */
	/**
	 * @event dragstart
	 * @param {Object} ev
	 */
	/**
	 * @event dragend
	 * @param {Object} ev
	 */
	/**
	 * @event drapleft
	 * @param {Object} ev
	 */
	/**
	 * @event dragright
	 * @param {Object} ev
	 */
	/**
	 * @event dragup
	 * @param {Object} ev
	 */
	/**
	 * @event dragdown
	 * @param {Object} ev
	 */
	
	/**
	 * @param {String} name
	 */
	(function (name) {
	  var triggered = false;
	
	  function dragGesture(ev, inst) {
	    var cur = Detection.current;
	
	    // max touches
	    if (inst.options.dragMaxTouches > 0 && ev.touches.length > inst.options.dragMaxTouches) {
	      return;
	    }
	
	    switch (ev.eventType) {
	      case EVENT_START:
	        triggered = false;
	        break;
	
	      case EVENT_MOVE:
	        // when the distance we moved is too small we skip this gesture
	        // or we can be already in dragging
	        if (ev.distance < inst.options.dragMinDistance && cur.name != name) {
	          return;
	        }
	
	        var startCenter = cur.startEvent.center;
	
	        // we are dragging!
	        if (cur.name != name) {
	          cur.name = name;
	          if (inst.options.dragDistanceCorrection && ev.distance > 0) {
	            // When a drag is triggered, set the event center to dragMinDistance pixels from the original event center.
	            // Without this correction, the dragged distance would jumpstart at dragMinDistance pixels instead of at 0.
	            // It might be useful to save the original start point somewhere
	            var factor = Math.abs(inst.options.dragMinDistance / ev.distance);
	            startCenter.pageX += ev.deltaX * factor;
	            startCenter.pageY += ev.deltaY * factor;
	            startCenter.clientX += ev.deltaX * factor;
	            startCenter.clientY += ev.deltaY * factor;
	
	            // recalculate event data using new start point
	            ev = Detection.extendEventData(ev);
	          }
	        }
	
	        // lock drag to axis?
	        if (cur.lastEvent.dragLockToAxis || inst.options.dragLockToAxis && inst.options.dragLockMinDistance <= ev.distance) {
	          ev.dragLockToAxis = true;
	        }
	
	        // keep direction on the axis that the drag gesture started on
	        var lastDirection = cur.lastEvent.direction;
	        if (ev.dragLockToAxis && lastDirection !== ev.direction) {
	          if (Utils.isVertical(lastDirection)) {
	            ev.direction = ev.deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;
	          } else {
	            ev.direction = ev.deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
	          }
	        }
	
	        // first time, trigger dragstart event
	        if (!triggered) {
	          inst.trigger(name + 'start', ev);
	          triggered = true;
	        }
	
	        // trigger events
	        inst.trigger(name, ev);
	        inst.trigger(name + ev.direction, ev);
	
	        var isVertical = Utils.isVertical(ev.direction);
	
	        // block the browser events
	        if (inst.options.dragBlockVertical && isVertical || inst.options.dragBlockHorizontal && !isVertical) {
	          ev.preventDefault();
	        }
	        break;
	
	      case EVENT_RELEASE:
	        if (triggered && ev.changedLength <= inst.options.dragMaxTouches) {
	          inst.trigger(name + 'end', ev);
	          triggered = false;
	        }
	        break;
	
	      case EVENT_END:
	        triggered = false;
	        break;
	    }
	  }
	
	  GestureDetector.gestures.Drag = {
	    name: name,
	    index: 50,
	    handler: dragGesture,
	    defaults: {
	      /**
	       * minimal movement that have to be made before the drag event gets triggered
	       * @property dragMinDistance
	       * @type {Number}
	       * @default 10
	       */
	      dragMinDistance: 10,
	
	      /**
	       * Set dragDistanceCorrection to true to make the starting point of the drag
	       * be calculated from where the drag was triggered, not from where the touch started.
	       * Useful to avoid a jerk-starting drag, which can make fine-adjustments
	       * through dragging difficult, and be visually unappealing.
	       * @property dragDistanceCorrection
	       * @type {Boolean}
	       * @default true
	       */
	      dragDistanceCorrection: true,
	
	      /**
	       * set 0 for unlimited, but this can conflict with transform
	       * @property dragMaxTouches
	       * @type {Number}
	       * @default 1
	       */
	      dragMaxTouches: 1,
	
	      /**
	       * prevent default browser behavior when dragging occurs
	       * be careful with it, it makes the element a blocking element
	       * when you are using the drag gesture, it is a good practice to set this true
	       * @property dragBlockHorizontal
	       * @type {Boolean}
	       * @default false
	       */
	      dragBlockHorizontal: false,
	
	      /**
	       * same as `dragBlockHorizontal`, but for vertical movement
	       * @property dragBlockVertical
	       * @type {Boolean}
	       * @default false
	       */
	      dragBlockVertical: false,
	
	      /**
	       * dragLockToAxis keeps the drag gesture on the axis that it started on,
	       * It disallows vertical directions if the initial direction was horizontal, and vice versa.
	       * @property dragLockToAxis
	       * @type {Boolean}
	       * @default false
	       */
	      dragLockToAxis: false,
	
	      /**
	       * drag lock only kicks in when distance > dragLockMinDistance
	       * This way, locking occurs only when the distance has become large enough to reliably determine the direction
	       * @property dragLockMinDistance
	       * @type {Number}
	       * @default 25
	       */
	      dragLockMinDistance: 25
	    }
	  };
	})('drag');
	
	/**
	 * @module gestures
	 */
	/**
	 * trigger a simple gesture event, so you can do anything in your handler.
	 * only usable if you know what your doing...
	 *
	 * @class Gesture
	 * @static
	 */
	/**
	 * @event gesture
	 * @param {Object} ev
	 */
	GestureDetector.gestures.Gesture = {
	  name: 'gesture',
	  index: 1337,
	  handler: function releaseGesture(ev, inst) {
	    inst.trigger(this.name, ev);
	  }
	};
	
	/**
	 * @module gestures
	 */
	/**
	 * Touch stays at the same place for x time
	 *
	 * @class Hold
	 * @static
	 */
	/**
	 * @event hold
	 * @param {Object} ev
	 */
	
	/**
	 * @param {String} name
	 */
	(function (name) {
	  var timer;
	
	  function holdGesture(ev, inst) {
	    var options = inst.options,
	        current = Detection.current;
	
	    switch (ev.eventType) {
	      case EVENT_START:
	        clearTimeout(timer);
	
	        // set the gesture so we can check in the timeout if it still is
	        current.name = name;
	
	        // set timer and if after the timeout it still is hold,
	        // we trigger the hold event
	        timer = setTimeout(function () {
	          if (current && current.name == name) {
	            inst.trigger(name, ev);
	          }
	        }, options.holdTimeout);
	        break;
	
	      case EVENT_MOVE:
	        if (ev.distance > options.holdThreshold) {
	          clearTimeout(timer);
	        }
	        break;
	
	      case EVENT_RELEASE:
	        clearTimeout(timer);
	        break;
	    }
	  }
	
	  GestureDetector.gestures.Hold = {
	    name: name,
	    index: 10,
	    defaults: {
	      /**
	       * @property holdTimeout
	       * @type {Number}
	       * @default 500
	       */
	      holdTimeout: 500,
	
	      /**
	       * movement allowed while holding
	       * @property holdThreshold
	       * @type {Number}
	       * @default 2
	       */
	      holdThreshold: 2
	    },
	    handler: holdGesture
	  };
	})('hold');
	
	/**
	 * @module gestures
	 */
	/**
	 * when a touch is being released from the page
	 *
	 * @class Release
	 * @static
	 */
	/**
	 * @event release
	 * @param {Object} ev
	 */
	GestureDetector.gestures.Release = {
	  name: 'release',
	  index: Infinity,
	  handler: function releaseGesture(ev, inst) {
	    if (ev.eventType == EVENT_RELEASE) {
	      inst.trigger(this.name, ev);
	    }
	  }
	};
	
	/**
	 * @module gestures
	 */
	/**
	 * triggers swipe events when the end velocity is above the threshold
	 * for best usage, set `preventDefault` (on the drag gesture) to `true`
	 * ````
	 *  GestureDetectortime.on("dragleft swipeleft", function(ev) {
	 *    console.log(ev);
	 *    ev.gesture.preventDefault();
	 *  });
	 * ````
	 *
	 * @class Swipe
	 * @static
	 */
	/**
	 * @event swipe
	 * @param {Object} ev
	 */
	/**
	 * @event swipeleft
	 * @param {Object} ev
	 */
	/**
	 * @event swiperight
	 * @param {Object} ev
	 */
	/**
	 * @event swipeup
	 * @param {Object} ev
	 */
	/**
	 * @event swipedown
	 * @param {Object} ev
	 */
	GestureDetector.gestures.Swipe = {
	  name: 'swipe',
	  index: 40,
	  defaults: {
	    /**
	     * @property swipeMinTouches
	     * @type {Number}
	     * @default 1
	     */
	    swipeMinTouches: 1,
	
	    /**
	     * @property swipeMaxTouches
	     * @type {Number}
	     * @default 1
	     */
	    swipeMaxTouches: 1,
	
	    /**
	     * horizontal swipe velocity
	     * @property swipeVelocityX
	     * @type {Number}
	     * @default 0.6
	     */
	    swipeVelocityX: 0.6,
	
	    /**
	     * vertical swipe velocity
	     * @property swipeVelocityY
	     * @type {Number}
	     * @default 0.6
	     */
	    swipeVelocityY: 0.6
	  },
	
	  handler: function swipeGesture(ev, inst) {
	    if (ev.eventType == EVENT_RELEASE) {
	      var touches = ev.touches.length,
	          options = inst.options;
	
	      // max touches
	      if (touches < options.swipeMinTouches || touches > options.swipeMaxTouches) {
	        return;
	      }
	
	      // when the distance we moved is too small we skip this gesture
	      // or we can be already in dragging
	      if (ev.velocityX > options.swipeVelocityX || ev.velocityY > options.swipeVelocityY) {
	        // trigger swipe events
	        inst.trigger(this.name, ev);
	        inst.trigger(this.name + ev.direction, ev);
	      }
	    }
	  }
	};
	
	/**
	 * @module gestures
	 */
	/**
	 * Single tap and a double tap on a place
	 *
	 * @class Tap
	 * @static
	 */
	/**
	 * @event tap
	 * @param {Object} ev
	 */
	/**
	 * @event doubletap
	 * @param {Object} ev
	 */
	
	/**
	 * @param {String} name
	 */
	(function (name) {
	  var hasMoved = false;
	
	  function tapGesture(ev, inst) {
	    var options = inst.options,
	        current = Detection.current,
	        prev = Detection.previous,
	        sincePrev,
	        didDoubleTap;
	
	    switch (ev.eventType) {
	      case EVENT_START:
	        hasMoved = false;
	        break;
	
	      case EVENT_MOVE:
	        hasMoved = hasMoved || ev.distance > options.tapMaxDistance;
	        break;
	
	      case EVENT_END:
	        if (!Utils.inStr(ev.srcEvent.type, 'cancel') && ev.deltaTime < options.tapMaxTime && !hasMoved) {
	          // previous gesture, for the double tap since these are two different gesture detections
	          sincePrev = prev && prev.lastEvent && ev.timeStamp - prev.lastEvent.timeStamp;
	          didDoubleTap = false;
	
	          // check if double tap
	          if (prev && prev.name == name && sincePrev && sincePrev < options.doubleTapInterval && ev.distance < options.doubleTapDistance) {
	            inst.trigger('doubletap', ev);
	            didDoubleTap = true;
	          }
	
	          // do a single tap
	          if (!didDoubleTap || options.tapAlways) {
	            current.name = name;
	            inst.trigger(current.name, ev);
	          }
	        }
	        break;
	    }
	  }
	
	  GestureDetector.gestures.Tap = {
	    name: name,
	    index: 100,
	    handler: tapGesture,
	    defaults: {
	      /**
	       * max time of a tap, this is for the slow tappers
	       * @property tapMaxTime
	       * @type {Number}
	       * @default 250
	       */
	      tapMaxTime: 250,
	
	      /**
	       * max distance of movement of a tap, this is for the slow tappers
	       * @property tapMaxDistance
	       * @type {Number}
	       * @default 10
	       */
	      tapMaxDistance: 10,
	
	      /**
	       * always trigger the `tap` event, even while double-tapping
	       * @property tapAlways
	       * @type {Boolean}
	       * @default true
	       */
	      tapAlways: true,
	
	      /**
	       * max distance between two taps
	       * @property doubleTapDistance
	       * @type {Number}
	       * @default 20
	       */
	      doubleTapDistance: 20,
	
	      /**
	       * max time between two taps
	       * @property doubleTapInterval
	       * @type {Number}
	       * @default 300
	       */
	      doubleTapInterval: 300
	    }
	  };
	})('tap');
	
	/**
	 * @module gestures
	 */
	/**
	 * when a touch is being touched at the page
	 *
	 * @class Touch
	 * @static
	 */
	/**
	 * @event touch
	 * @param {Object} ev
	 */
	GestureDetector.gestures.Touch = {
	  name: 'touch',
	  index: -Infinity,
	  defaults: {
	    /**
	     * call preventDefault at touchstart, and makes the element blocking by disabling the scrolling of the page,
	     * but it improves gestures like transforming and dragging.
	     * be careful with using this, it can be very annoying for users to be stuck on the page
	     * @property preventDefault
	     * @type {Boolean}
	     * @default false
	     */
	    preventDefault: false,
	
	    /**
	     * disable mouse events, so only touch (or pen!) input triggers events
	     * @property preventMouse
	     * @type {Boolean}
	     * @default false
	     */
	    preventMouse: false
	  },
	  handler: function touchGesture(ev, inst) {
	    if (inst.options.preventMouse && ev.pointerType == POINTER_MOUSE) {
	      ev.stopDetect();
	      return;
	    }
	
	    if (inst.options.preventDefault) {
	      ev.preventDefault();
	    }
	
	    if (ev.eventType == EVENT_TOUCH) {
	      inst.trigger('touch', ev);
	    }
	  }
	};
	
	/**
	 * @module gestures
	 */
	/**
	 * User want to scale or rotate with 2 fingers
	 * Preventing the default browser behavior is a good way to improve feel and working. This can be done with the
	 * `preventDefault` option.
	 *
	 * @class Transform
	 * @static
	 */
	/**
	 * @event transform
	 * @param {Object} ev
	 */
	/**
	 * @event transformstart
	 * @param {Object} ev
	 */
	/**
	 * @event transformend
	 * @param {Object} ev
	 */
	/**
	 * @event pinchin
	 * @param {Object} ev
	 */
	/**
	 * @event pinchout
	 * @param {Object} ev
	 */
	/**
	 * @event rotate
	 * @param {Object} ev
	 */
	
	/**
	 * @param {String} name
	 */
	(function (name) {
	  var triggered = false;
	
	  function transformGesture(ev, inst) {
	    switch (ev.eventType) {
	      case EVENT_START:
	        triggered = false;
	        break;
	
	      case EVENT_MOVE:
	        // at least multitouch
	        if (ev.touches.length < 2) {
	          return;
	        }
	
	        var scaleThreshold = Math.abs(1 - ev.scale);
	        var rotationThreshold = Math.abs(ev.rotation);
	
	        // when the distance we moved is too small we skip this gesture
	        // or we can be already in dragging
	        if (scaleThreshold < inst.options.transformMinScale && rotationThreshold < inst.options.transformMinRotation) {
	          return;
	        }
	
	        // we are transforming!
	        Detection.current.name = name;
	
	        // first time, trigger dragstart event
	        if (!triggered) {
	          inst.trigger(name + 'start', ev);
	          triggered = true;
	        }
	
	        inst.trigger(name, ev); // basic transform event
	
	        // trigger rotate event
	        if (rotationThreshold > inst.options.transformMinRotation) {
	          inst.trigger('rotate', ev);
	        }
	
	        // trigger pinch event
	        if (scaleThreshold > inst.options.transformMinScale) {
	          inst.trigger('pinch', ev);
	          inst.trigger('pinch' + (ev.scale < 1 ? 'in' : 'out'), ev);
	        }
	        break;
	
	      case EVENT_RELEASE:
	        if (triggered && ev.changedLength < 2) {
	          inst.trigger(name + 'end', ev);
	          triggered = false;
	        }
	        break;
	    }
	  }
	
	  GestureDetector.gestures.Transform = {
	    name: name,
	    index: 45,
	    defaults: {
	      /**
	       * minimal scale factor, no scale is 1, zoomin is to 0 and zoomout until higher then 1
	       * @property transformMinScale
	       * @type {Number}
	       * @default 0.01
	       */
	      transformMinScale: 0.01,
	
	      /**
	       * rotation in degrees
	       * @property transformMinRotation
	       * @type {Number}
	       * @default 1
	       */
	      transformMinRotation: 1
	    },
	
	    handler: transformGesture
	  };
	})('transform');
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	var readyMap = new WeakMap();
	var queueMap = new WeakMap();
	
	function isContentReady(element) {
	  if (element.childNodes.length > 0) {
	    setContentReady(element);
	  }
	  return readyMap.has(element);
	}
	
	function setContentReady(element) {
	  readyMap.set(element, true);
	}
	
	function addCallback(element, fn) {
	  if (!queueMap.has(element)) {
	    queueMap.set(element, []);
	  }
	  queueMap.get(element).push(fn);
	}
	
	function consumeQueue(element) {
	  var callbacks = queueMap.get(element, []) || [];
	  queueMap.delete(element);
	  callbacks.forEach(function (callback) {
	    return callback();
	  });
	}
	
	function contentReady(element) {
	  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
	
	  addCallback(element, fn);
	
	  if (isContentReady(element)) {
	    consumeQueue(element);
	    return;
	  }
	
	  var observer = new MutationObserver(function (changes) {
	    setContentReady(element);
	    consumeQueue(element);
	  });
	  observer.observe(element, { childList: true, characterData: true });
	
	  // failback for elements has empty content.
	  setImmediate(function () {
	    setContentReady(element);
	    consumeQueue(element);
	  });
	}
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @object ons.notification
	 * @category dialog
	 * @tutorial vanilla/Reference/dialog
	 * @description
	 *   [en]
	 *     Utility methods to create different kinds of alert dialogs. There are three methods available:
	 *
	 *     * `ons.notification.alert()`
	 *     * `ons.notification.confirm()`
	 *     * `ons.notification.prompt()`
	 *
	 *     It will automatically display a Material Design dialog on Android devices.
	 *   [/en]
	 *   [ja]いくつかの種類のアラートダイアログを作成するためのユーティリティメソッドを収めたオブジェクトです。[/ja]
	 * @example
	 * ons.notification.alert('Hello, world!');
	 *
	 * ons.notification.confirm('Are you ready?')
	 *   .then(
	 *     function(answer) {
	 *       if (answer === 1) {
	 *         ons.notification.alert('Let\'s go!');
	 *       }
	 *     }
	 *   );
	 *
	 * ons.notification.prompt('How old are ?')
	 *   .then(
	 *     function(age) {
	 *       ons.notification.alert('You are ' + age + ' years old.');
	 *     }
	 *   );
	 */
	var notification = {};
	
	notification._createAlertDialog = function (options) {
	  // Prompt input string
	  var inputString = '';
	  if (options.isPrompt) {
	    inputString = '\n      <input\n        class="text-input text-input--underbar"\n        type="' + (options.inputType || 'text') + '"\n        placeholder="' + (options.placeholder || '') + '"\n        value="' + (options.defaultValue || '') + '"\n        style="width: 100%; margin-top: 10px;"\n      />\n    ';
	  }
	
	  // Buttons string
	  var buttons = '';
	  options.buttonLabels.forEach(function (label, index) {
	    buttons += '\n      <button class="\n        alert-dialog-button\n        ' + (index === options.primaryButtonIndex ? ' alert-dialog-button--primal' : '') + '\n        ' + (options.buttonLabels.length <= 2 ? ' alert-dialog-button--rowfooter' : '') + '\n      ">\n        ' + label + '\n      </button>\n    ';
	  });
	
	  // Dialog Element
	  var el = {};
	  var _destroyDialog = function _destroyDialog() {
	    if (el.dialog.onDialogCancel) {
	      el.dialog.removeEventListener('dialog-cancel', el.dialog.onDialogCancel);
	    }
	
	    Object.keys(el).forEach(function (key) {
	      return delete el[key];
	    });
	    el = null;
	
	    if (options.destroy instanceof Function) {
	      options.destroy();
	    }
	  };
	
	  el.dialog = document.createElement('ons-alert-dialog');
	  el.dialog.innerHTML = '\n    <div class="alert-dialog-mask"></div>\n    <div class="alert-dialog">\n      <div class="alert-dialog-container">\n        <div class="alert-dialog-title">\n          ' + (options.title || '') + '\n        </div>\n        <div class="alert-dialog-content">\n          ' + (options.message || options.messageHTML) + '\n          ' + inputString + '\n        </div>\n        <div class="\n          alert-dialog-footer\n          ' + (options.buttonLabels.length <= 2 ? ' alert-dialog-footer--rowfooter' : '') + '\n        ">\n          ' + buttons + '\n        </div>\n      </div>\n    </div>\n  ';
	  contentReady(el.dialog);
	
	  // Set attributes
	  ['id', 'class', 'animation'].forEach(function (a) {
	    return options.hasOwnProperty(a) && el.dialog.setAttribute(a, options[a]);
	  });
	  if (options.modifier) {
	    util.addModifier(el.dialog, options.modifier);
	  }
	
	  var deferred = util.defer();
	
	  // Prompt events
	  if (options.isPrompt && options.submitOnEnter) {
	    el.input = el.dialog.querySelector('.text-input');
	    el.input.onkeypress = function (event) {
	      if (event.keyCode === 13) {
	        el.dialog.hide().then(function () {
	          if (el) {
	            var resolveValue = el.input.value;
	            _destroyDialog();
	            options.callback(resolveValue);
	            deferred.resolve(resolveValue);
	          }
	        });
	      }
	    };
	  }
	
	  // Button events
	  el.footer = el.dialog.querySelector('.alert-dialog-footer');
	  util.arrayFrom(el.dialog.querySelectorAll('.alert-dialog-button')).forEach(function (buttonElement, index) {
	    buttonElement.onclick = function () {
	      el.dialog.hide().then(function () {
	        if (el) {
	          var resolveValue = options.isPrompt ? el.input.value : index;
	          el.dialog.remove();
	          _destroyDialog();
	          options.callback(resolveValue);
	          deferred.resolve(resolveValue);
	        }
	      });
	    };
	
	    el.footer.appendChild(buttonElement);
	  });
	
	  // Cancel events
	  if (options.cancelable) {
	    el.dialog.cancelable = true;
	    el.dialog.onDialogCancel = function () {
	      setImmediate(function () {
	        el.dialog.remove();
	        _destroyDialog();
	      });
	      var resolveValue = options.isPrompt ? null : -1;
	      options.callback(resolveValue);
	      deferred.reject(resolveValue);
	    };
	    el.dialog.addEventListener('dialog-cancel', el.dialog.onDialogCancel, false);
	  }
	
	  // Show dialog
	  document.body.appendChild(el.dialog);
	  options.compile(el.dialog);
	  setImmediate(function () {
	    el.dialog.show().then(function () {
	      if (el.input && options.isPrompt && options.autofocus) {
	        el.input.focus();
	      }
	    });
	  });
	
	  return deferred.promise;
	};
	
	var _normalizeArguments = function _normalizeArguments(message) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  typeof message === 'string' ? options.message = message : options = message;
	  if (!options.message && !options.messageHTML) {
	    throw new Error('Alert dialog must contain a message.');
	  }
	
	  if (options.hasOwnProperty('buttonLabels') || options.hasOwnProperty('buttonLabel')) {
	    options.buttonLabels = options.buttonLabels || options.buttonLabel;
	    if (!Array.isArray(options.buttonLabels)) {
	      options.buttonLabels = [options.buttonLabels || ''];
	    }
	  }
	
	  return util.extend({
	    compile: function compile(param) {
	      return param;
	    },
	    callback: function callback(param) {
	      return param;
	    },
	    buttonLabels: ['OK'],
	    primaryButtonIndex: 0,
	    animation: 'default',
	    cancelable: false
	  }, defaults, options);
	};
	
	/**
	 * @method alert
	 * @signature alert(message [, options] | options)
	 * @return {Promise}
	 *   [en]Will resolve when the dialog is closed.[/en]
	 *   [ja][/ja]
	 * @param {String} message
	 *   [en]Alert message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]
	 *   [ja][/ja]
	 * @param {Object} options
	 *   [en]Parameter object.[/en]
	 *   [ja]オプションを指定するオブジェクトです。[/ja]
	 * @param {String} [options.message]
	 *   [en]Alert message.[/en]
	 *   [ja]アラートダイアログに表示する文字列を指定します。[/ja]
	 * @param {String} [options.messageHTML]
	 *   [en]Alert message in HTML.[/en]
	 *   [ja]アラートダイアログに表示するHTMLを指定します。[/ja]
	 * @param {String | Array} [options.buttonLabels]
	 *   [en]Labels for the buttons. Default is `"OK"`.[/en]
	 *   [ja]確認ボタンのラベルを指定します。"OK"がデフォルトです。[/ja]
	 * @param {Number} [options.primaryButtonIndex]
	 *   [en]Index of primary button. Default is `0`.[/en]
	 *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 0 です。[/ja]
	 * @param {Boolean} [options.cancelable]
	 *   [en]Whether the dialog is cancelable or not. Default is `false`. If the dialog is cancelable it can be closed by clicking the background or pressing the Android back button.[/en]
	 *   [ja]ダイアログがキャンセル可能かどうかを指定します。[/ja]
	 * @param {String} [options.animation]
	 *   [en]Animation name. Available animations are `none` and `fade`. Default is `fade`.[/en]
	 *   [ja]アラートダイアログを表示する際のアニメーション名を指定します。"none", "fade"のいずれかを指定できます。[/ja]
	 * @param {String} [options.id]
	 *   [en]The `<ons-alert-dialog>` element's ID.[/en]
	 *   [ja]ons-alert-dialog要素のID。[/ja]
	 * @param {String} [options.class]
	 *   [en]The `<ons-alert-dialog>` element's class.[/en]
	 *   [ja]ons-alert-dialog要素のclass。[/ja]
	 * @param {String} [options.title]
	 *   [en]Dialog title. Default is `"Alert"`.[/en]
	 *   [ja]アラートダイアログの上部に表示するタイトルを指定します。"Alert"がデフォルトです。[/ja]
	 * @param {String} [options.modifier]
	 *   [en]Modifier for the dialog.[/en]
	 *   [ja]アラートダイアログのmodifier属性の値を指定します。[/ja]
	 * @param {Function} [options.callback]
	 *   [en]Function that executes after dialog has been closed.[/en]
	 *   [ja]アラートダイアログが閉じられた時に呼び出される関数オブジェクトを指定します。[/ja]
	 * @description
	 *   [en]
	 *     Display an alert dialog to show the user a message.
	 *
	 *     The content of the message can be either simple text or HTML.
	 *
	 *     It can be called in the following ways:
	 *
	 *     ```
	 *     ons.notification.alert(message, options);
	 *     ons.notification.alert(options);
	 *     ```
	 *
	 *     Must specify either `message` or `messageHTML`.
	 *   [/en]
	 *   [ja]
	 *     ユーザーへメッセージを見せるためのアラートダイアログを表示します。
	 *     表示するメッセージは、テキストかもしくはHTMLを指定できます。
	 *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。
	 *   [/ja]
	 */
	notification.alert = function (message, options) {
	  options = _normalizeArguments(message, options, {
	    title: 'Alert'
	  });
	
	  return notification._createAlertDialog(options);
	};
	
	/**
	 * @method confirm
	 * @signature confirm(message [, options] | options)
	 * @return {Promise}
	 *   [en]Will resolve to the index of the button that was pressed.[/en]
	 *   [ja][/ja]
	 * @param {String} message
	 *   [en]Alert message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]
	 *   [ja][/ja]
	 * @param {Object} options
	 *   [en]Parameter object.[/en]
	 * @param {Array} [options.buttonLabels]
	 *   [en]Labels for the buttons. Default is `["Cancel", "OK"]`.[/en]
	 *   [ja]ボタンのラベルの配列を指定します。["Cancel", "OK"]がデフォルトです。[/ja]
	 * @param {Number} [options.primaryButtonIndex]
	 *   [en]Index of primary button. Default is `1`.[/en]
	 *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 1 です。[/ja]
	 * @description
	 *   [en]
	 *     Display a dialog to ask the user for confirmation. Extends `alert()` parameters.
	 *     The default button labels are `"Cancel"` and `"OK"` but they can be customized.
	 *
	 *     It can be called in the following ways:
	 *
	 *     ```
	 *     ons.notification.confirm(message, options);
	 *     ons.notification.confirm(options);
	 *     ```
	 *
	 *     Must specify either `message` or `messageHTML`.
	 *   [/en]
	 *   [ja]
	 *     ユーザに確認を促すダイアログを表示します。
	 *     デオルとのボタンラベルは、"Cancel"と"OK"ですが、これはこのメソッドの引数でカスタマイズできます。
	 *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。
	 *   [/ja]
	 */
	notification.confirm = function (message, options) {
	  options = _normalizeArguments(message, options, {
	    buttonLabels: ['Cancel', 'OK'],
	    primaryButtonIndex: 1,
	    title: 'Confirm'
	  });
	
	  return notification._createAlertDialog(options);
	};
	
	/**
	 * @method prompt
	 * @signature prompt(message [, options] | options)
	 * @param {String} message
	 *   [en]Alert message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]
	 *   [ja][/ja]
	 * @return {Promise}
	 *   [en]Will resolve to the input value when the dialog is closed.[/en]
	 *   [ja][/ja]
	 * @param {Object} options
	 *   [en]Parameter object.[/en]
	 *   [ja]オプションを指定するオブジェクトです。[/ja]
	 * @param {String | Array} [options.buttonLabels]
	 *   [en]Labels for the buttons. Default is `"OK"`.[/en]
	 *   [ja]確認ボタンのラベルを指定します。"OK"がデフォルトです。[/ja]
	 * @param {Number} [options.primaryButtonIndex]
	 *   [en]Index of primary button. Default is `0`.[/en]
	 *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 0 です。[/ja]
	 * @param {String} [options.placeholder]
	 *   [en]Placeholder for the text input.[/en]
	 *   [ja]テキスト欄のプレースホルダに表示するテキストを指定します。[/ja]
	 * @param {String} [options.defaultValue]
	 *   [en]Default value for the text input.[/en]
	 *   [ja]テキスト欄のデフォルトの値を指定します。[/ja]
	 * @param {String} [options.inputType]
	 *   [en]Type of the input element (`password`, `date`...). Default is `text`.[/en]
	 *   [ja][/ja]
	 * @param {Boolean} [options.autofocus]
	 *   [en]Autofocus the input element. Default is `true`.[/en]
	 *   [ja]input要素に自動的にフォーカスするかどうかを指定します。デフォルトはtrueです。[/ja]
	 * @param {Boolean} [options.submitOnEnter]
	 *   [en]Submit automatically when enter is pressed. Default is `true`.[/en]
	 *   [ja]Enterが押された際にそのformをsubmitするかどうかを指定します。デフォルトはtrueです。[/ja]
	 * @description
	 *   [en]
	 *     Display a dialog with a prompt to ask the user a question. Extends `alert()` parameters.
	 *
	 *     It can be called in the following ways:
	 *
	 *     ```
	 *     ons.notification.prompt(message, options);
	 *     ons.notification.prompt(options);
	 *     ```
	 *
	 *     Must specify either `message` or `messageHTML`.
	 *   [/en]
	 *   [ja]
	 *     ユーザーに入力を促すダイアログを表示します。
	 *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。
	 *   [/ja]
	 */
	notification.prompt = function (message, options) {
	  options = _normalizeArguments(message, options, {
	    title: 'Alert',
	    isPrompt: true,
	    autofocus: true,
	    submitOnEnter: true
	  });
	
	  return notification._createAlertDialog(options);
	};
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var create$2 = function create$2() {
	
	  /**
	   * @object ons.orientation
	   * @category util
	   * @description
	   *   [en]Utility methods for orientation detection.[/en]
	   *   [ja]画面のオリエンテーション検知のためのユーティリティメソッドを収めているオブジェクトです。[/ja]
	   */
	  var obj = {
	    /**
	     * @event change
	     * @description
	     *   [en]Fired when the device orientation changes.[/en]
	     *   [ja]デバイスのオリエンテーションが変化した際に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Boolean} event.isPortrait
	     *   [en]Will be true if the current orientation is portrait mode.[/en]
	     *   [ja]現在のオリエンテーションがportraitの場合にtrueを返します。[/ja]
	     */
	
	    /**
	     * @method on
	     * @signature on(eventName, listener)
	     * @description
	     *   [en]Add an event listener.[/en]
	     *   [ja]イベントリスナーを追加します。[/ja]
	     * @param {String} eventName
	     *   [en]Name of the event.[/en]
	     *   [ja]イベント名を指定します。[/ja]
	     * @param {Function} listener
	     *   [en]Function to execute when the event is triggered.[/en]
	     *   [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]
	     */
	
	    /**
	     * @method once
	     * @signature once(eventName, listener)
	     * @description
	     *  [en]Add an event listener that's only triggered once.[/en]
	     *  [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]
	     * @param {String} eventName
	     *   [en]Name of the event.[/en]
	     *   [ja]イベント名を指定します。[/ja]
	     * @param {Function} listener
	     *   [en]Function to execute when the event is triggered.[/en]
	     *   [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]
	     */
	
	    /**
	     * @method off
	     * @signature off(eventName, [listener])
	     * @description
	     *  [en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]
	     *  [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]
	     * @param {String} eventName
	     *   [en]Name of the event.[/en]
	     *   [ja]イベント名を指定します。[/ja]
	     * @param {Function} listener
	     *   [en]Function to execute when the event is triggered.[/en]
	     *   [ja]削除するイベントリスナーを指定します。[/ja]
	     */
	
	    // actual implementation to detect if whether current screen is portrait or not
	    _isPortrait: false,
	
	    /**
	     * @method isPortrait
	     * @signature isPortrait()
	     * @return {Boolean}
	     *   [en]Will be true if the current orientation is portrait mode.[/en]
	     *   [ja]オリエンテーションがportraitモードの場合にtrueになります。[/ja]
	     * @description
	     *   [en]Returns whether the current screen orientation is portrait or not.[/en]
	     *   [ja]オリエンテーションがportraitモードかどうかを返します。[/ja]
	     */
	    isPortrait: function isPortrait() {
	      return this._isPortrait();
	    },
	
	    /**
	     * @method isLandscape
	     * @signature isLandscape()
	     * @return {Boolean}
	     *   [en]Will be true if the current orientation is landscape mode.[/en]
	     *   [ja]オリエンテーションがlandscapeモードの場合にtrueになります。[/ja]
	     * @description
	     *   [en]Returns whether the current screen orientation is landscape or not.[/en]
	     *   [ja]オリエンテーションがlandscapeモードかどうかを返します。[/ja]
	     */
	    isLandscape: function isLandscape() {
	      return !this.isPortrait();
	    },
	
	    _init: function _init() {
	      document.addEventListener('DOMContentLoaded', this._onDOMContentLoaded.bind(this), false);
	
	      if ('orientation' in window) {
	        window.addEventListener('orientationchange', this._onOrientationChange.bind(this), false);
	      } else {
	        window.addEventListener('resize', this._onResize.bind(this), false);
	      }
	
	      this._isPortrait = function () {
	        return window.innerHeight > window.innerWidth;
	      };
	
	      return this;
	    },
	
	    _onDOMContentLoaded: function _onDOMContentLoaded() {
	      this._installIsPortraitImplementation();
	      this.emit('change', { isPortrait: this.isPortrait() });
	    },
	
	    _installIsPortraitImplementation: function _installIsPortraitImplementation() {
	      var isPortrait = window.innerWidth < window.innerHeight;
	
	      if (!('orientation' in window)) {
	        this._isPortrait = function () {
	          return window.innerHeight > window.innerWidth;
	        };
	      } else if (window.orientation % 180 === 0) {
	        this._isPortrait = function () {
	          return Math.abs(window.orientation % 180) === 0 ? isPortrait : !isPortrait;
	        };
	      } else {
	        this._isPortrait = function () {
	          return Math.abs(window.orientation % 180) === 90 ? isPortrait : !isPortrait;
	        };
	      }
	    },
	
	    _onOrientationChange: function _onOrientationChange() {
	      var _this = this;
	
	      var isPortrait = this._isPortrait();
	
	      // Wait for the dimensions to change because
	      // of Android inconsistency.
	      var nIter = 0;
	      var interval = setInterval(function () {
	        nIter++;
	
	        var w = window.innerWidth;
	        var h = window.innerHeight;
	
	        if (isPortrait && w <= h || !isPortrait && w >= h) {
	          _this.emit('change', { isPortrait: isPortrait });
	          clearInterval(interval);
	        } else if (nIter === 50) {
	          _this.emit('change', { isPortrait: isPortrait });
	          clearInterval(interval);
	        }
	      }, 20);
	    },
	
	    // Run on not mobile browser.
	    _onResize: function _onResize() {
	      this.emit('change', { isPortrait: this.isPortrait() });
	    }
	  };
	
	  MicroEvent.mixin(obj);
	
	  return obj;
	};
	
	var orientation = create$2()._init();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var softwareKeyboard = new MicroEvent();
	softwareKeyboard._visible = false;
	
	var onShow = function onShow() {
	  softwareKeyboard._visible = true;
	  softwareKeyboard.emit('show');
	};
	
	var onHide = function onHide() {
	  softwareKeyboard._visible = false;
	  softwareKeyboard.emit('hide');
	};
	
	var bindEvents = function bindEvents() {
	  if (typeof Keyboard !== 'undefined') {
	    // https://github.com/martinmose/cordova-keyboard/blob/95f3da3a38d8f8e1fa41fbf40145352c13535a00/README.md
	    Keyboard.onshow = onShow;
	    Keyboard.onhide = onHide;
	    softwareKeyboard.emit('init', { visible: Keyboard.isVisible });
	
	    return true;
	  } else if (typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.Keyboard !== 'undefined') {
	    // https://github.com/driftyco/ionic-plugins-keyboard/blob/ca27ecf/README.md
	    window.addEventListener('native.keyboardshow', onShow);
	    window.addEventListener('native.keyboardhide', onHide);
	    softwareKeyboard.emit('init', { visible: cordova.plugins.Keyboard.isVisible });
	
	    return true;
	  }
	
	  return false;
	};
	
	var noPluginError = function noPluginError() {
	  util.warn('ons-keyboard: Cordova Keyboard plugin is not present.');
	};
	
	document.addEventListener('deviceready', function () {
	  if (!bindEvents()) {
	    if (document.querySelector('[ons-keyboard-active]') || document.querySelector('[ons-keyboard-inactive]')) {
	      noPluginError();
	    }
	
	    softwareKeyboard.on = noPluginError;
	  }
	});
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var util$3 = {
	  _ready: false,
	
	  _domContentLoaded: false,
	
	  _onDOMContentLoaded: function _onDOMContentLoaded() {
	    util$3._domContentLoaded = true;
	
	    if (platform.isWebView()) {
	      window.document.addEventListener('deviceready', function () {
	        util$3._ready = true;
	      }, false);
	    } else {
	      util$3._ready = true;
	    }
	  },
	
	  addBackButtonListener: function addBackButtonListener(fn) {
	    if (!this._domContentLoaded) {
	      throw new Error('This method is available after DOMContentLoaded');
	    }
	
	    if (this._ready) {
	      window.document.addEventListener('backbutton', fn, false);
	    } else {
	      window.document.addEventListener('deviceready', function () {
	        window.document.addEventListener('backbutton', fn, false);
	      });
	    }
	  },
	
	  removeBackButtonListener: function removeBackButtonListener(fn) {
	    if (!this._domContentLoaded) {
	      throw new Error('This method is available after DOMContentLoaded');
	    }
	
	    if (this._ready) {
	      window.document.removeEventListener('backbutton', fn, false);
	    } else {
	      window.document.addEventListener('deviceready', function () {
	        window.document.removeEventListener('backbutton', fn, false);
	      });
	    }
	  }
	};
	window.addEventListener('DOMContentLoaded', function () {
	  return util$3._onDOMContentLoaded();
	}, false);
	
	var HandlerRepository = {
	  _store: {},
	
	  _genId: function () {
	    var i = 0;
	    return function () {
	      return i++;
	    };
	  }(),
	
	  set: function set(element, handler) {
	    if (element.dataset.deviceBackButtonHandlerId) {
	      this.remove(element);
	    }
	    var id = element.dataset.deviceBackButtonHandlerId = HandlerRepository._genId();
	    this._store[id] = handler;
	  },
	
	  remove: function remove(element) {
	    if (element.dataset.deviceBackButtonHandlerId) {
	      delete this._store[element.dataset.deviceBackButtonHandlerId];
	      delete element.dataset.deviceBackButtonHandlerId;
	    }
	  },
	
	  get: function get(element) {
	    if (!element.dataset.deviceBackButtonHandlerId) {
	      return undefined;
	    }
	
	    var id = element.dataset.deviceBackButtonHandlerId;
	
	    if (!this._store[id]) {
	      throw new Error();
	    }
	
	    return this._store[id];
	  },
	
	  has: function has(element) {
	    if (!element.dataset) {
	      return false;
	    }
	
	    var id = element.dataset.deviceBackButtonHandlerId;
	
	    return !!this._store[id];
	  }
	};
	
	var DeviceBackButtonDispatcher = function () {
	  function DeviceBackButtonDispatcher() {
	    classCallCheck(this, DeviceBackButtonDispatcher);
	
	    this._isEnabled = false;
	    this._boundCallback = this._callback.bind(this);
	  }
	
	  /**
	   * Enable to handle 'backbutton' events.
	   */
	
	
	  createClass(DeviceBackButtonDispatcher, [{
	    key: 'enable',
	    value: function enable() {
	      if (!this._isEnabled) {
	        util$3.addBackButtonListener(this._boundCallback);
	        this._isEnabled = true;
	      }
	    }
	
	    /**
	     * Disable to handle 'backbutton' events.
	     */
	
	  }, {
	    key: 'disable',
	    value: function disable() {
	      if (this._isEnabled) {
	        util$3.removeBackButtonListener(this._boundCallback);
	        this._isEnabled = false;
	      }
	    }
	
	    /**
	     * Fire a 'backbutton' event manually.
	     */
	
	  }, {
	    key: 'fireDeviceBackButtonEvent',
	    value: function fireDeviceBackButtonEvent() {
	      var event = document.createEvent('Event');
	      event.initEvent('backbutton', true, true);
	      document.dispatchEvent(event);
	    }
	  }, {
	    key: '_callback',
	    value: function _callback() {
	      this._dispatchDeviceBackButtonEvent();
	    }
	
	    /**
	     * @param {HTMLElement} element
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'createHandler',
	    value: function createHandler(element, callback) {
	      if (!(element instanceof HTMLElement)) {
	        throw new Error('element must be an instance of HTMLElement');
	      }
	
	      if (!(callback instanceof Function)) {
	        throw new Error('callback must be an instance of Function');
	      }
	
	      var handler = {
	        _callback: callback,
	        _element: element,
	
	        disable: function disable() {
	          HandlerRepository.remove(element);
	        },
	
	        setListener: function setListener(callback) {
	          this._callback = callback;
	        },
	
	        enable: function enable() {
	          HandlerRepository.set(element, this);
	        },
	
	        isEnabled: function isEnabled() {
	          return HandlerRepository.get(element) === this;
	        },
	
	        destroy: function destroy() {
	          HandlerRepository.remove(element);
	          this._callback = this._element = null;
	        }
	      };
	
	      handler.enable();
	
	      return handler;
	    }
	  }, {
	    key: '_dispatchDeviceBackButtonEvent',
	    value: function _dispatchDeviceBackButtonEvent() {
	      var tree = this._captureTree();
	
	      var element = this._findHandlerLeafElement(tree);
	
	      var handler = HandlerRepository.get(element);
	      handler._callback(createEvent(element));
	
	      function createEvent(element) {
	        return {
	          _element: element,
	          callParentHandler: function callParentHandler() {
	            var parent = this._element.parentNode;
	
	            while (parent) {
	              handler = HandlerRepository.get(parent);
	              if (handler) {
	                return handler._callback(createEvent(parent));
	              }
	              parent = parent.parentNode;
	            }
	          }
	        };
	      }
	    }
	
	    /**
	     * @return {Object}
	     */
	
	  }, {
	    key: '_captureTree',
	    value: function _captureTree() {
	      return createTree(document.body);
	
	      function createTree(element) {
	        var tree = {
	          element: element,
	          children: Array.prototype.concat.apply([], arrayOf(element.children).map(function (childElement) {
	
	            if (childElement.style.display === 'none') {
	              return [];
	            }
	
	            if (childElement.children.length === 0 && !HandlerRepository.has(childElement)) {
	              return [];
	            }
	
	            var result = createTree(childElement);
	
	            if (result.children.length === 0 && !HandlerRepository.has(result.element)) {
	              return [];
	            }
	
	            return [result];
	          }))
	        };
	
	        if (!HandlerRepository.has(tree.element)) {
	          var _iteratorNormalCompletion = true;
	          var _didIteratorError = false;
	          var _iteratorError = undefined;
	
	          try {
	            for (var _iterator = tree.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	              var subTree = _step.value;
	
	              if (HandlerRepository.has(subTree.element)) {
	                return subTree;
	              }
	            }
	          } catch (err) {
	            _didIteratorError = true;
	            _iteratorError = err;
	          } finally {
	            try {
	              if (!_iteratorNormalCompletion && _iterator.return) {
	                _iterator.return();
	              }
	            } finally {
	              if (_didIteratorError) {
	                throw _iteratorError;
	              }
	            }
	          }
	        }
	
	        return tree;
	      }
	
	      function arrayOf(target) {
	        var result = [];
	        for (var i = 0; i < target.length; i++) {
	          result.push(target[i]);
	        }
	        return result;
	      }
	    }
	
	    /**
	     * @param {Object} tree
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_findHandlerLeafElement',
	    value: function _findHandlerLeafElement(tree) {
	      return find(tree);
	
	      function find(node) {
	        if (node.children.length === 0) {
	          return node.element;
	        }
	
	        if (node.children.length === 1) {
	          return find(node.children[0]);
	        }
	
	        return node.children.map(function (childNode) {
	          return childNode.element;
	        }).reduce(function (left, right) {
	          if (!left) {
	            return right;
	          }
	
	          var leftZ = parseInt(window.getComputedStyle(left, '').zIndex, 10);
	          var rightZ = parseInt(window.getComputedStyle(right, '').zIndex, 10);
	
	          if (!isNaN(leftZ) && !isNaN(rightZ)) {
	            return leftZ > rightZ ? left : right;
	          }
	
	          throw new Error('Capturing backbutton-handler is failure.');
	        }, null);
	      }
	    }
	  }]);
	  return DeviceBackButtonDispatcher;
	}();
	
	var deviceBackButtonDispatcher = new DeviceBackButtonDispatcher();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var generateId = function () {
	  var i = 0;
	  return function () {
	    return i++;
	  };
	}();
	
	/**
	 * Door locking system.
	 *
	 * @param {Object} [options]
	 * @param {Function} [options.log]
	 */
	
	var DoorLock = function () {
	  function DoorLock() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    classCallCheck(this, DoorLock);
	
	    this._lockList = [];
	    this._waitList = [];
	    this._log = options.log || function () {};
	  }
	
	  /**
	   * Register a lock.
	   *
	   * @return {Function} Callback for unlocking.
	   */
	
	
	  createClass(DoorLock, [{
	    key: 'lock',
	    value: function lock() {
	      var _this = this;
	
	      var unlock = function unlock() {
	        _this._unlock(unlock);
	      };
	      unlock.id = generateId();
	      this._lockList.push(unlock);
	      this._log('lock: ' + unlock.id);
	
	      return unlock;
	    }
	  }, {
	    key: '_unlock',
	    value: function _unlock(fn) {
	      var index = this._lockList.indexOf(fn);
	      if (index === -1) {
	        throw new Error('This function is not registered in the lock list.');
	      }
	
	      this._lockList.splice(index, 1);
	      this._log('unlock: ' + fn.id);
	
	      this._tryToFreeWaitList();
	    }
	  }, {
	    key: '_tryToFreeWaitList',
	    value: function _tryToFreeWaitList() {
	      while (!this.isLocked() && this._waitList.length > 0) {
	        this._waitList.shift()();
	      }
	    }
	
	    /**
	     * Register a callback for waiting unlocked door.
	     *
	     * @params {Function} callback Callback on unlocking the door completely.
	     */
	
	  }, {
	    key: 'waitUnlock',
	    value: function waitUnlock(callback) {
	      if (!(callback instanceof Function)) {
	        throw new Error('The callback param must be a function.');
	      }
	
	      if (this.isLocked()) {
	        this._waitList.push(callback);
	      } else {
	        callback();
	      }
	    }
	
	    /**
	     * @return {Boolean}
	     */
	
	  }, {
	    key: 'isLocked',
	    value: function isLocked() {
	      return this._lockList.length > 0;
	    }
	  }]);
	  return DoorLock;
	}();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	// Default implementation for global PageLoader.
	function loadPage(_ref, done) {
	  var page = _ref.page,
	      parent = _ref.parent,
	      _ref$params = _ref.params,
	      params = _ref$params === undefined ? {} : _ref$params;
	
	  internal$1.getPageHTMLAsync(page).then(function (html) {
	    var pageElement = util.createElement(html.trim());
	    parent.appendChild(pageElement);
	
	    done(pageElement);
	  });
	}
	
	function unloadPage(element) {
	  if (element._destroy instanceof Function) {
	    element._destroy();
	  } else {
	    element.remove();
	  }
	}
	
	var PageLoader = function () {
	  /**
	   * @param {Function} [fn] Returns an object that has "element" property and "unload" function.
	   */
	  function PageLoader(loader, unloader) {
	    classCallCheck(this, PageLoader);
	
	    this._loader = loader instanceof Function ? loader : loadPage;
	    this._unloader = unloader instanceof Function ? unloader : unloadPage;
	  }
	
	  /**
	   * Set internal loader implementation.
	   */
	
	
	  createClass(PageLoader, [{
	    key: 'load',
	
	
	    /**
	     * @param {any} options.page
	     * @param {Element} options.parent A location to load page.
	     * @param {Object} [options.params] Extra parameters for ons-page.
	     * @param {Function} done Take an object that has "element" property and "unload" function.
	     */
	    value: function load(_ref2, done) {
	      var page = _ref2.page,
	          parent = _ref2.parent,
	          _ref2$params = _ref2.params,
	          params = _ref2$params === undefined ? {} : _ref2$params;
	
	      this._loader({ page: page, parent: parent, params: params }, function (pageElement) {
	        if (!(pageElement instanceof Element)) {
	          throw Error('pageElement must be an instance of Element.');
	        }
	
	        done(pageElement);
	      });
	    }
	  }, {
	    key: 'unload',
	    value: function unload(pageElement) {
	      if (!(pageElement instanceof Element)) {
	        throw Error('pageElement must be an instance of Element.');
	      }
	
	      this._unloader(pageElement);
	    }
	  }, {
	    key: 'internalLoader',
	    set: function set(fn) {
	      if (!(fn instanceof Function)) {
	        throw Error('First parameter must be an instance of Function');
	      }
	      this._loader = fn;
	    },
	    get: function get() {
	      return this._loader;
	    }
	  }]);
	  return PageLoader;
	}();
	
	var defaultPageLoader = new PageLoader();
	
	var instantPageLoader = new PageLoader(function (_ref3, done) {
	  var page = _ref3.page,
	      parent = _ref3.parent,
	      _ref3$params = _ref3.params,
	      params = _ref3$params === undefined ? {} : _ref3$params;
	
	  var element = util.createElement(page.trim());
	  parent.appendChild(element);
	
	  done(element);
	}, unloadPage);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var BaseAnimator = function () {
	
	  /**
	   * @param {Object} options
	   * @param {String} options.timing
	   * @param {Number} options.duration
	   * @param {Number} options.delay
	   */
	  function BaseAnimator() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    classCallCheck(this, BaseAnimator);
	
	    this.timing = options.timing || 'linear';
	    this.duration = options.duration || 0;
	    this.delay = options.delay || 0;
	  }
	
	  createClass(BaseAnimator, null, [{
	    key: 'extend',
	    value: function extend() {
	      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      var extendedAnimator = this;
	      var newAnimator = function newAnimator() {
	        extendedAnimator.apply(this, arguments);
	        util.extend(this, properties);
	      };
	
	      newAnimator.prototype = this.prototype;
	      return newAnimator;
	    }
	  }]);
	  return BaseAnimator;
	}();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @object ons
	 * @category util
	 * @description
	 *   [ja]Onsen UIで利用できるグローバルなオブジェクトです。[/ja]
	 *   [en]A global object that's used in Onsen UI. [/en]
	 */
	var ons$1 = {};
	
	ons$1._util = util;
	ons$1.animit = Animit;
	ons$1._deviceBackButtonDispatcher = deviceBackButtonDispatcher;
	ons$1._internal = internal$1;
	ons$1.GestureDetector = GestureDetector;
	ons$1.platform = platform;
	ons$1.softwareKeyboard = softwareKeyboard;
	ons$1.pageAttributeExpression = pageAttributeExpression;
	ons$1.orientation = orientation;
	ons$1.notification = notification;
	ons$1._animationOptionsParser = parse;
	ons$1._autoStyle = autoStyle;
	ons$1._DoorLock = DoorLock;
	ons$1._contentReady = contentReady;
	ons$1.defaultPageLoader = defaultPageLoader;
	ons$1.PageLoader = PageLoader;
	ons$1._BaseAnimator = BaseAnimator;
	
	ons$1._readyLock = new DoorLock();
	
	ons$1.platform.select((window.location.search.match(/platform=([\w-]+)/) || [])[1]);
	
	waitDeviceReady();
	
	/**
	 * @method isReady
	 * @signature isReady()
	 * @return {Boolean}
	 *   [en]Will be true if Onsen UI is initialized.[/en]
	 *   [ja]初期化されているかどうかを返します。[/ja]
	 * @description
	 *   [en]Returns true if Onsen UI is initialized.[/en]
	 *   [ja]Onsen UIがすでに初期化されているかどうかを返すメソッドです。[/ja]
	 */
	ons$1.isReady = function () {
	  return !ons$1._readyLock.isLocked();
	};
	
	/**
	 * @method isWebView
	 * @signature isWebView()
	 * @return {Boolean}
	 *   [en]Will be true if the app is running in Cordova.[/en]
	 *   [ja]Cordovaで実行されている場合にtrueになります。[/ja]
	 * @description
	 *   [en]Returns true if running inside Cordova.[/en]
	 *   [ja]Cordovaで実行されているかどうかを返すメソッドです。[/ja]
	 */
	ons$1.isWebView = ons$1.platform.isWebView;
	
	/**
	 * @method ready
	 * @signature ready(callback)
	 * @description
	 *   [ja]アプリの初期化に利用するメソッドです。渡された関数は、Onsen UIの初期化が終了している時点で必ず呼ばれます。[/ja]
	 *   [en]Method used to wait for app initialization. The callback will not be executed until Onsen UI has been completely initialized.[/en]
	 * @param {Function} callback
	 *   [en]Function that executes after Onsen UI has been initialized.[/en]
	 *   [ja]Onsen UIが初期化が完了した後に呼び出される関数オブジェクトを指定します。[/ja]
	 */
	ons$1.ready = function (callback) {
	  if (ons$1.isReady()) {
	    callback();
	  } else {
	    ons$1._readyLock.waitUnlock(callback);
	  }
	};
	
	/**
	 * @method setDefaultDeviceBackButtonListener
	 * @signature setDefaultDeviceBackButtonListener(listener)
	 * @param {Function} listener
	 *   [en]Function that executes when device back button is pressed.[/en]
	 *   [ja]デバイスのバックボタンが押された時に実行される関数オブジェクトを指定します。[/ja]
	 * @description
	 *   [en]Set default handler for device back button.[/en]
	 *   [ja]デバイスのバックボタンのためのデフォルトのハンドラを設定します。[/ja]
	 */
	ons$1.setDefaultDeviceBackButtonListener = function (listener) {
	  ons$1._defaultDeviceBackButtonHandler.setListener(listener);
	};
	
	/**
	 * @method disableDeviceBackButtonHandler
	 * @signature disableDeviceBackButtonHandler()
	 * @description
	 * [en]Disable device back button event handler.[/en]
	 * [ja]デバイスのバックボタンのイベントを受け付けないようにします。[/ja]
	 */
	ons$1.disableDeviceBackButtonHandler = function () {
	  ons$1._deviceBackButtonDispatcher.disable();
	};
	
	/**
	 * @method enableDeviceBackButtonHandler
	 * @signature enableDeviceBackButtonHandler()
	 * @description
	 * [en]Enable device back button event handler.[/en]
	 * [ja]デバイスのバックボタンのイベントを受け付けるようにします。[/ja]
	 */
	ons$1.enableDeviceBackButtonHandler = function () {
	  ons$1._deviceBackButtonDispatcher.enable();
	};
	
	/**
	 * @method enableAutoStatusBarFill
	 * @signature enableAutoStatusBarFill()
	 * @description
	 *   [en]Enable status bar fill feature on iOS7 and above.[/en]
	 *   [ja]iOS7以上で、ステータスバー部分の高さを自動的に埋める処理を有効にします。[/ja]
	 */
	ons$1.enableAutoStatusBarFill = function () {
	  if (ons$1.isReady()) {
	    throw new Error('This method must be called before ons.isReady() is true.');
	  }
	  ons$1._internal.config.autoStatusBarFill = true;
	};
	
	/**
	 * @method disableAutoStatusBarFill
	 * @signature disableAutoStatusBarFill()
	 * @description
	 *   [en]Disable status bar fill feature on iOS7 and above.[/en]
	 *   [ja]iOS7以上で、ステータスバー部分の高さを自動的に埋める処理を無効にします。[/ja]
	 */
	ons$1.disableAutoStatusBarFill = function () {
	  if (ons$1.isReady()) {
	    throw new Error('This method must be called before ons.isReady() is true.');
	  }
	  ons$1._internal.config.autoStatusBarFill = false;
	};
	
	/**
	 * @method disableAnimations
	 * @signature disableAnimations()
	 * @description
	 *   [en]Disable all animations. Could be handy for testing and older devices.[/en]
	 *   [ja]アニメーションを全て無効にします。テストの際に便利です。[/ja]
	 */
	ons$1.disableAnimations = function () {
	  ons$1._internal.config.animationsDisabled = true;
	};
	
	/**
	 * @method enableAnimations
	 * @signature enableAnimations()
	 * @description
	 *   [en]Enable animations (default).[/en]
	 *   [ja]アニメーションを有効にします。[/ja]
	 */
	ons$1.enableAnimations = function () {
	  ons$1._internal.config.animationsDisabled = false;
	};
	
	ons$1._disableWarnings = function () {
	  ons$1._internal.config.warningsDisabled = true;
	};
	
	ons$1._enableWarnings = function () {
	  ons$1._internal.config.warningsDisabled = false;
	};
	
	/**
	 * @method disableAutoStyling
	 * @signature disableAutoStyling()
	 * @description
	 *   [en]Disable automatic styling.[/en]
	 *   [ja][/ja]
	 */
	ons$1.disableAutoStyling = ons$1._autoStyle.disable;
	
	/**
	 * @method enableAutoStyling
	 * @signature enableAutoStyling()
	 * @description
	 *   [en]Enable automatic styling based on OS (default).[/en]
	 *   [ja][/ja]
	 */
	ons$1.enableAutoStyling = ons$1._autoStyle.enable;
	
	/**
	 * @method forcePlatformStyling
	 * @signature forcePlatformStyling(platform)
	 * @description
	 *   [en]Refresh styling for the given platform.[/en]
	 *   [ja][/ja]
	 * @param {string} platform New platform to style the elements.
	 */
	ons$1.forcePlatformStyling = function (newPlatform) {
	  ons$1.enableAutoStyling();
	  ons$1.platform.select(newPlatform || 'ios');
	
	  ons$1._util.arrayFrom(document.querySelectorAll('*')).forEach(function (element) {
	    if (element.tagName.toLowerCase() === 'ons-if') {
	      element._platformUpdate();
	    } else if (element.tagName.match(/^ons-/i)) {
	      ons$1._autoStyle.prepare(element, true);
	      if (element.tagName.toLowerCase() === 'ons-tabbar') {
	        element._updatePosition();
	      }
	    }
	  });
	};
	
	/**
	 * @param {String} page
	 * @param {Object} [options]
	 * @param {Function} [options.link]
	 * @return {Promise}
	 */
	ons$1._createPopoverOriginal = function (page) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	
	  if (!page) {
	    throw new Error('Page url must be defined.');
	  }
	
	  return ons$1._internal.getPageHTMLAsync(page).then(function (html) {
	    html = html.match(/<ons-popover/gi) ? '<div>' + html + '</div>' : '<ons-popover>' + html + '</ons-popover>';
	    var div = ons$1._util.createElement('<div>' + html + '</div>');
	
	    var popover = div.querySelector('ons-popover');
	    document.body.appendChild(popover);
	
	    if (options.link instanceof Function) {
	      options.link(popover);
	    }
	
	    return popover;
	  });
	};
	
	/**
	 * @method createPopover
	 * @signature createPopover(page, [options])
	 * @param {String} page
	 *   [en]Page name. Can be either an HTML file or an <ons-template> containing a <ons-dialog> component.[/en]
	 *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]
	 * @param {Object} [options]
	 *   [en]Parameter object.[/en]
	 *   [ja]オプションを指定するオブジェクト。[/ja]
	 * @param {Object} [options.parentScope]
	 *   [en]Parent scope of the dialog. Used to bind models and access scope methods from the dialog.[/en]
	 *   [ja]ダイアログ内で利用する親スコープを指定します。ダイアログからモデルやスコープのメソッドにアクセスするのに使います。このパラメータはAngularJSバインディングでのみ利用できます。[/ja]
	 * @return {Promise}
	 *   [en]Promise object that resolves to the popover component object.[/en]
	 *   [ja]ポップオーバーのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]
	 * @description
	 *   [en]Create a popover instance from a template.[/en]
	 *   [ja]テンプレートからポップオーバーのインスタンスを生成します。[/ja]
	 */
	ons$1.createPopover = ons$1._createPopoverOriginal;
	
	/**
	 * @param {String} page
	 * @param {Object} [options]
	 * @param {Function} [options.link]
	 * @return {Promise}
	 */
	ons$1._createDialogOriginal = function (page) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	
	  if (!page) {
	    throw new Error('Page url must be defined.');
	  }
	
	  return ons$1._internal.getPageHTMLAsync(page).then(function (html) {
	    html = html.match(/<ons-dialog/gi) ? '<div>' + html + '</div>' : '<ons-dialog>' + html + '</ons-dialog>';
	    var div = ons$1._util.createElement('<div>' + html + '</div>');
	
	    var dialog = div.querySelector('ons-dialog');
	    document.body.appendChild(dialog);
	
	    if (options.link instanceof Function) {
	      options.link(dialog);
	    }
	
	    return dialog;
	  });
	};
	
	/**
	 * @method createDialog
	 * @signature createDialog(page, [options])
	 * @param {String} page
	 *   [en]Page name. Can be either an HTML file or an <ons-template> containing a <ons-dialog> component.[/en]
	 *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]
	 * @param {Object} [options]
	 *   [en]Parameter object.[/en]
	 *   [ja]オプションを指定するオブジェクト。[/ja]
	 * @return {Promise}
	 *   [en]Promise object that resolves to the dialog component object.[/en]
	 *   [ja]ダイアログのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]
	 * @description
	 *   [en]Create a dialog instance from a template.[/en]
	 *   [ja]テンプレートからダイアログのインスタンスを生成します。[/ja]
	 */
	ons$1.createDialog = ons$1._createDialogOriginal;
	
	/**
	 * @param {String} page
	 * @param {Object} [options]
	 * @param {Function} [options.link]
	 * @return {Promise}
	 */
	ons$1._createAlertDialogOriginal = function (page) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	
	  if (!page) {
	    throw new Error('Page url must be defined.');
	  }
	
	  return ons$1._internal.getPageHTMLAsync(page).then(function (html) {
	    html = html.match(/<ons-alert-dialog/gi) ? '<div>' + html + '</div>' : '<ons-alert-dialog>' + html + '</ons-alert-dialog>';
	    var div = ons$1._util.createElement('<div>' + html + '</div>');
	
	    var alertDialog = div.querySelector('ons-alert-dialog');
	    document.body.appendChild(alertDialog);
	
	    if (options.link instanceof Function) {
	      options.link(alertDialog);
	    }
	
	    return alertDialog;
	  });
	};
	
	/**
	 * @method createAlertDialog
	 * @signature createAlertDialog(page, [options])
	 * @param {String} page
	 *   [en]Page name. Can be either an HTML file or an <ons-template> containing a <ons-alert-dialog> component.[/en]
	 *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]
	 * @param {Object} [options]
	 *   [en]Parameter object.[/en]
	 *   [ja]オプションを指定するオブジェクト。[/ja]
	 * @return {Promise}
	 *   [en]Promise object that resolves to the alert dialog component object.[/en]
	 *   [ja]ダイアログのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]
	 * @description
	 *   [en]Create a alert dialog instance from a template.[/en]
	 *   [ja]テンプレートからアラートダイアログのインスタンスを生成します。[/ja]
	 */
	ons$1.createAlertDialog = ons$1._createAlertDialogOriginal;
	
	/**
	 * @param {String} page
	 * @param {Function} link
	 */
	ons$1._resolveLoadingPlaceholderOriginal = function (page, link) {
	  var elements = ons$1._util.arrayFrom(window.document.querySelectorAll('[ons-loading-placeholder]'));
	
	  if (elements.length > 0) {
	    elements.filter(function (element) {
	      return !element.getAttribute('page');
	    }).forEach(function (element) {
	      element.setAttribute('ons-loading-placeholder', page);
	      ons$1._resolveLoadingPlaceholder(element, page, link);
	    });
	  } else {
	    throw new Error('No ons-loading-placeholder exists.');
	  }
	};
	
	/**
	 * @method resolveLoadingPlaceholder
	 * @signature resolveLoadingPlaceholder(page)
	 * @param {String} page
	 *   [en]Page name. Can be either an HTML file or an <ons-template> element.[/en]
	 *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]
	 * @description
	 *   [en]If no page is defined for the `ons-loading-placeholder` attribute it will wait for this method being called before loading the page.[/en]
	 *   [ja]ons-loading-placeholderの属性値としてページが指定されていない場合は、ページロード前に呼ばれるons.resolveLoadingPlaceholder処理が行われるまで表示されません。[/ja]
	 */
	ons$1.resolveLoadingPlaceholder = ons$1._resolveLoadingPlaceholderOriginal;
	
	ons$1._setupLoadingPlaceHolders = function () {
	  ons$1.ready(function () {
	    var elements = ons$1._util.arrayFrom(window.document.querySelectorAll('[ons-loading-placeholder]'));
	
	    elements.forEach(function (element) {
	      var page = element.getAttribute('ons-loading-placeholder');
	      if (typeof page === 'string') {
	        ons$1._resolveLoadingPlaceholder(element, page);
	      }
	    });
	  });
	};
	
	ons$1._resolveLoadingPlaceholder = function (element, page, link) {
	  link = link || function (element, done) {
	    done();
	  };
	  ons$1._internal.getPageHTMLAsync(page).then(function (html) {
	
	    while (element.firstChild) {
	      element.removeChild(element.firstChild);
	    }
	
	    var contentElement = ons$1._util.createElement('<div>' + html + '</div>');
	    contentElement.style.display = 'none';
	
	    element.appendChild(contentElement);
	
	    link(contentElement, function () {
	      contentElement.style.display = '';
	    });
	  }).catch(function (error) {
	    throw new Error('Unabled to resolve placeholder: ' + error);
	  });
	};
	
	function waitDeviceReady() {
	  var unlockDeviceReady = ons$1._readyLock.lock();
	  window.addEventListener('DOMContentLoaded', function () {
	    if (ons$1.isWebView()) {
	      window.document.addEventListener('deviceready', unlockDeviceReady, false);
	    } else {
	      unlockDeviceReady();
	    }
	  }, false);
	}
	
	window._superSecretOns = ons$1;
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	function getElementClass() {
	  if (typeof HTMLElement !== 'function') {
	    // case of Safari
	    var _BaseElement = function _BaseElement() {};
	    _BaseElement.prototype = document.createElement('div');
	    return _BaseElement;
	  } else {
	    return HTMLElement;
	  }
	}
	
	var BaseElement = function (_getElementClass) {
	  inherits(BaseElement, _getElementClass);
	
	  function BaseElement() {
	    classCallCheck(this, BaseElement);
	
	    var _this = possibleConstructorReturn(this, (BaseElement.__proto__ || Object.getPrototypeOf(BaseElement)).call(this));
	
	    _this.init();
	    return _this;
	  }
	
	  createClass(BaseElement, [{
	    key: 'init',
	    value: function init() {}
	  }]);
	  return BaseElement;
	}(getElementClass());
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @element ons-template
	 * @category util
	 * @description
	 *   [en]
	 *     Define a separate HTML fragment and use as a template.
	 *
	 *     These templates can be loaded as pages in `<ons-navigator>`, `<ons-tabbar>` and `<ons-splitter>`. They can also be used to generate dialogs.
	 *   [/en]
	 *   [ja]テンプレートとして使用するためのHTMLフラグメントを定義します。この要素でHTMLを宣言すると、id属性に指定した名前をpageのURLとしてons-navigatorなどのコンポーネントから参照できます。[/ja]
	 * @guide templates
	 *   [en]Defining multiple pages in single html[/en]
	 *   [ja]複数のページを1つのHTMLに記述する[/ja]
	 * @seealso ons-navigator
	 *   [en]The `<ons-navigator>` component enables stack based navigation.[/en]
	 *   [ja][/ja]
	 * @seealso ons-tabbar
	 *   [en]The `<ons-tabbar>` component is used to add tab navigation.[/en]
	 *   [ja][/ja]
	 * @seealso ons-splitter
	 *   [en]The `<ons-splitter>` component can be used to create a draggable menu or column based layout.[/en]
	 *   [ja][/ja]
	 * @example
	 * <ons-template id="foobar.html">
	 *   <ons-page>
	 *     Page content
	 *   </ons-page>
	 * </ons-template>
	 *
	 * <ons-navigator page="foobar.html">
	 * </ons-navigator>
	 */
	
	var TemplateElement = function (_BaseElement) {
	  inherits(TemplateElement, _BaseElement);
	
	  function TemplateElement() {
	    classCallCheck(this, TemplateElement);
	    return possibleConstructorReturn(this, (TemplateElement.__proto__ || Object.getPrototypeOf(TemplateElement)).apply(this, arguments));
	  }
	
	  createClass(TemplateElement, [{
	    key: 'init',
	
	
	    /**
	     * @property template
	     * @type {String}
	     * @description
	     *  [en]Template content. This property can not be used with AngularJS bindings.[/en]
	     *  [ja][/ja]
	     */
	
	    value: function init() {
	      this.template = this.innerHTML;
	
	      while (this.firstChild) {
	        this.removeChild(this.firstChild);
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      if (this.parentNode) {
	        // Note: this.parentNode is not set in some CE0/CE1 polyfills.
	        // Show warning when the ons-template is not located just under document.body
	        if (this.parentNode !== document.body) {
	          // if the parent is not document.body
	          util.warn('ons-template (id = ' + this.getAttribute('id') + ') must be located just under document.body' + (this.parentNode.outerHTML ? ':\n\n' + this.parentNode.outerHTML : '.'));
	        }
	      }
	
	      var event = new CustomEvent('_templateloaded', { bubbles: true, cancelable: true });
	      event.template = this.template;
	      event.templateId = this.getAttribute('id');
	
	      this.dispatchEvent(event);
	    }
	  }]);
	  return TemplateElement;
	}(BaseElement);
	
	customElements.define('ons-template', TemplateElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @element ons-if
	 * @category conditional
	 * @tutorial vanilla/Reference/if
	 * @description
	 *   [en]
	 *     Conditionally display content depending on the platform, device orientation or both.
	 *
	 *     Sometimes it is useful to conditionally hide or show certain components based on platform. When running on iOS the `<ons-if>` element can be used to hide the `<ons-fab>` element.
	 *   [/en]
	 *   [ja][/ja]
	 * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]
	 * @example
	 * <ons-page>
	 *   <ons-if orientation="landscape">
	 *     Landscape view!
	 *   </ons-if>
	 *   <ons-if platform="android">
	 *     This is Android.
	 *   </ons-if>
	 *   <ons-if platform="ios other">
	 *     This is not Android.
	 *   </ons-if>
	 * </ons-page>
	 */
	
	var IfElement = function (_BaseElement) {
	  inherits(IfElement, _BaseElement);
	
	  function IfElement() {
	    classCallCheck(this, IfElement);
	    return possibleConstructorReturn(this, (IfElement.__proto__ || Object.getPrototypeOf(IfElement)).apply(this, arguments));
	  }
	
	  createClass(IfElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute platform
	     * @initonly
	     * @type {string}
	     * @description
	     *  [en]Space-separated platform names. Possible values are `"ios"`, `"android"`, `"windows"` and `"other"`.[/en]
	     *  [ja][/ja]
	     */
	
	    /**
	     * @attribute orientation
	     * @type {string}
	     * @description
	     *  [en]Either `"portrait"` or `"landscape"`.[/en]
	     *  [ja]portraitもしくはlandscapeを指定します[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        if (platform._renderPlatform !== null) {
	          _this2._platformUpdate();
	        } else if (!_this2._isAllowedPlatform()) {
	          while (_this2.childNodes[0]) {
	            _this2.childNodes[0].remove();
	          }
	          _this2._platformUpdate();
	        }
	      });
	
	      this._onOrientationChange();
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      orientation.on('change', this._onOrientationChange.bind(this));
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name) {
	      if (name === 'orientation') {
	        this._onOrientationChange();
	      }
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      orientation.off('change', this._onOrientationChange);
	    }
	  }, {
	    key: '_platformUpdate',
	    value: function _platformUpdate() {
	      this.style.display = this._isAllowedPlatform() ? '' : 'none';
	    }
	  }, {
	    key: '_isAllowedPlatform',
	    value: function _isAllowedPlatform() {
	      return !this.getAttribute('platform') || this.getAttribute('platform').split(/\s+/).indexOf(platform.getMobileOS()) >= 0;
	    }
	  }, {
	    key: '_onOrientationChange',
	    value: function _onOrientationChange() {
	      if (this.hasAttribute('orientation') && this._isAllowedPlatform()) {
	        var conditionalOrientation = this.getAttribute('orientation').toLowerCase();
	        var currentOrientation = orientation.isPortrait() ? 'portrait' : 'landscape';
	
	        this.style.display = conditionalOrientation === currentOrientation ? '' : 'none';
	      }
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['orientation'];
	    }
	  }]);
	  return IfElement;
	}(BaseElement);
	
	customElements.define('ons-if', IfElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var AlertDialogAnimator = function (_BaseAnimator) {
	  inherits(AlertDialogAnimator, _BaseAnimator);
	
	  function AlertDialogAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'linear' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.2 : _ref$duration;
	
	    classCallCheck(this, AlertDialogAnimator);
	    return possibleConstructorReturn(this, (AlertDialogAnimator.__proto__ || Object.getPrototypeOf(AlertDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	  }
	
	  /**
	   * @param {HTMLElement} dialog
	   * @param {Function} done
	   */
	
	
	  createClass(AlertDialogAnimator, [{
	    key: 'show',
	    value: function show(dialog, done) {
	      done();
	    }
	
	    /**
	     * @param {HTMLElement} dialog
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(dialog, done) {
	      done();
	    }
	  }]);
	  return AlertDialogAnimator;
	}(BaseAnimator);
	
	/**
	 * Android style animator for alert dialog.
	 */
	var AndroidAlertDialogAnimator = function (_AlertDialogAnimator) {
	  inherits(AndroidAlertDialogAnimator, _AlertDialogAnimator);
	
	  function AndroidAlertDialogAnimator() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref2$timing = _ref2.timing,
	        timing = _ref2$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref2$timing,
	        _ref2$duration = _ref2.duration,
	        duration = _ref2$duration === undefined ? 0.2 : _ref2$duration,
	        _ref2$delay = _ref2.delay,
	        delay = _ref2$delay === undefined ? 0 : _ref2$delay;
	
	    classCallCheck(this, AndroidAlertDialogAnimator);
	    return possibleConstructorReturn(this, (AndroidAlertDialogAnimator.__proto__ || Object.getPrototypeOf(AndroidAlertDialogAnimator)).call(this, { duration: duration, timing: timing, delay: delay }));
	  }
	
	  /**
	   * @param {Object} dialog
	   * @param {Function} callback
	   */
	
	
	  createClass(AndroidAlertDialogAnimator, [{
	    key: 'show',
	    value: function show(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 0
	      }).wait(this.delay).queue({
	        opacity: 1.0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0) scale3d(0.9, 0.9, 1.0)',
	          opacity: 0.0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0) scale3d(1.0, 1.0, 1.0)',
	          opacity: 1.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	
	    /**
	     * @param {Object} dialog
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 1.0
	      }).wait(this.delay).queue({
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0) scale3d(1.0, 1.0, 1.0)',
	          opacity: 1.0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0) scale3d(0.9, 0.9, 1.0)',
	          opacity: 0.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	  }]);
	  return AndroidAlertDialogAnimator;
	}(AlertDialogAnimator);
	
	/**
	 * iOS style animator for alert dialog.
	 */
	var IOSAlertDialogAnimator = function (_AlertDialogAnimator2) {
	  inherits(IOSAlertDialogAnimator, _AlertDialogAnimator2);
	
	  function IOSAlertDialogAnimator() {
	    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref3$timing = _ref3.timing,
	        timing = _ref3$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref3$timing,
	        _ref3$duration = _ref3.duration,
	        duration = _ref3$duration === undefined ? 0.2 : _ref3$duration,
	        _ref3$delay = _ref3.delay,
	        delay = _ref3$delay === undefined ? 0 : _ref3$delay;
	
	    classCallCheck(this, IOSAlertDialogAnimator);
	    return possibleConstructorReturn(this, (IOSAlertDialogAnimator.__proto__ || Object.getPrototypeOf(IOSAlertDialogAnimator)).call(this, { duration: duration, timing: timing, delay: delay }));
	  }
	
	  /*
	   * @param {Object} dialog
	   * @param {Function} callback
	   */
	
	
	  createClass(IOSAlertDialogAnimator, [{
	    key: 'show',
	    value: function show(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 0
	      }).wait(this.delay).queue({
	        opacity: 1.0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0) scale3d(1.3, 1.3, 1.0)',
	          opacity: 0.0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0) scale3d(1.0, 1.0, 1.0)',
	          opacity: 1.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	
	    /**
	     * @param {Object} dialog
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 1.0
	      }).wait(this.delay).queue({
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          opacity: 1.0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          opacity: 0.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	  }]);
	  return IOSAlertDialogAnimator;
	}(AlertDialogAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var BaseDialogElement = function (_BaseElement) {
	  inherits(BaseDialogElement, _BaseElement);
	
	  function BaseDialogElement() {
	    classCallCheck(this, BaseDialogElement);
	    return possibleConstructorReturn(this, (BaseDialogElement.__proto__ || Object.getPrototypeOf(BaseDialogElement)).apply(this, arguments));
	  }
	
	  createClass(BaseDialogElement, [{
	    key: '_updateAnimatorFactory',
	    value: function _updateAnimatorFactory() {
	      throw new Error('_updateAnimatorFactory method must be implemented.');
	    }
	  }, {
	    key: '_toggleStyle',
	    value: function _toggleStyle(shouldShow) {
	      this.style.display = shouldShow ? 'block' : 'none';
	    }
	  }, {
	    key: 'init',
	    value: function init() {
	      var _this2 = this;
	
	      this._visible = false;
	      this._doorLock = new DoorLock();
	      this._boundCancel = function () {
	        return _this2._cancel();
	      };
	      this._selfCamelName = util.camelize(this.tagName.slice(4));
	      this._defaultDBB = function (e) {
	        return _this2.cancelable ? _this2._cancel() : e.callParentHandler();
	      };
	      this._animatorFactory = this._updateAnimatorFactory();
	    }
	  }, {
	    key: '_cancel',
	    value: function _cancel() {
	      var _this3 = this;
	
	      if (this.cancelable && !this._running) {
	        this._running = true;
	        this.hide().then(function () {
	          _this3._running = false;
	          util.triggerElementEvent(_this3, 'dialog-cancel');
	        }, function () {
	          return _this3._running = false;
	        });
	      }
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      return this._setVisible.apply(this, [true].concat(args));
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }
	
	      return this._setVisible.apply(this, [false].concat(args));
	    }
	  }, {
	    key: 'toggle',
	    value: function toggle() {
	      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	        args[_key3] = arguments[_key3];
	      }
	
	      return this._setVisible.apply(this, [!this.visible].concat(args));
	    }
	  }, {
	    key: '_setVisible',
	    value: function _setVisible(shouldShow) {
	      var _util$triggerElementE,
	          _this4 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var action = shouldShow ? 'show' : 'hide';
	
	      options = _extends({}, options);
	      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));
	
	      var canceled = false;
	      util.triggerElementEvent(this, 'pre' + action, (_util$triggerElementE = {}, defineProperty$1(_util$triggerElementE, this._selfCamelName, this), defineProperty$1(_util$triggerElementE, 'cancel', function cancel() {
	        return canceled = true;
	      }), _util$triggerElementE));
	
	      if (canceled) {
	        return Promise.reject('Canceled in pre' + action + ' event.');
	      }
	
	      return new Promise(function (resolve) {
	        _this4._doorLock.waitUnlock(function () {
	          var unlock = _this4._doorLock.lock();
	          var animator = _this4._animatorFactory.newAnimator(options);
	
	          shouldShow && _this4._toggleStyle(true, options);
	
	          contentReady(_this4, function () {
	            animator[action](_this4, function () {
	              !shouldShow && _this4._toggleStyle(false, options);
	              _this4._visible = shouldShow;
	
	              unlock();
	
	              util.propagateAction(_this4, '_' + action);
	              util.triggerElementEvent(_this4, 'post' + action, defineProperty$1({}, _this4._selfCamelName, _this4)); // postshow posthide
	
	              if (options.callback instanceof Function) {
	                options.callback(_this4);
	              }
	
	              resolve(_this4);
	            });
	          });
	        });
	      });
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this5 = this;
	
	      this.onDeviceBackButton = this._defaultDBB.bind(this);
	
	      contentReady(this, function () {
	        _this5._mask && _this5._mask.addEventListener('click', _this5._boundCancel, false);
	      });
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this._backButtonHandler.destroy();
	      this._backButtonHandler = null;
	
	      this._mask && this._mask.removeEventListener('click', this._boundCancel.bind(this), false);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'modifier') {
	        ModifierUtil.onModifierChanged(last, current, this, this._scheme);
	      } else if (name === 'animation') {
	        this._animatorFactory = this._updateAnimatorFactory();
	      }
	    }
	  }, {
	    key: '_scheme',
	    get: function get() {
	      throw new Error('_scheme getter must be implemented.');
	    }
	  }, {
	    key: 'onDeviceBackButton',
	    get: function get() {
	      return this._backButtonHandler;
	    },
	    set: function set(callback) {
	      if (this._backButtonHandler) {
	        this._backButtonHandler.destroy();
	      }
	
	      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);
	    }
	  }, {
	    key: 'visible',
	    get: function get() {
	      return this._visible;
	    }
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	  }, {
	    key: 'cancelable',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'cancelable', value);
	    },
	    get: function get() {
	      return this.hasAttribute('cancelable');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'animation'];
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['preshow', 'postshow', 'prehide', 'posthide', 'dialog-cancel'];
	    }
	  }]);
	  return BaseDialogElement;
	}(BaseElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme = {
	  '.alert-dialog': 'alert-dialog--*',
	  '.alert-dialog-container': 'alert-dialog-container--*',
	  '.alert-dialog-title': 'alert-dialog-title--*',
	  '.alert-dialog-content': 'alert-dialog-content--*',
	  '.alert-dialog-footer': 'alert-dialog-footer--*',
	  '.alert-dialog-button': 'alert-dialog-button--*',
	  '.alert-dialog-footer--rowfooter': 'alert-dialog-footer--rowfooter--*',
	  '.alert-dialog-button--rowfooter': 'alert-dialog-button--rowfooter--*',
	  '.alert-dialog-button--primal': 'alert-dialog-button--primal--*',
	  '.alert-dialog-mask': 'alert-dialog-mask--*',
	  '.text-input': 'text-input--*'
	};
	
	var _animatorDict = {
	  'none': AlertDialogAnimator,
	  'default': function _default() {
	    return platform.isAndroid() ? AndroidAlertDialogAnimator : IOSAlertDialogAnimator;
	  },
	  'fade': function fade() {
	    return platform.isAndroid() ? AndroidAlertDialogAnimator : IOSAlertDialogAnimator;
	  }
	};
	
	/**
	 * @element ons-alert-dialog
	 * @category dialog
	 * @description
	 *   [en]
	 *     Alert dialog that is displayed on top of the current screen. Useful for displaying questions, warnings or error messages to the user. The title, content and buttons can be easily customized and it will automatically switch style based on the platform.
	 *
	 *     To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createAlertDialog(template)` utility function and the `<ons-template>` tag.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen Qwwxyp
	 * @tutorial vanilla/Reference/dialog
	 * @modifier material
	 *   [en]Material Design style[/en]
	 *   [ja][/ja]
	 * @modifier rowfooter
	 *   [en]Horizontally aligns the footer buttons.[/en]
	 *   [ja][/ja]
	 * @guide dialogs
	 *   [en]Dialog components[/en]
	 *   [ja]Dialog components[/ja]
	 * @seealso ons-dialog
	 *   [en]ons-dialog component[/en]
	 *   [ja]ons-dialogコンポーネント[/ja]
	 * @seealso ons-popover
	 *   [en]ons-popover component[/en]
	 *   [ja]ons-dialogコンポーネント[/ja]
	 * @seealso ons.notification
	 *   [en]Using ons.notification utility functions.[/en]
	 *   [ja]アラートダイアログを表示するには、ons.notificationオブジェクトのメソッドを使うこともできます。[/ja]
	 * @example
	 * <ons-alert-dialog id="alert-dialog">
	 *   <div class="alert-dialog-title">Warning!</div>
	 *   <div class="alert-dialog-content">
	 *     An error has occurred!
	 *   </div>
	 *   <div class="alert-dialog-footer">
	 *     <button id="alert-dialog-button" class="alert-dialog-button">OK</button>
	 *   </div>
	 * </ons-alert-dialog>
	 * <script>
	 *   document.getElementById('alert-dialog').show();
	 * </script>
	 */
	
	var AlertDialogElement = function (_BaseDialogElement) {
	  inherits(AlertDialogElement, _BaseDialogElement);
	
	  function AlertDialogElement() {
	    classCallCheck(this, AlertDialogElement);
	    return possibleConstructorReturn(this, (AlertDialogElement.__proto__ || Object.getPrototypeOf(AlertDialogElement)).apply(this, arguments));
	  }
	
	  createClass(AlertDialogElement, [{
	    key: 'init',
	
	
	    /**
	     * @event preshow
	     * @description
	     *   [en]Fired just before the alert dialog is displayed.[/en]
	     *   [ja]アラートダイアログが表示される直前に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.alertDialog
	     *   [en]Alert dialog object.[/en]
	     *   [ja]アラートダイアログのオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Execute to stop the dialog from showing.[/en]
	     *   [ja]この関数を実行すると、アラートダイアログの表示を止めます。[/ja]
	     */
	
	    /**
	     * @event postshow
	     * @description
	     *   [en]Fired just after the alert dialog is displayed.[/en]
	     *   [ja]アラートダイアログが表示された直後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.alertDialog
	     *   [en]Alert dialog object.[/en]
	     *   [ja]アラートダイアログのオブジェクト。[/ja]
	     */
	
	    /**
	     * @event prehide
	     * @description
	     *   [en]Fired just before the alert dialog is hidden.[/en]
	     *   [ja]アラートダイアログが隠れる直前に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.alertDialog
	     *   [en]Alert dialog object.[/en]
	     *   [ja]アラートダイアログのオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Execute to stop the dialog from hiding.[/en]
	     *   [ja]この関数を実行すると、アラートダイアログが閉じようとするのを止めます。[/ja]
	     */
	
	    /**
	     * @event posthide
	     * @description
	     * [en]Fired just after the alert dialog is hidden.[/en]
	     * [ja]アラートダイアログが隠れた後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.alertDialog
	     *   [en]Alert dialog object.[/en]
	     *   [ja]アラートダイアログのオブジェクト。[/ja]
	     */
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *  [en]The appearance of the dialog.[/en]
	     *  [ja]ダイアログの見た目を指定します。[/ja]
	     */
	
	    /**
	     * @attribute cancelable
	     * @description
	     *  [en]If this attribute is set the dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]
	     *  [ja][/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *  [en]If this attribute is set the dialog is disabled.[/en]
	     *  [ja]この属性がある時、アラートダイアログはdisabled状態になります。[/ja]
	     */
	
	    /**
	     * @attribute animation
	     * @type {String}
	     * @default default
	     * @description
	     *  [en]The animation used when showing and hiding the dialog. Can be either `"none"` or `"default"`.[/en]
	     *  [ja]ダイアログを表示する際のアニメーション名を指定します。デフォルトでは"none"か"default"が指定できます。[/ja]
	     */
	
	    /**
	     * @attribute animation-options
	     * @type {Expression}
	     * @description
	     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]
	     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。例：{duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]
	     */
	
	    /**
	     * @attribute mask-color
	     * @type {String}
	     * @default rgba(0, 0, 0, 0.2)
	     * @description
	     *  [en]Color of the background mask. Default is "rgba(0, 0, 0, 0.2)".[/en]
	     *  [ja]背景のマスクの色を指定します。"rgba(0, 0, 0, 0.2)"がデフォルト値です。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      get$1(AlertDialogElement.prototype.__proto__ || Object.getPrototypeOf(AlertDialogElement.prototype), 'init', this).call(this);
	      contentReady(this, function () {
	        return _this2._compile();
	      });
	    }
	  }, {
	    key: '_updateAnimatorFactory',
	    value: function _updateAnimatorFactory() {
	      return new AnimatorFactory({
	        animators: _animatorDict,
	        baseClass: AlertDialogAnimator,
	        baseClassName: 'AlertDialogAnimator',
	        defaultAnimation: this.getAttribute('animation')
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      this.style.display = 'none';
	      this.style.zIndex = 10001;
	
	      /**
	       * Expected result after compile:
	       *
	       * <ons-alert-dialog style="none">
	       *   <div class="alert-dialog-mask"></div>
	       *   <div class="alert-dialog">
	       *     <div class="alert-dialog-container">...</div>
	       *   </div>
	       * </ons-alert-dialog>
	       */
	
	      var content = document.createDocumentFragment();
	
	      if (!this._mask && !this._dialog) {
	        while (this.firstChild) {
	          content.appendChild(this.firstChild);
	        }
	      }
	
	      if (!this._mask) {
	        var mask = document.createElement('div');
	        mask.classList.add('alert-dialog-mask');
	        this.insertBefore(mask, this.children[0]);
	      }
	
	      if (!this._dialog) {
	        var dialog = document.createElement('div');
	        dialog.classList.add('alert-dialog');
	        this.insertBefore(dialog, null);
	      }
	
	      if (!util.findChild(this._dialog, '.alert-dialog-container')) {
	        var container = document.createElement('div');
	        container.classList.add('alert-dialog-container');
	        this._dialog.appendChild(container);
	      }
	
	      this._dialog.children[0].appendChild(content);
	
	      this._dialog.style.zIndex = 20001;
	      this._mask.style.zIndex = 20000;
	
	      if (this.getAttribute('mask-color')) {
	        this._mask.style.backgroundColor = this.getAttribute('mask-color');
	      }
	
	      ModifierUtil.initModifier(this, this._scheme);
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	    /**
	     * @property cancelable
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the dialog is cancelable or not. A cancelable dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @method show
	     * @signature show([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクトです。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name. Available animations are `"fade"` and `"none"`.[/en]
	     *   [ja]アニメーション名を指定します。指定できるのは、"fade", "none"のいずれかです。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]
	     * @param {Function} [options.callback]
	     *   [en]Function to execute after the dialog has been revealed.[/en]
	     *   [ja]ダイアログが表示され終わった時に呼び出されるコールバックを指定します。[/ja]
	     * @description
	     *   [en]Show the alert dialog.[/en]
	     *   [ja]ダイアログを表示します。[/ja]
	     * @return {Promise}
	     *   [en]A `Promise` object that resolves to the displayed element.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @method hide
	     * @signature hide([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name. Available animations are `"fade"` and `"none"`.[/en]
	     *   [ja]アニメーション名を指定します。"fade", "none"のいずれかを指定します。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]
	     * @param {Function} [options.callback]
	     *   [en]Function to execute after the dialog has been hidden.[/en]
	     *   [ja]このダイアログが閉じた時に呼び出されるコールバックを指定します。[/ja]
	     * @description
	     *   [en]Hide the alert dialog.[/en]
	     *   [ja]ダイアログを閉じます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the hidden element[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @property visible
	     * @readonly
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the dialog is visible or not.[/en]
	     *   [ja]要素が見える場合に`true`。[/ja]
	     */
	
	    /**
	     * @property onDeviceBackButton
	     * @type {Object}
	     * @description
	     *   [en]Back-button handler.[/en]
	     *   [ja]バックボタンハンドラ。[/ja]
	     */
	
	    /**
	     * @param {String} name
	     * @param {DialogAnimator} Animator
	     */
	
	  }, {
	    key: '_scheme',
	    get: function get() {
	      return scheme;
	    }
	
	    /**
	     * @return {Element}
	     */
	
	  }, {
	    key: '_mask',
	    get: function get() {
	      return util.findChild(this, '.alert-dialog-mask');
	    }
	
	    /**
	     * @return {Element}
	     */
	
	  }, {
	    key: '_dialog',
	    get: function get() {
	      return util.findChild(this, '.alert-dialog');
	    }
	
	    /**
	     * @return {Element}
	     */
	
	  }, {
	    key: '_titleElement',
	    get: function get() {
	      return util.findChild(this._dialog.children[0], '.alert-dialog-title');
	    }
	
	    /**
	     * @return {Element}
	     */
	
	  }, {
	    key: '_contentElement',
	    get: function get() {
	      return util.findChild(this._dialog.children[0], '.alert-dialog-content');
	    }
	  }], [{
	    key: 'registerAnimator',
	    value: function registerAnimator(name, Animator) {
	      if (!(Animator.prototype instanceof AlertDialogAnimator)) {
	        throw new Error('"Animator" param must inherit OnsAlertDialogElement.AlertDialogAnimator');
	      }
	      _animatorDict[name] = Animator;
	    }
	  }, {
	    key: 'animators',
	    get: function get() {
	      return _animatorDict;
	    }
	  }, {
	    key: 'AlertDialogAnimator',
	    get: function get() {
	      return AlertDialogAnimator;
	    }
	  }]);
	  return AlertDialogElement;
	}(BaseDialogElement);
	
	customElements.define('ons-alert-dialog', AlertDialogElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName = 'back-button';
	
	var scheme$1 = {
	  '': 'back-button--*',
	  '.back-button__icon': 'back-button--*__icon',
	  '.back-button__label': 'back-button--*__label'
	};
	
	/**
	 * @element ons-back-button
	 * @category navigation
	 * @description
	 *   [en]
	 *     Back button component for `<ons-toolbar>`. Put it in the left part of the `<ons-toolbar>`.
	 *
	 *     It will find the parent `<ons-navigator>` element and pop a page when clicked. This behavior can be overriden by specifying the `onClick` property.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen aHmGL
	 * @tutorial vanilla/Reference/navigator
	 * @modifier material
	 *   [en]Material Design style[/en]
	 *   [ja][/ja]
	 * @seealso ons-toolbar
	 *   [en]ons-toolbar component[/en]
	 *   [ja]ons-toolbarコンポーネント[/ja]
	 * @seealso ons-navigator
	 *   [en]ons-navigator component[/en]
	 *   [ja]ons-navigatorコンポーネント[/ja]
	 * @example
	 * <ons-toolbar>
	 *   <div class="left">
	 *     <ons-back-button>Back</ons-back-button>
	 *   </div>
	 *   <div class="center">
	 *     Title
	 *   <div>
	 * </ons-toolbar>
	 */
	
	var BackButtonElement = function (_BaseElement) {
	  inherits(BackButtonElement, _BaseElement);
	
	  function BackButtonElement() {
	    classCallCheck(this, BackButtonElement);
	    return possibleConstructorReturn(this, (BackButtonElement.__proto__ || Object.getPrototypeOf(BackButtonElement)).apply(this, arguments));
	  }
	
	  createClass(BackButtonElement, [{
	    key: 'init',
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *  [en]The appearance of the back button.[/en]
	     *  [ja]バックボタンの見た目を指定します。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        _this2._compile();
	      });
	
	      this._options = {};
	      this._boundOnClick = this._onClick.bind(this);
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      this.classList.add(defaultClassName);
	
	      if (!util.findChild(this, '.back-button__label')) {
	        var label = util.create('span.back-button__label');
	
	        while (this.childNodes[0]) {
	          label.appendChild(this.childNodes[0]);
	        }
	        this.appendChild(label);
	      }
	
	      if (!util.findChild(this, '.back-button__icon')) {
	        var icon = util.create('span.back-button__icon');
	
	        this.insertBefore(icon, this.children[0]);
	      }
	
	      ModifierUtil.initModifier(this, scheme$1);
	    }
	
	    /**
	     * @property options
	     * @type {Object}
	     * @description
	     *   [en]Options object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     */
	
	    /**
	     * @property options.animation
	     * @type {String}
	     * @description
	     *   [en]Animation name. Available animations are "slide", "lift", "fade" and "none".
	     *     These are platform based animations. For fixed animations, add "-ios" or "-md"
	     *     suffix to the animation name. E.g. "lift-ios", "lift-md". Defaults values are "slide-ios" and "fade-md".
	     *   [/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @property options.animationOptions
	     * @type {String}
	     * @description
	     *   [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]
	     */
	
	    /**
	     * @property options.callback
	     * @type {String}
	     * @description
	     *   [en]Function that is called when the transition has ended.[/en]
	     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]
	     */
	
	    /**
	     * @property options.refresh
	     * @description
	     *   [en]The previous page will be refreshed (destroyed and created again) before popPage action.[/en]
	     *   [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]
	     */
	
	  }, {
	    key: '_onClick',
	
	
	    /**
	     * @property onClick
	     * @type {Function}
	     * @description
	     *   [en]Used to override the default back button behavior.[/en]
	     *   [ja][/ja]
	     */
	    value: function _onClick() {
	      if (this.onClick) {
	        this.onClick.apply(this);
	      } else {
	        var navigator = util.findParent(this, 'ons-navigator');
	        if (navigator) {
	          navigator.popPage(this.options);
	        }
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this.addEventListener('click', this._boundOnClick, false);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName)) {
	            this.className = defaultClassName + ' ' + current;
	          }
	          break;
	
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$1);
	          break;
	      }
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this.removeEventListener('click', this._boundOnClick, false);
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this.style.display = 'inline-block';
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this.style.display = 'none';
	    }
	  }, {
	    key: 'options',
	    get: function get() {
	      return this._options;
	    },
	    set: function set(object) {
	      this._options = object;
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class'];
	    }
	  }]);
	  return BackButtonElement;
	}(BaseElement);
	
	customElements.define('ons-back-button', BackButtonElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$1 = 'bottom-bar';
	var scheme$2 = { '': 'bottom-bar--*' };
	
	/**
	 * @element ons-bottom-toolbar
	 * @category page
	 * @description
	 *   [en]Toolbar component that is positioned at the bottom of the page.[/en]
	 *   [ja]ページ下部に配置されるツールバー用コンポーネントです。[/ja]
	 * @modifier transparent
	 *   [en]Make the toolbar transparent.[/en]
	 *   [ja]ツールバーの背景を透明にして表示します。[/ja]
	 * @seealso ons-toolbar [en]ons-toolbar component[/en][ja]ons-toolbarコンポーネント[/ja]
	 * @example
	 * <ons-bottom-toolbar>
	 *   Content
	 * </ons-bottom-toolbar>
	 */
	
	var BottomToolbarElement = function (_BaseElement) {
	  inherits(BottomToolbarElement, _BaseElement);
	
	  function BottomToolbarElement() {
	    classCallCheck(this, BottomToolbarElement);
	    return possibleConstructorReturn(this, (BottomToolbarElement.__proto__ || Object.getPrototypeOf(BottomToolbarElement)).apply(this, arguments));
	  }
	
	  createClass(BottomToolbarElement, [{
	    key: 'init',
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]The appearance of the toolbar.[/en]
	     *   [ja]ツールバーの見た目の表現を指定します。[/ja]
	     */
	
	    value: function init() {
	      this.classList.add(defaultClassName$1);
	      ModifierUtil.initModifier(this, scheme$2);
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      if (util.match(this.parentNode, 'ons-page')) {
	        this.parentNode.classList.add('page-with-bottom-toolbar');
	      }
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$1)) {
	            this.className = defaultClassName$1 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$2);
	          break;
	      }
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class'];
	    }
	  }]);
	  return BottomToolbarElement;
	}(BaseElement);
	
	customElements.define('ons-bottom-toolbar', BottomToolbarElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$3 = { '': 'button--*' };
	
	var defaultClassName$2 = 'button';
	
	/**
	 * @element ons-button
	 * @category form
	 * @modifier outline
	 *   [en]Button with outline and transparent background[/en]
	 *   [ja]アウトラインを持ったボタンを表示します。[/ja]
	 * @modifier light
	 *   [en]Button that doesn't stand out.[/en]
	 *   [ja]目立たないボタンを表示します。[/ja]
	 * @modifier quiet
	 *   [en]Button with no outline and or background..[/en]
	 *   [ja]枠線や背景が無い文字だけのボタンを表示します。[/ja]
	 * @modifier cta
	 *   [en]Button that really stands out.[/en]
	 *   [ja]目立つボタンを表示します。[/ja]
	 * @modifier large
	 *   [en]Large button that covers the width of the screen.[/en]
	 *   [ja]横いっぱいに広がる大きなボタンを表示します。[/ja]
	 * @modifier large--quiet
	 *   [en]Large quiet button.[/en]
	 *   [ja]横いっぱいに広がるquietボタンを表示します。[/ja]
	 * @modifier large--cta
	 *   [en]Large call to action button.[/en]
	 *   [ja]横いっぱいに広がるctaボタンを表示します。[/ja]
	 * @modifier material
	 *   [en]Material Design button[/en]
	 *   [ja]マテリアルデザインのボタン[/ja]
	 * @modifier material--flat
	 *   [en]Material Design flat button[/en]
	 *   [ja]マテリアルデザインのフラットボタン[/ja]
	 * @description
	 *   [en]
	 *     Button component. If you want to place a button in a toolbar, use `<ons-toolbar-button>` or `<ons-back-button>` instead.
	 *
	 *     Will automatically display as a Material Design button with a ripple effect on Android.
	 *   [/en]
	 *   [ja]ボタン用コンポーネント。ツールバーにボタンを設置する場合は、ons-toolbar-buttonもしくはons-back-buttonコンポーネントを使用します。[/ja]
	 * @codepen hLayx
	 * @tutorial vanilla/Reference/button
	 * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]
	 * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]
	 * @example
	 * <ons-button modifier="large--cta">
	 *   Tap Me
	 * </ons-button>
	 */
	
	var ButtonElement = function (_BaseElement) {
	  inherits(ButtonElement, _BaseElement);
	
	  function ButtonElement() {
	    classCallCheck(this, ButtonElement);
	    return possibleConstructorReturn(this, (ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)).apply(this, arguments));
	  }
	
	  createClass(ButtonElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *  [en]The appearance of the button.[/en]
	     *  [ja]ボタンの表現を指定します。[/ja]
	     */
	
	    /**
	     * @attribute ripple
	     * @description
	     *  [en]If this attribute is defined, the button will have a ripple effect.[/en]
	     *  [ja][/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *   [en]Specify if button should be disabled.[/en]
	     *   [ja]ボタンを無効化する場合は指定します。[/ja]
	     */
	
	    value: function init() {
	      this._compile();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$2)) {
	            this.className = defaultClassName$2 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$3);
	          break;
	        case 'ripple':
	          this._updateRipple();
	      }
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the button is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      this.classList.add(defaultClassName$2);
	
	      this._updateRipple();
	
	      ModifierUtil.initModifier(this, scheme$3);
	    }
	  }, {
	    key: '_updateRipple',
	    value: function _updateRipple() {
	      util.updateRipple(this);
	    }
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'ripple', 'class'];
	    }
	  }]);
	  return ButtonElement;
	}(BaseElement);
	
	customElements.define('ons-button', ButtonElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$4 = { '': 'carousel-item--*' };
	
	/**
	 * @element ons-carousel-item
	 * @category carousel
	 * @description
	 *   [en]
	 *     Carousel item component. Used as a child of the `<ons-carousel>` element.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen xbbzOQ
	 * @tutorial vanilla/Reference/carousel
	 * @seealso ons-carousel
	 *   [en]`<ons-carousel>` components[/en]
	 *   [ja]<ons-carousel>コンポーネント[/ja]
	 * @example
	 * <ons-carousel style="width: 100%; height: 200px">
	 *   <ons-carousel-item>
	 *    ...
	 *   </ons-carousel-item>
	 *   <ons-carousel-item>
	 *    ...
	 *   </ons-carousel-item>
	 * </ons-carousel>
	 */
	
	var CarouselItemElement = function (_BaseElement) {
	  inherits(CarouselItemElement, _BaseElement);
	
	  function CarouselItemElement() {
	    classCallCheck(this, CarouselItemElement);
	    return possibleConstructorReturn(this, (CarouselItemElement.__proto__ || Object.getPrototypeOf(CarouselItemElement)).apply(this, arguments));
	  }
	
	  createClass(CarouselItemElement, [{
	    key: 'init',
	    value: function init() {
	      this.style.width = '100%';
	      ModifierUtil.initModifier(this, scheme$4);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'modifier') {
	        return ModifierUtil.onModifierChanged(last, current, this, scheme$4);
	      }
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier'];
	    }
	  }]);
	  return CarouselItemElement;
	}(BaseElement);
	
	customElements.define('ons-carousel-item', CarouselItemElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var VerticalModeTrait = {
	
	  _getScrollDelta: function _getScrollDelta(event) {
	    return event.gesture.deltaY;
	  },
	
	  _getScrollVelocity: function _getScrollVelocity(event) {
	    return event.gesture.velocityY;
	  },
	
	  _getElementSize: function _getElementSize() {
	    if (!this._currentElementSize) {
	      this._currentElementSize = this.getBoundingClientRect().height;
	    }
	
	    return this._currentElementSize;
	  },
	
	  _generateScrollTransform: function _generateScrollTransform(scroll) {
	    return 'translate3d(0px, ' + -scroll + 'px, 0px)';
	  },
	
	  _updateDimensionData: function _updateDimensionData() {
	    this._style = window.getComputedStyle(this);
	    this._dimensions = this.getBoundingClientRect();
	  },
	
	  _updateOffset: function _updateOffset() {
	    if (this.centered) {
	      var height = (this._dimensions.height || 0) - parseInt(this._style.paddingTop, 10) - parseInt(this._style.paddingBottom, 10);
	      this._offset = -(height - this._getCarouselItemSize()) / 2;
	    }
	  },
	
	  _layoutCarouselItems: function _layoutCarouselItems() {
	    var children = this._getCarouselItemElements();
	
	    var sizeAttr = this._getCarouselItemSizeAttr();
	    var sizeInfo = this._decomposeSizeString(sizeAttr);
	
	    for (var i = 0; i < children.length; i++) {
	      children[i].style.position = 'absolute';
	      children[i].style.height = sizeAttr;
	      children[i].style.visibility = 'visible';
	      children[i].style.top = i * sizeInfo.number + sizeInfo.unit;
	    }
	  },
	
	  _setup: function _setup() {
	    this._updateDimensionData();
	    this._updateOffset();
	    this._layoutCarouselItems();
	  }
	};
	
	var HorizontalModeTrait = {
	
	  _getScrollDelta: function _getScrollDelta(event) {
	    return event.gesture.deltaX;
	  },
	
	  _getScrollVelocity: function _getScrollVelocity(event) {
	    return event.gesture.velocityX;
	  },
	
	  _getElementSize: function _getElementSize() {
	    if (!this._currentElementSize) {
	      this._currentElementSize = this.getBoundingClientRect().width;
	    }
	
	    return this._currentElementSize;
	  },
	
	  _generateScrollTransform: function _generateScrollTransform(scroll) {
	    return 'translate3d(' + -scroll + 'px, 0px, 0px)';
	  },
	
	  _updateDimensionData: function _updateDimensionData() {
	    this._style = window.getComputedStyle(this);
	    this._dimensions = this.getBoundingClientRect();
	  },
	
	  _updateOffset: function _updateOffset() {
	    if (this.centered) {
	      var width = (this._dimensions.width || 0) - parseInt(this._style.paddingLeft, 10) - parseInt(this._style.paddingRight, 10);
	      this._offset = -(width - this._getCarouselItemSize()) / 2;
	    }
	  },
	
	  _layoutCarouselItems: function _layoutCarouselItems() {
	    var children = this._getCarouselItemElements();
	
	    var sizeAttr = this._getCarouselItemSizeAttr();
	    var sizeInfo = this._decomposeSizeString(sizeAttr);
	
	    for (var i = 0; i < children.length; i++) {
	      children[i].style.position = 'absolute';
	      children[i].style.width = sizeAttr;
	      children[i].style.visibility = 'visible';
	      children[i].style.left = i * sizeInfo.number + sizeInfo.unit;
	    }
	  },
	
	  _setup: function _setup() {
	    this._updateDimensionData();
	    this._updateOffset();
	    this._layoutCarouselItems();
	  }
	};
	
	/**
	 * @element ons-carousel
	 * @category carousel
	 * @description
	 *   [en]
	 *     Carousel component. A carousel can be used to display several items in the same space.
	 *
	 *     The component supports displaying content both horizontally and vertically. The user can scroll through the items by dragging and it can also be controller programmatically.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen xbbzOQ
	 * @tutorial vanilla/Reference/carousel
	 * @seealso ons-carousel-item
	 *   [en]`<ons-carousel-item>` component[/en]
	 *   [ja]ons-carousel-itemコンポーネント[/ja]
	 * @example
	 * <ons-carousel style="width: 100%; height: 200px">
	 *   <ons-carousel-item>
	 *    ...
	 *   </ons-carousel-item>
	 *   <ons-carousel-item>
	 *    ...
	 *   </ons-carousel-item>
	 * </ons-carousel>
	 */
	
	var CarouselElement = function (_BaseElement) {
	  inherits(CarouselElement, _BaseElement);
	
	  function CarouselElement() {
	    classCallCheck(this, CarouselElement);
	    return possibleConstructorReturn(this, (CarouselElement.__proto__ || Object.getPrototypeOf(CarouselElement)).apply(this, arguments));
	  }
	
	  createClass(CarouselElement, [{
	    key: 'init',
	
	
	    /**
	     * @event postchange
	     * @description
	     *   [en]Fired just after the current carousel item has changed.[/en]
	     *   [ja]現在表示しているカルーセルの要素が変わった時に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Object} event.carousel
	     *   [en]Carousel object.[/en]
	     *   [ja]イベントが発火したCarouselオブジェクトです。[/ja]
	     * @param {Number} event.activeIndex
	     *   [en]Current active index.[/en]
	     *   [ja]現在アクティブになっている要素のインデックス。[/ja]
	     * @param {Number} event.lastActiveIndex
	     *   [en]Previous active index.[/en]
	     *   [ja]以前アクティブだった要素のインデックス。[/ja]
	     */
	
	    /**
	     * @event refresh
	     * @description
	     *   [en]Fired when the carousel has been refreshed.[/en]
	     *   [ja]カルーセルが更新された時に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Object} event.carousel
	     *   [en]Carousel object.[/en]
	     *   [ja]イベントが発火したCarouselオブジェクトです。[/ja]
	     */
	
	    /**
	     * @event overscroll
	     * @description
	     *   [en]Fired when the carousel has been overscrolled.[/en]
	     *   [ja]カルーセルがオーバースクロールした時に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Object} event.carousel
	     *   [en]Fired when the carousel has been refreshed.[/en]
	     *   [ja]カルーセルが更新された時に発火します。[/ja]
	     * @param {Number} event.activeIndex
	     *   [en]Current active index.[/en]
	     *   [ja]現在アクティブになっている要素のインデックス。[/ja]
	     * @param {String} event.direction
	     *   [en]Can be one of either "up", "down", "left" or "right".[/en]
	     *   [ja]オーバースクロールされた方向が得られます。"up", "down", "left", "right"のいずれかの方向が渡されます。[/ja]
	     * @param {Function} event.waitToReturn
	     *   [en]Takes a <code>Promise</code> object as an argument. The carousel will not scroll back until the promise has been resolved or rejected.[/en]
	     *   [ja]この関数はPromiseオブジェクトを引数として受け取ります。渡したPromiseオブジェクトがresolveされるかrejectされるまで、カルーセルはスクロールバックしません。[/ja]
	     */
	
	    /**
	     * @attribute direction
	     * @type {String}
	     * @description
	     *   [en]The direction of the carousel. Can be either "horizontal" or "vertical". Default is "horizontal".[/en]
	     *   [ja]カルーセルの方向を指定します。"horizontal"か"vertical"を指定できます。"horizontal"がデフォルト値です。[/ja]
	     */
	
	    /**
	     * @attribute fullscreen
	     * @description
	     *   [en]If this attribute is set the carousel will cover the whole screen.[/en]
	     *   [ja]この属性があると、absoluteポジションを使ってカルーセルが自動的に画面いっぱいに広がります。[/ja]
	     */
	
	    /**
	     * @attribute overscrollable
	     * @description
	     *   [en]If this attribute is set the carousel will be scrollable over the edge. It will bounce back when released.[/en]
	     *   [ja]この属性がある時、タッチやドラッグで端までスクロールした時に、バウンドするような効果が当たります。[/ja]
	     */
	
	    /**
	     * @attribute centered
	     * @description
	     *   [en]If this attribute is set the carousel then the selected item will be in the center of the carousel instead of the beginning. Useful only when the items are smaller than the carousel. [/en]
	     *   [ja]この属性がある時、選んでいるons-carousel-itemはカルーセルの真ん中へ行きます。項目がカルーセルよりも小さい場合にのみ、これは便利です。[/ja]
	     */
	
	    /**
	     * @attribute item-width
	     * @type {String}
	     * @description
	     *    [en]ons-carousel-item's width. Only works when the direction is set to "horizontal".[/en]
	     *    [ja]ons-carousel-itemの幅を指定します。この属性は、direction属性に"horizontal"を指定した時のみ有効になります。[/ja]
	     */
	
	    /**
	     * @attribute item-height
	     * @type {String}
	     * @description
	     *   [en]ons-carousel-item's height. Only works when the direction is set to "vertical".[/en]
	     *   [ja]ons-carousel-itemの高さを指定します。この属性は、direction属性に"vertical"を指定した時のみ有効になります。[/ja]
	     */
	
	    /**
	     * @attribute auto-scroll
	     * @description
	     *   [en]If this attribute is set the carousel will be automatically scrolled to the closest item border when released.[/en]
	     *   [ja]この属性がある時、一番近いcarousel-itemの境界まで自動的にスクロールするようになります。[/ja]
	     */
	
	    /**
	     * @attribute auto-scroll-ratio
	     * @type {Number}
	     * @description
	     *    [en]A number between 0.0 and 1.0 that specifies how much the user must drag the carousel in order for it to auto scroll to the next item.[/en]
	     *    [ja]0.0から1.0までの値を指定します。カルーセルの要素をどれぐらいの割合までドラッグすると次の要素に自動的にスクロールするかを指定します。[/ja]
	     */
	
	    /**
	     * @attribute swipeable
	     * @description
	     *   [en]If this attribute is set the carousel can be scrolled by drag or swipe.[/en]
	     *   [ja]この属性がある時、カルーセルをスワイプやドラッグで移動できるようになります。[/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *   [en]If this attribute is set the carousel is disabled.[/en]
	     *   [ja]この属性がある時、dragやtouchやswipeを受け付けなくなります。[/ja]
	     */
	
	    /**
	     * @attribute initial-index
	     * @initonly
	     * @type {Number}
	     * @description
	     *   [en]Specify the index of the ons-carousel-item to show initially. Default is 0.[/en]
	     *   [ja]最初に表示するons-carousel-itemを0始まりのインデックスで指定します。デフォルト値は 0 です。[/ja]
	     */
	
	    /**
	     * @attribute auto-refresh
	     * @description
	     *   [en]When this attribute is set the carousel will automatically refresh when the number of child nodes change.[/en]
	     *   [ja]この属性がある時、子要素の数が変わるとカルーセルは自動的に更新されるようになります。[/ja]
	     */
	
	    /**
	     * @attribute animation
	     * @type {String}
	     * @description
	     *   [en]If this attribute is set to `"none"` the transitions will not be animated.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @attribute animation-options
	     * @type {Expression}
	     * @description
	     *   [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。例：{duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]
	     */
	
	    value: function init() {
	      this._doorLock = new DoorLock();
	      this._scroll = 0;
	      this._offset = 0;
	      this._lastActiveIndex = 0;
	
	      this._boundOnDrag = this._onDrag.bind(this);
	      this._boundOnDragEnd = this._onDragEnd.bind(this);
	      this._boundOnResize = this._onResize.bind(this);
	
	      this._mixin(this._isVertical() ? VerticalModeTrait : HorizontalModeTrait);
	    }
	  }, {
	    key: '_onResize',
	    value: function _onResize() {
	      var i = this._scroll / this._currentElementSize;
	      delete this._currentElementSize;
	      this.setActiveIndex(i);
	    }
	  }, {
	    key: '_onDirectionChange',
	    value: function _onDirectionChange() {
	      if (this._isVertical()) {
	        this.style.overflowX = 'auto';
	        this.style.overflowY = '';
	      } else {
	        this.style.overflowX = '';
	        this.style.overflowY = 'auto';
	      }
	
	      this.refresh();
	    }
	  }, {
	    key: '_saveLastState',
	    value: function _saveLastState() {
	      this._lastState = {
	        elementSize: this._getCarouselItemSize(),
	        carouselElementCount: this.itemCount,
	        width: this._getCarouselItemSize() * this.itemCount
	      };
	    }
	
	    /**
	     * @return {Number}
	     */
	
	  }, {
	    key: '_getCarouselItemSize',
	    value: function _getCarouselItemSize() {
	      var sizeAttr = this._getCarouselItemSizeAttr();
	      var sizeInfo = this._decomposeSizeString(sizeAttr);
	      var elementSize = this._getElementSize();
	
	      if (sizeInfo.unit === '%') {
	        return Math.round(sizeInfo.number / 100 * elementSize);
	      } else if (sizeInfo.unit === 'px') {
	        return sizeInfo.number;
	      } else {
	        throw new Error('Invalid state');
	      }
	    }
	
	    /**
	     * @return {Number}
	     */
	
	  }, {
	    key: '_getInitialIndex',
	    value: function _getInitialIndex() {
	      var index = parseInt(this.getAttribute('initial-index'), 10);
	
	      if (typeof index === 'number' && !isNaN(index)) {
	        return Math.max(Math.min(index, this.itemCount - 1), 0);
	      } else {
	        return 0;
	      }
	    }
	
	    /**
	     * @return {String}
	     */
	
	  }, {
	    key: '_getCarouselItemSizeAttr',
	    value: function _getCarouselItemSizeAttr() {
	      var attrName = 'item-' + (this._isVertical() ? 'height' : 'width');
	      var itemSizeAttr = ('' + this.getAttribute(attrName)).trim();
	
	      return itemSizeAttr.match(/^\d+(px|%)$/) ? itemSizeAttr : '100%';
	    }
	
	    /**
	     * @return {Object}
	     */
	
	  }, {
	    key: '_decomposeSizeString',
	    value: function _decomposeSizeString(size) {
	      var matches = size.match(/^(\d+)(px|%)/);
	
	      return {
	        number: parseInt(matches[1], 10),
	        unit: matches[2]
	      };
	    }
	  }, {
	    key: '_setupInitialIndex',
	    value: function _setupInitialIndex() {
	      this._scroll = (this._offset || 0) + this._getCarouselItemSize() * this._getInitialIndex();
	      this._lastActiveIndex = this._getInitialIndex();
	      this._scrollTo(this._scroll);
	    }
	
	    /**
	     * @method setActiveIndex
	     * @signature setActiveIndex(index, [options])
	     * @param {Number} index
	     *   [en]The index that the carousel should be set to.[/en]
	     *   [ja]carousel要素のインデックスを指定します。[/ja]
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja][/ja]
	     * @param {Function} [options.callback]
	     *   [en]A function that will be called after the animation is finished.[/en]
	     *   [ja][/ja]
	     * @param {String} [options.animation]
	     *   [en]If this attribute is set to `"none"` the transitions will not be animated.[/en]
	     *   [ja][/ja]
	     * @param {Object} [options.animationOptions]
	     *   [en]An object that can be used to specify duration, delay and timing function of the animation.[/en]
	     *   [ja][/ja]
	     * @description
	     *   [en]Specify the index of the `<ons-carousel-item>` to show.[/en]
	     *   [ja]表示するons-carousel-itemをindexで指定します。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the carousel element.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'setActiveIndex',
	    value: function setActiveIndex(index) {
	      var _this2 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      if (options && (typeof options === 'undefined' ? 'undefined' : _typeof(options)) != 'object') {
	        throw new Error('options must be an object. You supplied ' + options);
	      }
	
	      options.animation = options.animation || this.getAttribute('animation');
	      options.animationOptions = util.extend({ duration: 0.3, timing: 'cubic-bezier(.1, .7, .1, 1)' }, options.animationOptions || {}, this.hasAttribute('animation-options') ? util.animationOptionsParse(this.getAttribute('animation-options')) : {});
	
	      index = Math.max(0, Math.min(index, this.itemCount - 1));
	      var scroll = (this._offset || 0) + this._getCarouselItemSize() * index;
	      var max = this._calculateMaxScroll();
	
	      this._scroll = Math.max(0, Math.min(max, scroll));
	      return this._scrollTo(this._scroll, options).then(function () {
	        _this2._tryFirePostChangeEvent();
	        return _this2;
	      });
	    }
	
	    /**
	     * @method getActiveIndex
	     * @signature getActiveIndex()
	     * @return {Number}
	     *   [en]The current carousel item index.[/en]
	     *   [ja]現在表示しているカルーセル要素のインデックスが返されます。[/ja]
	     * @description
	     *   [en]Returns the index of the currently visible `<ons-carousel-item>`.[/en]
	     *   [ja]現在表示されているons-carousel-item要素のインデックスを返します。[/ja]
	     */
	
	  }, {
	    key: 'getActiveIndex',
	    value: function getActiveIndex() {
	      var scroll = this._scroll - (this._offset || 0);
	      var count = this.itemCount;
	      var size = this._getCarouselItemSize();
	
	      if (scroll < 0) {
	        return 0;
	      }
	
	      var i = void 0;
	      for (i = 0; i < count; i++) {
	        if (size * i <= scroll && size * (i + 1) > scroll) {
	          return i;
	        }
	      }
	
	      // max carousel index
	      return i;
	    }
	
	    /**
	     * @method next
	     * @signature next([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja][/ja]
	     * @param {Function} [options.callback]
	     *   [en]A function that will be executed after the animation has finished.[/en]
	     *   [ja][/ja]
	     * @param {String} [options.animation]
	     *   [en]If this attribute is set to `"none"` the transitions will not be animated.[/en]
	     *   [ja][/ja]
	     * @param {Object} [options.animationOptions]
	     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]
	     *   [ja][/ja]
	     * @return {Promise}
	     *   [en]Resolves to the carousel element[/en]
	     *   [ja][/ja]
	     * @description
	     *   [en]Show next `<ons-carousel-item>`.[/en]
	     *   [ja]次のons-carousel-itemを表示します。[/ja]
	     */
	
	  }, {
	    key: 'next',
	    value: function next(options) {
	      return this.setActiveIndex(this.getActiveIndex() + 1, options);
	    }
	
	    /**
	     * @method prev
	     * @signature prev([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja][/ja]
	     * @param {Function} [options.callback]
	     *   [en]A function that will be executed after the animation has finished.[/en]
	     *   [ja][/ja]
	     * @param {String} [options.animation]
	     *   [en]If this attribute is set to `"none"` the transitions will not be animated.[/en]
	     *   [ja][/ja]
	     * @param {Object} [options.animationOptions]
	     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]
	     *   [ja][/ja]
	     * @return {Promise}
	     *   [en]Resolves to the carousel element[/en]
	     *   [ja][/ja]
	     * @description
	     *   [en]Show previous `<ons-carousel-item>`.[/en]
	     *   [ja]前のons-carousel-itemを表示します。[/ja]
	     */
	
	  }, {
	    key: 'prev',
	    value: function prev(options) {
	      return this.setActiveIndex(this.getActiveIndex() - 1, options);
	    }
	
	    /**
	     * @return {Boolean}
	     */
	
	  }, {
	    key: '_isEnabledChangeEvent',
	    value: function _isEnabledChangeEvent() {
	      var elementSize = this._getElementSize();
	      var carouselItemSize = this._getCarouselItemSize();
	
	      return this.autoScroll && Math.abs(elementSize - carouselItemSize) < 0.5;
	    }
	
	    /**
	     * @return {Boolean}
	     */
	
	  }, {
	    key: '_isVertical',
	    value: function _isVertical() {
	      return this.getAttribute('direction') === 'vertical';
	    }
	  }, {
	    key: '_show',
	    value: function _show() {
	      window.addEventListener('resize', this._boundOnResize, true);
	    }
	  }, {
	    key: '_prepareEventListeners',
	    value: function _prepareEventListeners() {
	      var _this3 = this;
	
	      this._gestureDetector = new GestureDetector(this, {
	        dragMinDistance: 1,
	        dragLockToAxis: true
	      });
	      this._mutationObserver = new MutationObserver(function () {
	        return _this3.refresh();
	      });
	
	      this._updateSwipeable();
	      this._updateAutoRefresh();
	
	      window.addEventListener('resize', this._boundOnResize, true);
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      window.removeEventListener('resize', this._boundOnResize, true);
	    }
	  }, {
	    key: '_removeEventListeners',
	    value: function _removeEventListeners() {
	      this._gestureDetector.dispose();
	      this._gestureDetector = null;
	
	      this._mutationObserver.disconnect();
	      this._mutationObserver = null;
	
	      window.removeEventListener('resize', this._boundOnResize, true);
	    }
	  }, {
	    key: '_updateSwipeable',
	    value: function _updateSwipeable() {
	      if (this._gestureDetector) {
	        if (this.swipeable) {
	          this._gestureDetector.on('drag dragleft dragright dragup dragdown swipe swipeleft swiperight swipeup swipedown', this._boundOnDrag);
	          this._gestureDetector.on('dragend', this._boundOnDragEnd);
	        } else {
	          this._gestureDetector.off('drag dragleft dragright dragup dragdown swipe swipeleft swiperight swipeup swipedown', this._boundOnDrag);
	          this._gestureDetector.off('dragend', this._boundOnDragEnd);
	        }
	      }
	    }
	  }, {
	    key: '_updateAutoRefresh',
	    value: function _updateAutoRefresh() {
	      if (this._mutationObserver) {
	        if (this.hasAttribute('auto-refresh')) {
	          this._mutationObserver.observe(this, { childList: true });
	        } else {
	          this._mutationObserver.disconnect();
	        }
	      }
	    }
	  }, {
	    key: '_tryFirePostChangeEvent',
	    value: function _tryFirePostChangeEvent() {
	      var currentIndex = this.getActiveIndex();
	
	      if (this._lastActiveIndex !== currentIndex) {
	        var lastActiveIndex = this._lastActiveIndex;
	        this._lastActiveIndex = currentIndex;
	
	        util.triggerElementEvent(this, 'postchange', {
	          carousel: this,
	          activeIndex: currentIndex,
	          lastActiveIndex: lastActiveIndex
	        });
	      }
	    }
	  }, {
	    key: '_isWrongDirection',
	    value: function _isWrongDirection(d) {
	      // this._lastDragDirection = d;
	      return this._isVertical() ? d === 'left' || d === 'right' : d === 'up' || d === 'down';
	    }
	  }, {
	    key: '_onDrag',
	    value: function _onDrag(event) {
	      if (this._isWrongDirection(event.gesture.direction) || event.target && event.target.tagName.toLowerCase() === 'input' && event.target.type === 'range') {
	        return;
	      }
	
	      event.stopPropagation();
	
	      this._lastDragEvent = event;
	
	      var scroll = this._scroll - this._getScrollDelta(event);
	      this._scrollTo(scroll);
	      event.gesture.preventDefault();
	
	      this._tryFirePostChangeEvent();
	    }
	  }, {
	    key: '_onDragEnd',
	    value: function _onDragEnd(event) {
	      var _this4 = this;
	
	      if (!this._lastDragEvent) {
	        return;
	      }
	      this._currentElementSize = undefined;
	      this._scroll = this._scroll - this._getScrollDelta(event);
	
	      // if (!this._isWrongDirection(this._lastDragDirection) && this._getScrollDelta(event) !== 0) {
	      //   event.stopPropagation();
	      // }
	
	      if (this._isOverScroll(this._scroll)) {
	        var waitForAction = false;
	        util.triggerElementEvent(this, 'overscroll', {
	          carousel: this,
	          activeIndex: this.getActiveIndex(),
	          direction: this._getOverScrollDirection(),
	          waitToReturn: function waitToReturn(promise) {
	            waitForAction = true;
	            promise.then(function () {
	              return _this4._scrollToKillOverScroll();
	            });
	          }
	        });
	
	        if (!waitForAction) {
	          this._scrollToKillOverScroll();
	        }
	      } else {
	        this._startMomentumScroll();
	      }
	      this._lastDragEvent = null;
	
	      event.gesture.preventDefault();
	    }
	
	    /**
	     * @param {Object} trait
	     */
	
	  }, {
	    key: '_mixin',
	    value: function _mixin(trait) {
	      Object.keys(trait).forEach(function (key) {
	        this[key] = trait[key];
	      }.bind(this));
	    }
	  }, {
	    key: '_startMomentumScroll',
	    value: function _startMomentumScroll() {
	      if (this._lastDragEvent) {
	        var velocity = this._getScrollVelocity(this._lastDragEvent);
	        var duration = 0.3;
	        var scrollDelta = duration * 100 * velocity;
	        var scroll = this._normalizeScrollPosition(this._scroll + (this._getScrollDelta(this._lastDragEvent) > 0 ? -scrollDelta : scrollDelta));
	
	        this._scroll = scroll;
	
	        Animit(this._getCarouselItemElements()).queue({
	          transform: this._generateScrollTransform(this._scroll)
	        }, {
	          duration: duration,
	          timing: 'cubic-bezier(.1, .7, .1, 1)'
	        }).queue(function (done) {
	          done();
	          this._tryFirePostChangeEvent();
	        }.bind(this)).play();
	      }
	    }
	  }, {
	    key: '_normalizeScrollPosition',
	    value: function _normalizeScrollPosition(scroll) {
	      var max = this._calculateMaxScroll();
	
	      if (!this.autoScroll) {
	        return Math.max(0, Math.min(max, scroll));
	      }
	      var arr = [];
	      var size = this._getCarouselItemSize();
	      var nbrOfItems = this.itemCount;
	
	      for (var i = 0; i < nbrOfItems; i++) {
	        if (i * size + this._offset < max) {
	          arr.push(i * size + this._offset);
	        }
	      }
	      arr.push(max);
	
	      arr.sort(function (left, right) {
	        left = Math.abs(left - scroll);
	        right = Math.abs(right - scroll);
	
	        return left - right;
	      });
	
	      arr = arr.filter(function (item, pos) {
	        return !pos || item != arr[pos - 1];
	      });
	
	      var lastScroll = this._lastActiveIndex * size + this._offset;
	      var scrollRatio = Math.abs(scroll - lastScroll) / size;
	      var result = arr[0];
	
	      if (scrollRatio <= this.autoScrollRatio) {
	        result = lastScroll;
	      } else if (scrollRatio < 1.0) {
	        if (arr[0] === lastScroll && arr.length > 1) {
	          result = arr[1];
	        }
	      }
	
	      return Math.max(0, Math.min(max, result));
	    }
	
	    /**
	     * @return {Array}
	     */
	
	  }, {
	    key: '_getCarouselItemElements',
	    value: function _getCarouselItemElements() {
	      return util.arrayFrom(this.children).filter(function (child) {
	        return child.nodeName.toLowerCase() === 'ons-carousel-item';
	      });
	    }
	
	    /**
	     * @param {Number} scroll
	     * @param {Object} [options]
	     * @return {Promise} Resolves to the carousel element
	     */
	
	  }, {
	    key: '_scrollTo',
	    value: function _scrollTo(scroll) {
	      var _this5 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var isOverscrollable = this.overscrollable;
	
	      var normalizeScroll = function normalizeScroll(scroll) {
	        var ratio = 0.35;
	
	        if (scroll < 0) {
	          return isOverscrollable ? Math.round(scroll * ratio) : 0;
	        }
	
	        var maxScroll = _this5._calculateMaxScroll();
	        if (maxScroll < scroll) {
	          return isOverscrollable ? maxScroll + Math.round((scroll - maxScroll) * ratio) : maxScroll;
	        }
	
	        return scroll;
	      };
	
	      return new Promise(function (resolve) {
	        Animit(_this5._getCarouselItemElements()).queue({
	          transform: _this5._generateScrollTransform(normalizeScroll(scroll))
	        }, options.animation !== 'none' ? options.animationOptions : {}).play(function () {
	          if (options.callback instanceof Function) {
	            options.callback();
	          }
	          resolve();
	        });
	      });
	    }
	  }, {
	    key: '_calculateMaxScroll',
	    value: function _calculateMaxScroll() {
	      var max = this.itemCount * this._getCarouselItemSize() - this._getElementSize();
	      return Math.ceil(max < 0 ? 0 : max); // Need to return an integer value.
	    }
	  }, {
	    key: '_isOverScroll',
	    value: function _isOverScroll(scroll) {
	      if (scroll < 0 || scroll > this._calculateMaxScroll()) {
	        return true;
	      }
	      return false;
	    }
	  }, {
	    key: '_getOverScrollDirection',
	    value: function _getOverScrollDirection() {
	      if (this._isVertical()) {
	        return this._scroll <= 0 ? 'up' : 'down';
	      } else {
	        return this._scroll <= 0 ? 'left' : 'right';
	      }
	    }
	  }, {
	    key: '_scrollToKillOverScroll',
	    value: function _scrollToKillOverScroll() {
	      var duration = 0.4;
	
	      if (this._scroll < 0) {
	        Animit(this._getCarouselItemElements()).queue({
	          transform: this._generateScrollTransform(0)
	        }, {
	          duration: duration,
	          timing: 'cubic-bezier(.1, .4, .1, 1)'
	        }).queue(function (done) {
	          done();
	          this._tryFirePostChangeEvent();
	        }.bind(this)).play();
	        this._scroll = 0;
	        return;
	      }
	
	      var maxScroll = this._calculateMaxScroll();
	
	      if (maxScroll < this._scroll) {
	        Animit(this._getCarouselItemElements()).queue({
	          transform: this._generateScrollTransform(maxScroll)
	        }, {
	          duration: duration,
	          timing: 'cubic-bezier(.1, .4, .1, 1)'
	        }).queue(function (done) {
	          done();
	          this._tryFirePostChangeEvent();
	        }.bind(this)).play();
	        this._scroll = maxScroll;
	        return;
	      }
	
	      return;
	    }
	
	    /**
	     * @property itemCount
	     * @readonly
	     * @type {Number}
	     * @description
	     *   [en]The number of carousel items.[/en]
	     *   [ja]カルーセル要素の数です。[/ja]
	     */
	
	  }, {
	    key: 'refresh',
	
	
	    /**
	     * @method refresh
	     * @signature refresh()
	     * @description
	     *   [en]Update the layout of the carousel. Used when adding `<ons-carousel-items>` dynamically or to automatically adjust the size.[/en]
	     *   [ja]レイアウトや内部の状態を最新のものに更新します。ons-carousel-itemを動的に増やしたり、ons-carouselの大きさを動的に変える際に利用します。[/ja]
	     */
	    value: function refresh() {
	      // Bug fix
	      if (this._getCarouselItemSize() === 0) {
	        return;
	      }
	
	      this._mixin(this._isVertical() ? VerticalModeTrait : HorizontalModeTrait);
	      this._setup();
	
	      if (this._lastState && this._lastState.width > 0) {
	        var scroll = this._scroll; // - this._offset;
	
	        if (this._isOverScroll(scroll)) {
	          this._scrollToKillOverScroll();
	        } else {
	          if (this.autoScroll) {
	            scroll = this._normalizeScrollPosition(scroll);
	          }
	
	          this._scrollTo(scroll);
	        }
	      }
	
	      this._saveLastState();
	
	      util.triggerElementEvent(this, 'refresh', { carousel: this });
	    }
	
	    /**
	     * @method first
	     * @signature first()
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja][/ja]
	     * @param {Function} [options.callback]
	     *   [en]A function that will be executed after the animation has finished.[/en]
	     *   [ja][/ja]
	     * @param {String} [options.animation]
	     *   [en]If this is set to `"none"`, the transitions will not be animated.[/en]
	     *   [ja][/ja]
	     * @param {Object} [options.animationOptions]
	     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]
	     *   [ja][/ja]
	     * @return {Promise}
	     *   [en]Resolves to the carousel element[/en]
	     *   [ja][/ja]
	     * @description
	     *   [en]Show first `<ons-carousel-item>`.[/en]
	     *   [ja]最初のons-carousel-itemを表示します。[/ja]
	     */
	
	  }, {
	    key: 'first',
	    value: function first(options) {
	      return this.setActiveIndex(0, options);
	    }
	
	    /**
	     * @method last
	     * @signature last()
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja][/ja]
	     * @param {Function} [options.callback]
	     *   [en]A function that will be executed after the animation has finished.[/en]
	     *   [ja][/ja]
	     * @param {String} [options.animation]
	     *   [en]If this attribute is set to `"none"` the transitions will not be animated.[/en]
	     *   [ja][/ja]
	     * @param {Object} [options.animationOptions]
	     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]
	     *   [ja][/ja]
	     * @return {Promise}
	     *   [en]Resolves to the carousel element[/en]
	     *   [ja]Resolves to the carousel element[/ja]
	     * @description
	     *   [en]Show last ons-carousel item.[/en]
	     *   [ja]最後のons-carousel-itemを表示します。[/ja]
	     */
	
	  }, {
	    key: 'last',
	    value: function last(options) {
	      this.setActiveIndex(Math.max(this.itemCount - 1, 0), options);
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this6 = this;
	
	      this._prepareEventListeners();
	
	      this._setup();
	      this._setupInitialIndex();
	
	      this._saveLastState();
	
	      // Fix rendering glitch on Android 4.1
	      if (this.offsetHeight === 0) {
	        setImmediate(function () {
	          return _this6.refresh();
	        });
	      }
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'swipeable':
	          this._updateSwipeable();
	          break;
	        case 'auto-refresh':
	          this._updateAutoRefresh();
	          break;
	        case 'direction':
	          this._onDirectionChange();
	      }
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this._removeEventListeners();
	    }
	
	    /**
	     * @property autoScrollRatio
	     * @type {Number}
	     * @description
	     *   [en]The current auto scroll ratio. [/en]
	     *   [ja]現在のオートスクロールのratio値。[/ja]
	     */
	
	  }, {
	    key: 'itemCount',
	    get: function get() {
	      return this._getCarouselItemElements().length;
	    }
	  }, {
	    key: 'autoScrollRatio',
	    get: function get() {
	      var attr = this.getAttribute('auto-scroll-ratio');
	
	      if (!attr) {
	        return 0.5;
	      }
	
	      var scrollRatio = parseFloat(attr);
	      if (scrollRatio < 0.0 || scrollRatio > 1.0) {
	        throw new Error('Invalid ratio.');
	      }
	
	      return isNaN(scrollRatio) ? 0.5 : scrollRatio;
	    },
	    set: function set(ratio) {
	      if (ratio < 0.0 || ratio > 1.0) {
	        throw new Error('Invalid ratio.');
	      }
	
	      this.setAttribute('auto-scroll-ratio', ratio);
	    }
	
	    /**
	     * @property swipeable
	     * @type {Boolean}
	     * @description
	     *   [en]true if the carousel is swipeable.[/en]
	     *   [ja]swipeableであればtrueを返します。[/ja]
	     */
	
	  }, {
	    key: 'swipeable',
	    get: function get() {
	      return this.hasAttribute('swipeable');
	    },
	    set: function set(value) {
	      return util.toggleAttribute(this, 'swipeable', value);
	    }
	
	    /**
	     * @property autoScroll
	     * @type {Boolean}
	     * @description
	     *   [en]true if auto scroll is enabled.[/en]
	     *   [ja]オートスクロールが有効であればtrueを返します。[/ja]
	     */
	
	  }, {
	    key: 'autoScroll',
	    get: function get() {
	      return this.hasAttribute('auto-scroll');
	    },
	    set: function set(value) {
	      return util.toggleAttribute(this, 'auto-scroll', value);
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the carousel is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'disabled',
	    get: function get() {
	      return this.hasAttribute('disabled');
	    },
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    }
	
	    /**
	     * @property overscrollable
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the carousel is overscrollable or not.[/en]
	     *   [ja]overscrollできればtrueを返します。[/ja]
	     */
	
	  }, {
	    key: 'overscrollable',
	    get: function get() {
	      return this.hasAttribute('overscrollable');
	    },
	    set: function set(value) {
	      return util.toggleAttribute(this, 'overscrollable', value);
	    }
	
	    /**
	     * @property centered
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the carousel is centered or not.[/en]
	     *   [ja]centered状態になっていればtrueを返します。[/ja]
	     */
	
	  }, {
	    key: 'centered',
	    get: function get() {
	      return this.hasAttribute('centered');
	    },
	    set: function set(value) {
	      return util.toggleAttribute(this, 'centered', value);
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['swipeable', 'auto-refresh', 'direction'];
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['postchange', 'refresh', 'overscroll'];
	    }
	  }]);
	  return CarouselElement;
	}(BaseElement);
	
	customElements.define('ons-carousel', CarouselElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @element ons-col
	 * @category grid
	 * @description
	 *   [en]Represents a column in the grid system. Use with `<ons-row>` to layout components.[/en]
	 *   [ja]グリッドシステムにて列を定義します。ons-rowとともに使用し、コンポーネントのレイアウトに利用します。[/ja]
	 * @note
	 *   [en]For Android 4.3 and earlier, and iOS6 and earlier, when using mixed alignment with ons-row and ons-column, they may not be displayed correctly. You can use only one alignment.[/en]
	 *   [ja]Android 4.3以前、もしくはiOS 6以前のOSの場合、ons-rowとons-columnを組み合わせた場合に描画が崩れる場合があります。[/ja]
	 * @codepen GgujC {wide}
	 * @guide layouting [en]Layouting guide[/en][ja]レイアウト機能[/ja]
	 * @seealso ons-row
	 *   [en]The `<ons-row>` component is the parent of `<ons-col>`.[/en]
	 *   [ja]ons-rowコンポーネント[/ja]
	 * @example
	 * <ons-row>
	 *   <ons-col width="50px"><ons-icon icon="fa-twitter"></ons-icon></ons-col>
	 *   <ons-col>Text</ons-col>
	 * </ons-row>
	 */
	
	/**
	 * @attribute vertical-align
	 * @type {String}
	 * @description
	 *   [en]Vertical alignment of the column. Valid values are "top", "center", and "bottom".[/en]
	 *   [ja]縦の配置を指定する。"top", "center", "bottom"のいずれかを指定します。[/ja]
	 */
	
	/**
	 * @attribute width
	 * @type {String}
	 * @description
	 *   [en]The width of the column. Valid values are css width values ("10%", "50px").[/en]
	 *   [ja]カラムの横幅を指定する。パーセントもしくはピクセルで指定します（10%や50px）。[/ja]
	 */
	
	var ColElement = function (_BaseElement) {
	  inherits(ColElement, _BaseElement);
	
	  function ColElement() {
	    classCallCheck(this, ColElement);
	    return possibleConstructorReturn(this, (ColElement.__proto__ || Object.getPrototypeOf(ColElement)).apply(this, arguments));
	  }
	
	  createClass(ColElement, [{
	    key: 'init',
	    value: function init() {
	      if (this.getAttribute('width')) {
	        this._updateWidth();
	      }
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'width') {
	        this._updateWidth();
	      }
	    }
	  }, {
	    key: '_updateWidth',
	    value: function _updateWidth() {
	      var width = this.getAttribute('width');
	      if (typeof width === 'string') {
	        width = ('' + width).trim();
	        width = width.match(/^\d+$/) ? width + '%' : width;
	
	        this.style.webkitBoxFlex = '0';
	        this.style.webkitFlex = '0 0 ' + width;
	        this.style.mozBoxFlex = '0';
	        this.style.mozFlex = '0 0 ' + width;
	        this.style.msFlex = '0 0 ' + width;
	        this.style.flex = '0 0 ' + width;
	        this.style.maxWidth = width;
	      }
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['width'];
	    }
	  }]);
	  return ColElement;
	}(BaseElement);
	
	customElements.define('ons-col', ColElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var DialogAnimator = function (_BaseAnimator) {
	  inherits(DialogAnimator, _BaseAnimator);
	
	  function DialogAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'linear' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.2 : _ref$duration;
	
	    classCallCheck(this, DialogAnimator);
	    return possibleConstructorReturn(this, (DialogAnimator.__proto__ || Object.getPrototypeOf(DialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	  }
	
	  /**
	   * @param {HTMLElement} dialog
	   * @param {Function} done
	   */
	
	
	  createClass(DialogAnimator, [{
	    key: 'show',
	    value: function show(dialog, done) {
	      done();
	    }
	
	    /**
	     * @param {HTMLElement} dialog
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(dialog, done) {
	      done();
	    }
	  }]);
	  return DialogAnimator;
	}(BaseAnimator);
	
	/**
	 * Android style animator for dialog.
	 */
	var AndroidDialogAnimator = function (_DialogAnimator) {
	  inherits(AndroidDialogAnimator, _DialogAnimator);
	
	  function AndroidDialogAnimator() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref2$timing = _ref2.timing,
	        timing = _ref2$timing === undefined ? 'ease-in-out' : _ref2$timing,
	        _ref2$delay = _ref2.delay,
	        delay = _ref2$delay === undefined ? 0 : _ref2$delay,
	        _ref2$duration = _ref2.duration,
	        duration = _ref2$duration === undefined ? 0.3 : _ref2$duration;
	
	    classCallCheck(this, AndroidDialogAnimator);
	    return possibleConstructorReturn(this, (AndroidDialogAnimator.__proto__ || Object.getPrototypeOf(AndroidDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	  }
	
	  /**
	   * @param {Object} dialog
	   * @param {Function} callback
	   */
	
	
	  createClass(AndroidDialogAnimator, [{
	    key: 'show',
	    value: function show(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 0
	      }).wait(this.delay).queue({
	        opacity: 1.0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          transform: 'translate3d(-50%, -60%, 0)',
	          opacity: 0.0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0)',
	          opacity: 1.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	
	    /**
	     * @param {Object} dialog
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 1.0
	      }).wait(this.delay).queue({
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0)',
	          opacity: 1.0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3d(-50%, -60%, 0)',
	          opacity: 0.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	  }]);
	  return AndroidDialogAnimator;
	}(DialogAnimator);
	
	/**
	 * iOS style animator for dialog.
	 */
	var IOSDialogAnimator = function (_DialogAnimator2) {
	  inherits(IOSDialogAnimator, _DialogAnimator2);
	
	  function IOSDialogAnimator() {
	    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref3$timing = _ref3.timing,
	        timing = _ref3$timing === undefined ? 'ease-in-out' : _ref3$timing,
	        _ref3$delay = _ref3.delay,
	        delay = _ref3$delay === undefined ? 0 : _ref3$delay,
	        _ref3$duration = _ref3.duration,
	        duration = _ref3$duration === undefined ? 0.2 : _ref3$duration;
	
	    classCallCheck(this, IOSDialogAnimator);
	
	    var _this3 = possibleConstructorReturn(this, (IOSDialogAnimator.__proto__ || Object.getPrototypeOf(IOSDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	
	    _this3.bodyHeight = document.body.clientHeight; // avoid Forced Synchronous Layout
	    return _this3;
	  }
	
	  /**
	   * @param {Object} dialog
	   * @param {Function} callback
	   */
	
	
	  createClass(IOSDialogAnimator, [{
	    key: 'show',
	    value: function show(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 0
	      }).wait(this.delay).queue({
	        opacity: 1.0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          transform: 'translate3d(-50%, ' + (this.bodyHeight / 2.0 - 1) + 'px, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	
	    /**
	     * @param {Object} dialog
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 1.0
	      }).wait(this.delay).queue({
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          transform: 'translate3d(-50%, -50%, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3d(-50%, ' + (this.bodyHeight / 2.0 - 1) + 'px, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	  }]);
	  return IOSDialogAnimator;
	}(DialogAnimator);
	
	/**
	 * Slide animator for dialog.
	 */
	var SlideDialogAnimator = function (_DialogAnimator3) {
	  inherits(SlideDialogAnimator, _DialogAnimator3);
	
	  function SlideDialogAnimator() {
	    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref4$timing = _ref4.timing,
	        timing = _ref4$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref4$timing,
	        _ref4$delay = _ref4.delay,
	        delay = _ref4$delay === undefined ? 0 : _ref4$delay,
	        _ref4$duration = _ref4.duration,
	        duration = _ref4$duration === undefined ? 0.2 : _ref4$duration;
	
	    classCallCheck(this, SlideDialogAnimator);
	
	    var _this4 = possibleConstructorReturn(this, (SlideDialogAnimator.__proto__ || Object.getPrototypeOf(SlideDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	
	    _this4.bodyHeight = document.body.clientHeight; // avoid Forced Synchronous Layout
	    return _this4;
	  }
	
	  /**
	   * @param {Object} dialog
	   * @param {Function} callback
	   */
	
	
	  createClass(SlideDialogAnimator, [{
	    key: 'show',
	    value: function show(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 0
	      }).wait(this.delay).queue({
	        opacity: 1.0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          // FIXME: This should avoid Forced Synchronous Layout. Otherwise, fade animation of mask will be broken.
	          transform: 'translate3d(-50%, ' + (-(this.bodyHeight / 2.0) + 1 - dialog._dialog.clientHeight) + 'px, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(-50%, -50%, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	
	    /**
	     * @param {Object} dialog
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(dialog, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit.runAll(Animit(dialog._mask).queue({
	        opacity: 1.0
	      }).wait(this.delay).queue({
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(dialog._dialog).saveStyle().queue({
	        css: {
	          transform: 'translate3D(-50%, -50%, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          // FIXME: This should avoid Forced Synchronous Layout. Otherwise, fade animation of mask will be broken.
	          transform: 'translate3d(-50%, ' + (-(this.bodyHeight / 2.0) + 1 - dialog._dialog.clientHeight) + 'px, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        callback();
	        done();
	      }));
	    }
	  }]);
	  return SlideDialogAnimator;
	}(DialogAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$5 = {
	  '.dialog': 'dialog--*',
	  '.dialog-container': 'dialog-container--*',
	  '.dialog-mask': 'dialog-mask--*'
	};
	
	var _animatorDict$1 = {
	  'default': function _default() {
	    return platform.isAndroid() ? AndroidDialogAnimator : IOSDialogAnimator;
	  },
	  'slide': SlideDialogAnimator,
	  'none': DialogAnimator
	};
	
	/**
	 * @element ons-dialog
	 * @category dialog
	 * @description
	 *   [en]
	 *     Dialog that is displayed on top of current screen. As opposed to the `<ons-alert-dialog>` element, this component can contain any kind of content.
	 *
	 *     To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createDialog(template)` utility function and the `<ons-template>` tag.
	 *
	 *     The dialog is useful for displaying menus, additional information or to ask the user to make a decision.
	 *
	 *     It will automatically be displayed as Material Design when running on an Android device.
	 *   [/en]
	 *   [ja][/ja]
	 * @modifier material
	 *   [en]Display a Material Design dialog.[/en]
	 *   [ja]マテリアルデザインのダイアログを表示します。[/ja]
	 * @codepen zxxaGa
	 * @tutorial vanilla/Reference/dialog
	 * @guide dialogs
	 *   [en]Dialog components[/en]
	 *   [ja]Dialog components[/ja]
	 * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]
	 * @seealso ons-alert-dialog
	 *   [en]`<ons-alert-dialog>` component[/en]
	 *   [ja]ons-alert-dialogコンポーネント[/ja]
	 * @seealso ons-popover
	 *   [en]`<ons-popover>` component[/en]
	 *   [ja]ons-popoverコンポーネント[/ja]
	 * @seealso ons-modal
	 *   [en]`<ons-modal>` component[/en]
	 *   [ja]ons-modalコンポーネント[/ja]
	 * @example
	 * <ons-dialog id="dialog">
	 *   <p>This is a dialog!</p>
	 * </ons-dialog>
	 *
	 * <script>
	 *   document.getElementById('dialog').show();
	 * </script>
	 */
	
	var DialogElement = function (_BaseDialogElement) {
	  inherits(DialogElement, _BaseDialogElement);
	
	  function DialogElement() {
	    classCallCheck(this, DialogElement);
	    return possibleConstructorReturn(this, (DialogElement.__proto__ || Object.getPrototypeOf(DialogElement)).apply(this, arguments));
	  }
	
	  createClass(DialogElement, [{
	    key: 'init',
	
	
	    /**
	     * @event preshow
	     * @description
	     * [en]Fired just before the dialog is displayed.[/en]
	     * [ja]ダイアログが表示される直前に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.dialog
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Execute this function to stop the dialog from being shown.[/en]
	     *   [ja]この関数を実行すると、ダイアログの表示がキャンセルされます。[/ja]
	     */
	
	    /**
	     * @event postshow
	     * @description
	     * [en]Fired just after the dialog is displayed.[/en]
	     * [ja]ダイアログが表示された直後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.dialog
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     */
	
	    /**
	     * @event prehide
	     * @description
	     * [en]Fired just before the dialog is hidden.[/en]
	     * [ja]ダイアログが隠れる直前に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.dialog
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Execute this function to stop the dialog from being hidden.[/en]
	     *   [ja]この関数を実行すると、ダイアログの非表示がキャンセルされます。[/ja]
	     */
	
	    /**
	     * @event posthide
	     * @description
	     * [en]Fired just after the dialog is hidden.[/en]
	     * [ja]ダイアログが隠れた後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.dialog
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     */
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *  [en]The appearance of the dialog.[/en]
	     *  [ja]ダイアログの表現を指定します。[/ja]
	     */
	
	    /**
	     * @attribute cancelable
	     * @description
	     *  [en]If this attribute is set the dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]
	     *  [ja][/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *  [en]If this attribute is set the dialog is disabled.[/en]
	     *  [ja]この属性がある時、ダイアログはdisabled状態になります。[/ja]
	     */
	
	    /**
	     * @attribute animation
	     * @type {String}
	     * @default default
	     * @description
	     *  [en]The animation used when showing and hiding the dialog. Can be either `"none"` or `"default"`.[/en]
	     *  [ja]ダイアログを表示する際のアニメーション名を指定します。"none"もしくは"default"を指定できます。[/ja]
	     */
	
	    /**
	     * @attribute animation-options
	     * @type {Expression}
	     * @description
	     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]
	     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/ja]
	     */
	
	    /**
	     * @attribute mask-color
	     * @type {String}
	     * @default rgba(0, 0, 0, 0.2)
	     * @description
	     *  [en]Color of the background mask. Default is `"rgba(0, 0, 0, 0.2)"`.[/en]
	     *  [ja]背景のマスクの色を指定します。"rgba(0, 0, 0, 0.2)"がデフォルト値です。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      get$1(DialogElement.prototype.__proto__ || Object.getPrototypeOf(DialogElement.prototype), 'init', this).call(this);
	      contentReady(this, function () {
	        return _this2._compile();
	      });
	    }
	  }, {
	    key: '_updateAnimatorFactory',
	    value: function _updateAnimatorFactory() {
	      return new AnimatorFactory({
	        animators: _animatorDict$1,
	        baseClass: DialogAnimator,
	        baseClassName: 'DialogAnimator',
	        defaultAnimation: this.getAttribute('animation')
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      this.style.display = 'none';
	      this.style.zIndex = 10001;
	
	      /* Expected result:
	       *   <ons-dialog>
	       *     <div class="dialog-mask"></div>
	       *     <div class="dialog">
	       *       <div class="dialog-container">...</div>
	       *     </div>
	       *   </ons-dialog>
	       */
	
	      if (!this._dialog) {
	        var dialog = document.createElement('div');
	        dialog.classList.add('dialog');
	
	        var container = document.createElement('div');
	        container.classList.add('dialog-container');
	        while (this.firstChild) {
	          container.appendChild(this.firstChild);
	        }
	        dialog.appendChild(container);
	
	        this.appendChild(dialog);
	      }
	
	      if (!this._mask) {
	        var mask = document.createElement('div');
	        mask.classList.add('dialog-mask');
	        this.insertBefore(mask, this.firstChild);
	      }
	
	      this._dialog.style.zIndex = 20001;
	      this._mask.style.zIndex = 20000;
	
	      this.setAttribute('status-bar-fill', '');
	
	      ModifierUtil.initModifier(this, this._scheme);
	    }
	
	    /**
	     * @property onDeviceBackButton
	     * @type {Object}
	     * @description
	     *   [en]Back-button handler.[/en]
	     *   [ja]バックボタンハンドラ。[/ja]
	     */
	
	    /**
	     * @method show
	     * @signature show([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name. Available animations are `"none"` and `"slide"`.[/en]
	     *   [ja]アニメーション名を指定します。"none", "slide"のいずれかを指定します。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]
	     * @param {Function} [options.callback]
	     *   [en]This function is called after the dialog has been revealed.[/en]
	     *   [ja]ダイアログが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]
	     * @description
	     *  [en]Show the dialog.[/en]
	     *  [ja]ダイアログを開きます。[/ja]
	     * @return {Promise} Resolves to the displayed element.
	     */
	
	    /**
	     * @method hide
	     * @signature hide([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name. Available animations are `"none"` and `"slide"`.[/en]
	     *   [ja]アニメーション名を指定します。"none", "slide"のいずれかを指定できます。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/ja]
	     * @param {Function} [options.callback]
	     *   [en]This functions is called after the dialog has been hidden.[/en]
	     *   [ja]ダイアログが隠れた後に呼び出される関数オブジェクトを指定します。[/ja]
	     * @description
	     *   [en]Hide the dialog.[/en]
	     *   [ja]ダイアログを閉じます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the hidden element[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @property visible
	     * @readonly
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the dialog is visible or not.[/en]
	     *   [ja]要素が見える場合に`true`。[/ja]
	     */
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the dialog is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	    /**
	     * @property cancelable
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the dialog is cancelable or not. A cancelable dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @param {String} name
	     * @param {DialogAnimator} Animator
	     */
	
	  }, {
	    key: '_scheme',
	    get: function get() {
	      return scheme$5;
	    }
	  }, {
	    key: '_mask',
	    get: function get() {
	      return util.findChild(this, '.dialog-mask');
	    }
	  }, {
	    key: '_dialog',
	    get: function get() {
	      return util.findChild(this, '.dialog');
	    }
	  }], [{
	    key: 'registerAnimator',
	    value: function registerAnimator(name, Animator) {
	      if (!(Animator.prototype instanceof DialogAnimator)) {
	        throw new Error('"Animator" param must inherit OnsDialogElement.DialogAnimator');
	      }
	      _animatorDict$1[name] = Animator;
	    }
	  }, {
	    key: 'animators',
	    get: function get() {
	      return _animatorDict$1;
	    }
	  }, {
	    key: 'DialogAnimator',
	    get: function get() {
	      return DialogAnimator;
	    }
	  }]);
	  return DialogElement;
	}(BaseDialogElement);
	
	customElements.define('ons-dialog', DialogElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	   http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	*/
	
	var defaultClassName$3 = 'fab';
	
	var scheme$6 = {
	  '': 'fab--*',
	  '.fab__icon': 'fab--*__icon'
	};
	
	/**
	 * @element ons-fab
	 * @category form
	 * @description
	 *   [en]
	 *     The Floating action button is a circular button defined in the [Material Design specification](https://www.google.com/design/spec/components/buttons-floating-action-button.html). They are often used to promote the primary action of the app.
	 *
	 *     It can be displayed either as an inline element or in one of the corners. Normally it will be positioned in the lower right corner of the screen.
	 *   [/en]
	 *   [ja][/ja]
	 * @tutorial vanilla/Reference/fab
	 * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]
	 * @seealso ons-speed-dial
	 *   [en]The `<ons-speed-dial>` component is a Floating action button that displays a menu when tapped.[/en]
	 *   [ja][/ja]
	 */
	
	var FabElement = function (_BaseElement) {
	  inherits(FabElement, _BaseElement);
	
	  function FabElement() {
	    classCallCheck(this, FabElement);
	    return possibleConstructorReturn(this, (FabElement.__proto__ || Object.getPrototypeOf(FabElement)).apply(this, arguments));
	  }
	
	  createClass(FabElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *  [en]The appearance of the button.[/en]
	     *  [ja]ボタンの表現を指定します。[/ja]
	     */
	
	    /**
	     * @attribute ripple
	     * @description
	     *  [en]If this attribute is defined, the button will have a ripple effect when tapped.[/en]
	     *  [ja][/ja]
	     */
	
	    /**
	     * @attribute position
	     * @type {String}
	     * @description
	     *  [en]The position of the button. Should be a string like `"bottom right"` or `"top left"`. If this attribute is not defined it will be displayed as an inline element.[/en]
	     *  [ja][/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *   [en]Specify if button should be disabled.[/en]
	     *   [ja]ボタンを無効化する場合は指定します。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      // The following statements can be executed before contentReady
	      // since these do not access the children
	      this.hide();
	      this.classList.add(defaultClassName$3);
	
	      contentReady(this, function () {
	        _this2._compile();
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      if (!util.findChild(this, '.fab__icon')) {
	        var content = document.createElement('span');
	        content.classList.add('fab__icon');
	
	        util.arrayFrom(this.childNodes).forEach(function (element) {
	          if (!element.tagName || element.tagName.toLowerCase() !== 'ons-ripple') {
	            content.appendChild(element);
	          }
	        });
	        this.appendChild(content);
	      }
	
	      this._updateRipple();
	
	      ModifierUtil.initModifier(this, scheme$6);
	
	      this._updatePosition();
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this3 = this;
	
	      setImmediate(function () {
	        return _this3.show();
	      });
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$3)) {
	            this.className = defaultClassName$3 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$6);
	          break;
	        case 'ripple':
	          this._updateRipple();
	          break;
	        case 'position':
	          this._updatePosition();
	          break;
	      }
	    }
	  }, {
	    key: '_show',
	    value: function _show() {
	      this.show();
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      var _this4 = this;
	
	      setImmediate(function () {
	        return _this4.hide();
	      });
	    }
	  }, {
	    key: '_updateRipple',
	    value: function _updateRipple() {
	      util.updateRipple(this);
	    }
	  }, {
	    key: '_updatePosition',
	    value: function _updatePosition() {
	      var position = this.getAttribute('position');
	      this.classList.remove('fab--top__left', 'fab--bottom__right', 'fab--bottom__left', 'fab--top__right', 'fab--top__center', 'fab--bottom__center');
	      switch (position) {
	        case 'top right':
	        case 'right top':
	          this.classList.add('fab--top__right');
	          break;
	        case 'top left':
	        case 'left top':
	          this.classList.add('fab--top__left');
	          break;
	        case 'bottom right':
	        case 'right bottom':
	          this.classList.add('fab--bottom__right');
	          break;
	        case 'bottom left':
	        case 'left bottom':
	          this.classList.add('fab--bottom__left');
	          break;
	        case 'center top':
	        case 'top center':
	          this.classList.add('fab--top__center');
	          break;
	        case 'center bottom':
	        case 'bottom center':
	          this.classList.add('fab--bottom__center');
	          break;
	        default:
	          break;
	      }
	    }
	
	    /**
	     * @method show
	     * @signature show()
	     * @description
	     *  [en]Show the floating action button.[/en]
	     *  [ja][/ja]
	     */
	
	  }, {
	    key: 'show',
	    value: function show() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      this.style.transform = 'scale(1)';
	      this.style.webkitTransform = 'scale(1)';
	    }
	
	    /**
	     * @method hide
	     * @signature hide()
	     * @description
	     *  [en]Hide the floating action button.[/en]
	     *  [ja][/ja]
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      this.style.transform = 'scale(0)';
	      this.style.webkitTransform = 'scale(0)';
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'toggle',
	
	
	    /**
	     * @method toggle
	     * @signature toggle()
	     * @description
	     *   [en]Toggle the visibility of the button.[/en]
	     *   [ja][/ja]
	     */
	    value: function toggle() {
	      this.visible ? this.hide() : this.show();
	    }
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	
	    /**
	     * @property visible
	     * @readonly
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is visible or not.[/en]
	     *   [ja]要素が見える場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'visible',
	    get: function get() {
	      return this.style.transform === 'scale(1)' && this.style.display !== 'none';
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'ripple', 'position', 'class'];
	    }
	  }]);
	  return FabElement;
	}(BaseElement);
	
	customElements.define('ons-fab', FabElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @element ons-gesture-detector
	 * @category gesture
	 * @description
	 *   [en]
	 *     Component to detect finger gestures within the wrapped element. Following gestures are supported:
	 *     - Drag gestures: `drag`, `dragleft`, `dragright`, `dragup`, `dragdown`
	 *     - Hold gestures: `hold`, `release`
	 *     - Swipe gestures: `swipe`, `swipeleft`, `swiperight`, `swipeup`, `swipedown`
	 *     - Tap gestures: `tap`, `doubletap`
	 *     - Pinch gestures: `pinch`, `pinchin`, `pinchout`
	 *     - Other gestures: `touch`, `transform`, `rotate`
	 *   [/en]
	 *   [ja]要素内のジェスチャー操作を検知します。詳しくはガイドを参照してください。[/ja]
	 * @guide gesture-detector
	 *   [en]Detecting finger gestures[/en]
	 *   [ja]ジェスチャー操作の検知[/ja]
	 * @example
	 * <ons-gesture-detector>
	 *   <div id="detect-area" style="width: 100px; height: 100px;">
	 *     Swipe Here
	 *   </div>
	 * </ons-gesture-detector>
	 *
	 * <script>
	 *   document.addEventListener('swipeleft', function(event) {
	 *     if (event.target.matches('#detect-area')) {
	 *       console.log('Swipe left is detected.');
	 *     }
	 *   });
	 * </script>
	 */
	
	var GestureDetectorElement = function (_BaseElement) {
	  inherits(GestureDetectorElement, _BaseElement);
	
	  function GestureDetectorElement() {
	    classCallCheck(this, GestureDetectorElement);
	    return possibleConstructorReturn(this, (GestureDetectorElement.__proto__ || Object.getPrototypeOf(GestureDetectorElement)).apply(this, arguments));
	  }
	
	  createClass(GestureDetectorElement, [{
	    key: 'init',
	    value: function init() {
	      this._gestureDetector = new GestureDetector(this);
	    }
	  }]);
	  return GestureDetectorElement;
	}(BaseElement);
	
	customElements.define('ons-gesture-detector', GestureDetectorElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @element ons-icon
	 * @category visual
	 * @description
	 *   [en]
	 *     Displays an icon. The following icon suites are available:
	 *
	 *     * [Font Awesome](https://fortawesome.github.io/Font-Awesome/)
	 *     * [Ionicons](http://ionicons.com/)
	 *     * [Material Design Iconic Font](http://zavoloklom.github.io/material-design-iconic-font/)
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen xAhvg
	 * @tutorial vanilla/Reference/icon
	 * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]
	 * @example
	 * <ons-icon
	 *   icon="md-car"
	 *   size="20px"
	 *   style="color: red">
	 * </ons-icon>
	 *
	 * <ons-button>
	 *   <ons-icon icon="md-car"></ons-icon>
	 *   Car
	 * </ons-button>
	 */
	
	var IconElement = function (_BaseElement) {
	  inherits(IconElement, _BaseElement);
	
	  function IconElement() {
	    classCallCheck(this, IconElement);
	    return possibleConstructorReturn(this, (IconElement.__proto__ || Object.getPrototypeOf(IconElement)).apply(this, arguments));
	  }
	
	  createClass(IconElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute icon
	     * @type {String}
	     * @description
	     *   [en]
	     *     The icon name. `"md-"` prefix for Material Icons, `"fa-"` for Font Awesome and `"ion-"` prefix for Ionicons.
	     *
	     *     See all available icons on their respective sites:
	     *
	     *     * [Font Awesome](https://fortawesome.github.io/Font-Awesome/)
	     *     * [Ionicons](http://ionicons.com)
	     *     * [Material Design Iconic Font](http://zavoloklom.github.io/material-design-iconic-font/)
	     *
	     *     Icons can also be styled based on modifier presence. Add comma-separated icons with `"modifierName:"` prefix.
	     *
	     *     The code:
	     *
	     *     ```
	     *     <ons-icon
	     *       icon="ion-edit, material:md-edit">
	     *     </ons-icon>
	     *     ```
	     *
	     *     will display `"md-edit"` for Material Design and `"ion-edit"` as the default icon.
	     *   [/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @attribute size
	     * @type {String}
	     * @description
	     *   [en]
	     *     The sizes of the icon. Valid values are lg, 2x, 3x, 4x, 5x, or in the size in pixels.
	     *     Icons can also be styled based on modifier presence. Add comma-separated icons with `"modifierName:"` prefix.
	     *
	     *     The code:
	     *
	     *     ```
	     *     <ons-icon
	     *       icon="ion-edit"
	     *       size="32px, material:24px">
	     *     </ons-icon>
	     *     ```
	     *
	     *     will render as a `24px` icon if the `"material"` modifier is present and `32px` otherwise.
	     *   [/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @attribute rotate
	     * @type {Number}
	     * @description
	     *   [en]Number of degrees to rotate the icon. Valid values are 90, 180 and 270.[/en]
	     *   [ja]アイコンを回転して表示します。90, 180, 270から指定できます。[/ja]
	     */
	
	    /**
	     * @attribute fixed-width
	     * @type {Boolean}
	     * @default false
	     * @description
	     *  [en]When used in a list, you want the icons to have the same width so that they align vertically by defining this attribute.[/en]
	     *  [ja][/ja]
	     */
	
	    /**
	     * @attribute spin
	     * @description
	     *   [en]Specify whether the icon should be spinning.[/en]
	     *   [ja]アイコンを回転するかどうかを指定します。[/ja]
	     */
	
	    value: function init() {
	      this._compile();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (['icon', 'size', 'modifier'].indexOf(name) !== -1) {
	        this._update();
	      }
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      var _this2 = this;
	
	      autoStyle.prepare(this);
	      this._update();
	      setImmediate(function () {
	        return _this2._update();
	      }); // Fix for bindings
	    }
	  }, {
	    key: '_update',
	    value: function _update() {
	      var _this3 = this;
	
	      this._cleanClassAttribute();
	
	      var _buildClassAndStyle2 = this._buildClassAndStyle(this._getAttribute('icon'), this._getAttribute('size')),
	          classList = _buildClassAndStyle2.classList,
	          style = _buildClassAndStyle2.style;
	
	      util.extend(this.style, style);
	
	      classList.forEach(function (className) {
	        return _this3.classList.add(className);
	      });
	    }
	  }, {
	    key: '_getAttribute',
	    value: function _getAttribute(attr) {
	      var parts = (this.getAttribute(attr) || '').split(/\s*,\s*/);
	      var def = parts[0];
	      var md = parts[1];
	      md = (md || '').split(/\s*:\s*/);
	      return (util.hasModifier(this, md[0]) ? md[1] : def) || '';
	    }
	
	    /**
	     * Remove unneeded class value.
	     */
	
	  }, {
	    key: '_cleanClassAttribute',
	    value: function _cleanClassAttribute() {
	      var _this4 = this;
	
	      util.arrayFrom(this.classList).filter(function (className) {
	        return (/^(fa$|fa-|ion-|zmdi-)/.test(className)
	        );
	      }).forEach(function (className) {
	        return _this4.classList.remove(className);
	      });
	
	      this.classList.remove('zmdi');
	      this.classList.remove('ons-icon--ion');
	    }
	  }, {
	    key: '_buildClassAndStyle',
	    value: function _buildClassAndStyle(iconName, size) {
	      var classList = ['ons-icon'];
	      var style = {};
	
	      // Icon
	      if (iconName.indexOf('ion-') === 0) {
	        classList.push(iconName);
	        classList.push('ons-icon--ion');
	      } else if (iconName.indexOf('fa-') === 0) {
	        classList.push(iconName);
	        classList.push('fa');
	      } else if (iconName.indexOf('md-') === 0) {
	        classList.push('zmdi');
	        classList.push('zmdi-' + iconName.split(/\-(.+)?/)[1]);
	      } else {
	        classList.push('fa');
	        classList.push('fa-' + iconName);
	      }
	
	      // Size
	      if (size.match(/^[1-5]x|lg$/)) {
	        classList.push('fa-' + size);
	        this.style.removeProperty('font-size');
	      } else {
	        style.fontSize = size;
	      }
	
	      return {
	        classList: classList,
	        style: style
	      };
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['icon', 'size', 'modifier'];
	    }
	  }]);
	  return IconElement;
	}(BaseElement);
	
	customElements.define('ons-icon', IconElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	   http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	*/
	
	/**
	 * @element ons-lazy-repeat
	 * @category list
	 * @description
	 *   [en]
	 *     Using this component a list with millions of items can be rendered without a drop in performance.
	 *     It does that by "lazily" loading elements into the DOM when they come into view and
	 *     removing items from the DOM when they are not visible.
	 *   [/en]
	 *   [ja]
	 *     このコンポーネント内で描画されるアイテムのDOM要素の読み込みは、画面に見えそうになった時まで自動的に遅延され、
	 *     画面から見えなくなった場合にはその要素は動的にアンロードされます。
	 *     このコンポーネントを使うことで、パフォーマンスを劣化させること無しに巨大な数の要素を描画できます。
	 *   [/ja]
	 * @codepen QwrGBm
	 * @tutorial vanilla/Reference/lazy-repeat
	 * @seealso ons-list
	 *   [en]The `<ons-list>` element is used to render a list.[/en]
	 *   [ja]`<ons-list>`要素はリストを描画するのに使われます。[/ja]
	 * @guide infinite-scroll
	 *   [en]Loading more items on infinite scroll[/en]
	 *   [ja]Loading more items on infinite scroll[/ja]
	 * @example
	 * <script>
	 *   window.addEventListener('load', function() {
	 *     var lazyRepeat = document.querySelector('#list');
	 *     lazyRepeat.delegate = {
	 *      createItemContent: function(i, template) {
	 *        var dom = template.cloneNode(true);
	 *        dom.innerText = i;
	 *
	 *        return dom;
	 *      },
	 *      countItems: function() {
	 *        return 10000000;
	 *      },
	 *      destroyItem: function(index, item) {
	 *        console.log('Destroyed item with index: ' + index);
	 *      }
	 *     };
	 *   });
	 * </script>
	 *
	 * <ons-list id="list">
	 *   <ons-lazy-repeat>
	 *     <ons-list-item></ons-list-item>
	 *   </ons-lazy-repeat>
	 * </ons-list>
	 */
	
	var LazyRepeatElement = function (_BaseElement) {
	  inherits(LazyRepeatElement, _BaseElement);
	
	  function LazyRepeatElement() {
	    classCallCheck(this, LazyRepeatElement);
	    return possibleConstructorReturn(this, (LazyRepeatElement.__proto__ || Object.getPrototypeOf(LazyRepeatElement)).apply(this, arguments));
	  }
	
	  createClass(LazyRepeatElement, [{
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      // not very good idea and also not documented
	      if (this.hasAttribute('delegate')) {
	        this.delegate = window[this.getAttribute('delegate')];
	      }
	    }
	
	    /**
	     * @property delegate
	     * @type {Object}
	     * @description
	     *  [en]Specify a delegate object to load and unload item elements.[/en]
	     *  [ja]要素のロード、アンロードなどの処理を委譲するオブジェクトを指定します。[/ja]
	     */
	
	    /**
	     * @property delegate.createItemContent
	     * @type {Function}
	     * @description
	     *   [en]
	     *     This function should return a `HTMLElement`.
	     *
	     *     To help rendering the element, the current index and a template is supplied as arguments. The template is the initial content of the `<ons-lazy-repeat>` element.
	     *   [/en]
	     *   [ja]
	     *     この関数は`HTMLElement`を返してください。
	     *     要素を生成しやすくするために、現在のアイテムのインデックスとテンプレートが引数に渡されます。
	     *     このテンプレートは、`<ons-lazy-repeat>`要素のコンテンツが渡されます。
	     *   [/ja]
	     */
	
	    /**
	     * @property delegate.countItems
	     * @type {Function}
	     * @description
	     *   [en]Should return the number of items in the list.[/en]
	     *   [ja]リスト内のアイテム数を返してください。[/ja]
	     */
	
	    /**
	     * @property delegate.calculateItemHeight
	     * @type {Function}
	     * @description
	     *   [en]
	     *     Should return the height of an item. The index is provided as an argument.
	     *
	     *     This is important when rendering lists where the items have different height.
	     *
	     *     The function is optional and if it isn't present the height of the first item will be automatically calculated and used for all other items.
	     *   [/en]
	     *   [ja]
	     *     アイテムの高さ(ピクセル)を返してください。アイテムのインデックス値は引数で渡されます。
	     *     この関数は、それぞれのアイムが違った高さを持つリストをレンダリングする際に重要です。
	     *     この関数はオプショナルです。もしこの関数が無い場合には、
	     *     最初のアイテムの高さが他のすべてのアイテムの高さとして利用されます。
	     *   [/ja]
	     */
	
	    /**
	     * @property delegate.destroyItem
	     * @type {Function}
	     * @description
	     *   [en]
	     *     This function is used called when an item is removed from the DOM. The index and DOM element is provided as arguments.
	     *
	     *     The function is optional but may be important in order to avoid memory leaks.
	     *   [/en]
	     *   [ja]
	     *     この関数は、あるアイテムがDOMツリーから除かれた時に呼び出されます。
	     *     アイテムのインデックス値とDOM要素が引数として渡されます。
	     *     この関数はオプショナルですが、各アイテムの後処理が必要な場合にはメモリーリークを避けるために重要です。
	     *   [/ja]
	     */
	
	  }, {
	    key: 'refresh',
	
	
	    /**
	     * @method refresh
	     * @signature refresh()
	     * @description
	     *   [en]Refresh the list. Use this method when the data has changed.[/en]
	     *   [ja]リストを更新します。もしデータが変わった場合にはこのメソッドを使ってください。[/ja]
	     */
	    value: function refresh() {
	      this._lazyRepeatProvider && this._lazyRepeatProvider.refresh();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {}
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      if (this._lazyRepeatProvider) {
	        this._lazyRepeatProvider.destroy();
	        this._lazyRepeatProvider = null;
	      }
	    }
	  }, {
	    key: 'delegate',
	    set: function set(userDelegate) {
	      this._lazyRepeatProvider && this._lazyRepeatProvider.destroy();
	
	      if (!this._templateElement && this.children[0]) {
	        this._templateElement = this.removeChild(this.children[0]);
	      }
	
	      var delegate = new LazyRepeatDelegate(userDelegate, this._templateElement || null);
	      this._lazyRepeatProvider = new LazyRepeatProvider(this.parentElement, delegate);
	    },
	    get: function get() {
	      throw new Error('This property can only be used to set the delegate object.');
	    }
	  }]);
	  return LazyRepeatElement;
	}(BaseElement);
	
	customElements.define('ons-lazy-repeat', LazyRepeatElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$4 = 'list-header';
	var scheme$7 = { '': 'list-header--*' };
	
	/**
	 * @element ons-list-header
	 * @category list
	 * @description
	 *   [en]Header element for list items. Must be put inside the `<ons-list>` component.[/en]
	 *   [ja]リスト要素に使用するヘッダー用コンポーネント。ons-listと共に使用します。[/ja]
	 * @seealso ons-list
	 *   [en]The `<ons-list>` component[/en]
	 *   [ja]ons-listコンポーネント[/ja]
	 * @seealso ons-list-item
	 *   [en]The `<ons-list-item>` component[/en]
	 *   [ja]ons-list-itemコンポーネント[/ja]
	 * @guide lists [en]Using lists[/en][ja]リストを使う[/ja]
	 * @codepen yxcCt
	 * @tutorial vanilla/Reference/list
	 * @modifier material
	 *   [en]Display a Material Design list header.[/en]
	 *   [ja][/ja]
	 * @example
	 * <ons-list>
	 *   <ons-list-header>Header Text</ons-list-header>
	 *   <ons-list-item>Item</ons-list-item>
	 *   <ons-list-item>Item</ons-list-item>
	 * </ons-list>
	 */
	
	var ListHeaderElement = function (_BaseElement) {
	  inherits(ListHeaderElement, _BaseElement);
	
	  function ListHeaderElement() {
	    classCallCheck(this, ListHeaderElement);
	    return possibleConstructorReturn(this, (ListHeaderElement.__proto__ || Object.getPrototypeOf(ListHeaderElement)).apply(this, arguments));
	  }
	
	  createClass(ListHeaderElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]The appearance of the list header.[/en]
	     *   [ja]ヘッダーの表現を指定します。[/ja]
	     */
	
	    value: function init() {
	      this._compile();
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	      this.classList.add(defaultClassName$4);
	      ModifierUtil.initModifier(this, scheme$7);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$4)) {
	            this.className = defaultClassName$4 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$7);
	          break;
	      }
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class'];
	    }
	  }]);
	  return ListHeaderElement;
	}(BaseElement);
	
	customElements.define('ons-list-header', ListHeaderElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$5 = 'list-title';
	var scheme$8 = { '': 'list-title--*' };
	
	/**
	 * @element ons-list-title
	 * @category list
	 * @description
	 *   [en]Represents a list title.[/en]
	 *   [ja]リストのタイトルを表現します。[/ja]
	 * @example
	 * <ons-list-title>List Title</ons-list-title>
	 * <ons-list>
	 *   <ons-list-item>Item</ons-list-item>
	 * </ons-list>
	 * @modifier material
	 *   [en]Display a Material Design list title.[/en]
	 *   [ja][/ja]
	 */
	
	var ListTitleElement = function (_BaseElement) {
	  inherits(ListTitleElement, _BaseElement);
	
	  function ListTitleElement() {
	    classCallCheck(this, ListTitleElement);
	    return possibleConstructorReturn(this, (ListTitleElement.__proto__ || Object.getPrototypeOf(ListTitleElement)).apply(this, arguments));
	  }
	
	  createClass(ListTitleElement, [{
	    key: 'init',
	    value: function init() {
	      this._compile();
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	      this.classList.add(defaultClassName$5);
	      ModifierUtil.initModifier(this, scheme$8);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$5)) {
	            this.className = defaultClassName$5 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$8);
	          break;
	      }
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class'];
	    }
	  }]);
	  return ListTitleElement;
	}(BaseElement);
	
	customElements.define('ons-list-title', ListTitleElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$6 = 'list-item';
	var scheme$9 = {
	  '.list-item': 'list-item--*',
	  '.list-item__left': 'list-item--*__left',
	  '.list-item__center': 'list-item--*__center',
	  '.list-item__right': 'list-item--*__right',
	  '.list-item__label': 'list-item--*__label',
	  '.list-item__title': 'list-item--*__title',
	  '.list-item__subtitle': 'list-item--*__subtitle',
	  '.list-item__thumbnail': 'list-item--*__thumbnail',
	  '.list-item__icon': 'list-item--*__icon'
	};
	
	/**
	 * @element ons-list-item
	 * @category list
	 * @modifier tappable
	 *   [en]Make the list item change appearance when it's tapped. On iOS it is better to use the "tappable" and "tap-background-color" attribute for better behavior when scrolling.[/en]
	 *   [ja]タップやクリックした時に効果が表示されるようになります。[/ja]
	 * @modifier chevron
	 *   [en]Display a chevron at the right end of the list item and make it change appearance when tapped. The chevron is not displayed in Material Design.[/en]
	 *   [ja][/ja]
	 * @modifier longdivider
	 *   [en]Displays a long horizontal divider between items.[/en]
	 *   [ja][/ja]
	 * @modifier nodivider
	 *   [en]Removes the divider between list items.[/en]
	 *   [ja][/ja]
	 * @modifier material
	 *   [en]Display a Material Design list item.[/en]
	 *   [ja][/ja]
	 * @description
	 *   [en]
	 *     Component that represents each item in the list. Must be put inside the `<ons-list>` component.
	 *
	 *     The list item is composed of three parts that are represented with the `left`, `center` and `right` classes. These classes can be used to ensure that the content of the list items is properly aligned.
	 *
	 *     ```
	 *     <ons-list-item>
	 *       <div class="left">Left</div>
	 *       <div class="center">Center</div>
	 *       <div class="right">Right</div>
	 *     </ons-list-item>
	 *     ```
	 *
	 *     There is also a number of classes (prefixed with `list-item__*`) that help when putting things like icons and thumbnails into the list items.
	 *   [/en]
	 *   [ja][/ja]
	 * @seealso ons-list
	 *   [en]ons-list component[/en]
	 *   [ja]ons-listコンポーネント[/ja]
	 * @seealso ons-list-header
	 *   [en]ons-list-header component[/en]
	 *   [ja]ons-list-headerコンポーネント[/ja]
	 * @guide lists
	 *   [en]Using lists[/en]
	 *   [ja]リストを使う[/ja]
	 * @codepen yxcCt
	 * @tutorial vanilla/Reference/list
	 * @example
	 * <ons-list-item>
	 *   <div class="left">
	 *     <ons-icon icon="md-face" class="list-item__icon"></ons-icon>
	 *   </div>
	 *   <div class="center">
	 *     <div class="list-item__title">Title</div>
	 *     <div class="list-item__subtitle">Subtitle</div>
	 *   </div>
	 *   <div class="right">
	 *     <ons-switch></ons-switch>
	 *   </div>
	 * </ons-list-item>
	 */
	
	var ListItemElement = function (_BaseElement) {
	  inherits(ListItemElement, _BaseElement);
	
	  function ListItemElement() {
	    classCallCheck(this, ListItemElement);
	    return possibleConstructorReturn(this, (ListItemElement.__proto__ || Object.getPrototypeOf(ListItemElement)).apply(this, arguments));
	  }
	
	  createClass(ListItemElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]The appearance of the list item.[/en]
	     *   [ja]各要素の表現を指定します。[/ja]
	     */
	
	    /**
	     * @attribute lock-on-drag
	     * @type {String}
	     * @description
	     *   [en]Prevent vertical scrolling when the user drags horizontally.[/en]
	     *   [ja]この属性があると、ユーザーがこの要素を横方向にドラッグしている時に、縦方向のスクロールが起きないようになります。[/ja]
	     */
	
	    /**
	     * @attribute tappable
	     * @type {Boolean}
	     * @description
	     *   [en]Makes the element react to taps.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @attribute tap-background-color
	     * @type {Color}
	     * @description
	     *   [en] Changes the background color when tapped. For this to work, the attribute "tappable" needs to be set. The default color is "#d9d9d9". It will display as a ripple effect on Android.[/en]
	     *   [ja][/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        _this2._compile();
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      this.classList.add(defaultClassName$6);
	
	      var left = void 0,
	          center = void 0,
	          right = void 0;
	
	      for (var i = 0; i < this.children.length; i++) {
	        var el = this.children[i];
	
	        if (el.classList.contains('left')) {
	          el.classList.add('list-item__left');
	          left = el;
	        } else if (el.classList.contains('center')) {
	          center = el;
	        } else if (el.classList.contains('right')) {
	          el.classList.add('list-item__right');
	          right = el;
	        }
	      }
	
	      if (!center) {
	        center = document.createElement('div');
	
	        if (!left && !right) {
	          while (this.childNodes[0]) {
	            center.appendChild(this.childNodes[0]);
	          }
	        } else {
	          for (var _i = this.childNodes.length - 1; _i >= 0; _i--) {
	            var _el = this.childNodes[_i];
	            if (_el !== left && _el !== right) {
	              center.insertBefore(_el, center.firstChild);
	            }
	          }
	        }
	
	        this.insertBefore(center, right || null);
	      }
	
	      center.classList.add('center');
	      center.classList.add('list-item__center');
	
	      this._updateRipple();
	
	      ModifierUtil.initModifier(this, scheme$9);
	
	      autoStyle.prepare(this);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$6)) {
	            this.className = defaultClassName$6 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$9);
	          break;
	        case 'ripple':
	          this._updateRipple();
	          break;
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this.addEventListener('drag', this._onDrag);
	      this.addEventListener('touchstart', this._onTouch);
	      this.addEventListener('mousedown', this._onTouch);
	      this.addEventListener('touchend', this._onRelease);
	      this.addEventListener('touchmove', this._onRelease);
	      this.addEventListener('touchcancel', this._onRelease);
	      this.addEventListener('mouseup', this._onRelease);
	      this.addEventListener('mouseout', this._onRelease);
	      this.addEventListener('touchleave', this._onRelease);
	
	      this._originalBackgroundColor = this.style.backgroundColor;
	
	      this.tapped = false;
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this.removeEventListener('drag', this._onDrag);
	      this.removeEventListener('touchstart', this._onTouch);
	      this.removeEventListener('mousedown', this._onTouch);
	      this.removeEventListener('touchend', this._onRelease);
	      this.removeEventListener('touchmove', this._onRelease);
	      this.removeEventListener('touchcancel', this._onRelease);
	      this.removeEventListener('mouseup', this._onRelease);
	      this.removeEventListener('mouseout', this._onRelease);
	      this.removeEventListener('touchleave', this._onRelease);
	    }
	  }, {
	    key: '_updateRipple',
	    value: function _updateRipple() {
	      util.updateRipple(this);
	    }
	  }, {
	    key: '_onDrag',
	    value: function _onDrag(event) {
	      var gesture = event.gesture;
	      // Prevent vertical scrolling if the users pans left or right.
	      if (this._shouldLockOnDrag() && ['left', 'right'].indexOf(gesture.direction) > -1) {
	        gesture.preventDefault();
	      }
	    }
	  }, {
	    key: '_onTouch',
	    value: function _onTouch() {
	      if (this.tapped) {
	        return;
	      }
	
	      this.tapped = true;
	
	      this.style.transition = this._transition;
	      this.style.webkitTransition = this._transition;
	      this.style.MozTransition = this._transition;
	
	      if (this._tappable) {
	        if (this.style.backgroundColor) {
	          this._originalBackgroundColor = this.style.backgroundColor;
	        }
	
	        this.style.backgroundColor = this._tapBackgroundColor;
	        this.style.boxShadow = '0px -1px 0px 0px ' + this._tapBackgroundColor;
	      }
	    }
	  }, {
	    key: '_onRelease',
	    value: function _onRelease() {
	      this.tapped = false;
	
	      this.style.transition = '';
	      this.style.webkitTransition = '';
	      this.style.MozTransition = '';
	
	      this.style.backgroundColor = this._originalBackgroundColor || '';
	      this.style.boxShadow = '';
	    }
	  }, {
	    key: '_shouldLockOnDrag',
	    value: function _shouldLockOnDrag() {
	      return this.hasAttribute('lock-on-drag');
	    }
	  }, {
	    key: '_transition',
	    get: function get() {
	      return 'background-color 0.0s linear 0.02s, box-shadow 0.0s linear 0.02s';
	    }
	  }, {
	    key: '_tappable',
	    get: function get() {
	      return this.hasAttribute('tappable');
	    }
	  }, {
	    key: '_tapBackgroundColor',
	    get: function get() {
	      return this.getAttribute('tap-background-color') || '#d9d9d9';
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class', 'ripple'];
	    }
	  }]);
	  return ListItemElement;
	}(BaseElement);
	
	customElements.define('ons-list-item', ListItemElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$7 = 'list';
	var scheme$10 = { '': 'list--*' };
	
	/**
	 * @element ons-list
	 * @category list
	 * @modifier inset
	 *   [en]Inset list that doesn't cover the whole width of the parent.[/en]
	 *   [ja]親要素の画面いっぱいに広がらないリストを表示します。[/ja]
	 * @modifier noborder
	 *   [en]A list with no borders at the top and bottom.[/en]
	 *   [ja]リストの上下のボーダーが無いリストを表示します。[/ja]
	 * @description
	 *   [en]Component to define a list, and the container for ons-list-item(s).[/en]
	 *   [ja]リストを表現するためのコンポーネント。ons-list-itemのコンテナとして使用します。[/ja]
	 * @seealso ons-list-item
	 *   [en]ons-list-item component[/en]
	 *   [ja]ons-list-itemコンポーネント[/ja]
	 * @seealso ons-list-header
	 *   [en]ons-list-header component[/en]
	 *   [ja]ons-list-headerコンポーネント[/ja]
	 * @seealso ons-lazy-repeat
	 *   [en]ons-lazy-repeat component[/en]
	 *   [ja]ons-lazy-repeatコンポーネント[/ja]
	 * @guide lists
	 *   [en]Using lists[/en]
	 *   [ja]リストを使う[/ja]
	 * @guide infinite-scroll
	 *   [en]Loading more items on infinite scroll[/en]
	 *   [ja]Loading more items on infinite scroll[/ja]
	 * @codepen yxcCt
	 * @tutorial vanilla/Reference/list
	 * @example
	 * <ons-list>
	 *   <ons-list-header>Header Text</ons-list-header>
	 *   <ons-list-item>Item</ons-list-item>
	 *   <ons-list-item>Item</ons-list-item>
	 * </ons-list>
	 */
	
	var ListElement = function (_BaseElement) {
	  inherits(ListElement, _BaseElement);
	
	  function ListElement() {
	    classCallCheck(this, ListElement);
	    return possibleConstructorReturn(this, (ListElement.__proto__ || Object.getPrototypeOf(ListElement)).apply(this, arguments));
	  }
	
	  createClass(ListElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]The appearance of the list.[/en]
	     *   [ja]リストの表現を指定します。[/ja]
	     */
	
	    value: function init() {
	      this._compile();
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	      this.classList.add(defaultClassName$7);
	      ModifierUtil.initModifier(this, scheme$10);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$7)) {
	            this.className = defaultClassName$7 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$10);
	          break;
	      }
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class'];
	    }
	  }]);
	  return ListElement;
	}(BaseElement);
	
	customElements.define('ons-list', ListElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	   http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	*/
	
	var defaultCheckboxClass = 'checkbox';
	var defaultRadioButtonClass = 'radio-button';
	
	var scheme$11 = {
	  '.text-input': 'text-input--*',
	  '.text-input__label': 'text-input--*__label',
	  '.radio-button': 'radio-button--*',
	  '.radio-button__input': 'radio-button--*__input',
	  '.radio-button__checkmark': 'radio-button--*__checkmark',
	  '.checkbox': 'checkbox--*',
	  '.checkbox__input': 'checkbox--*__input',
	  '.checkbox__checkmark': 'checkbox--*__checkmark'
	};
	
	var INPUT_ATTRIBUTES = ['autocapitalize', 'autocomplete', 'autocorrect', 'autofocus', 'disabled', 'inputmode', 'max', 'maxlength', 'min', 'minlength', 'name', 'pattern', 'placeholder', 'readonly', 'size', 'step', 'type', 'validator', 'value'];
	
	/**
	 * @element ons-input
	 * @category form
	 * @modifier material
	 *  [en]Displays a Material Design input.[/en]
	 *  [ja][/ja]
	 * @modifier underbar
	 *  [en]Displays a horizontal line underneath a text input.[/en]
	 *  [ja][/ja]
	 * @modifier transparent
	 *  [en]Displays a transparent input. Works for Material Design.[/en]
	 *  [ja][/ja]
	 * @description
	 *  [en]
	 *    An input element. The `type` attribute can be used to change the input type. All text input types as well as `checkbox` and `radio` are supported.
	 *
	 *    The component will automatically render as a Material Design input on Android devices.
	 *
	 *    Most attributes that can be used for a normal `<input>` element can also be used on the `<ons-input>` element.
	 *  [/en]
	 *  [ja][/ja]
	 * @codepen ojQxLj
	 * @tutorial vanilla/Reference/input
	 * @seealso ons-range
	 *   [en]The `<ons-range>` element is used to display a range slider.[/en]
	 *   [ja][/ja]
	 * @seealso ons-switch
	 *   [en]The `<ons-switch>` element is used to display a draggable toggle switch.[/en]
	 *   [ja][/ja]
	 * @seealso ons-select
	 *   [en]The `<ons-select>` element is used to display a select box.[/en]
	 *   [ja][/ja]
	 * @guide adding-page-content
	 *   [en]Using form components[/en]
	 *   [ja]フォームを使う[/ja]
	 * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]
	 * @example
	 * <ons-input placeholder="Username" float></ons-input>
	 * <ons-input type="checkbox" checked></ons-input>
	 */
	
	var InputElement = function (_BaseElement) {
	  inherits(InputElement, _BaseElement);
	
	  function InputElement() {
	    classCallCheck(this, InputElement);
	    return possibleConstructorReturn(this, (InputElement.__proto__ || Object.getPrototypeOf(InputElement)).apply(this, arguments));
	  }
	
	  createClass(InputElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute placeholder
	     * @type {String}
	     * @description
	     *   [en]Placeholder text. In Material Design, this placeholder will be a floating label.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @attribute float
	     * @description
	     *  [en]If this attribute is present, the placeholder will be animated in Material Design.[/en]
	     *  [ja]この属性が設定された時、ラベルはアニメーションするようになります。[/ja]
	     */
	
	    /**
	     * @attribute type
	     * @type {String}
	     * @description
	     *  [en]
	     *    Specify the input type. This is the same as the "type" attribute for normal inputs. However, for "range" you should instead use <ons-range> element.
	     *
	     *    Please take a look at [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type) for an exhaustive list of possible values. Depending on the platform and browser version some of these might not work.
	     *  [/en]
	     *  [ja][/ja]
	     */
	
	    /**
	     * @attribute input-id
	     * @type {String}
	     * @description
	     *  [en]Specify the "id" attribute of the inner `<input>` element. This is useful when using `<label for="...">` elements.[/en]
	     *  [ja][/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        _this2._compile();
	        _this2.attributeChangedCallback('checked', null, _this2.getAttribute('checked'));
	      });
	
	      this._boundOnInput = this._onInput.bind(this);
	      this._boundOnFocusin = this._onFocusin.bind(this);
	      this._boundDelegateEvent = this._delegateEvent.bind(this);
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      if (this.children.length !== 0) {
	        return;
	      }
	
	      var helper = document.createElement('span');
	      helper.classList.add('_helper');
	
	      var container = document.createElement('label');
	      container.appendChild(document.createElement('input'));
	      container.appendChild(helper);
	
	      var label = document.createElement('span');
	      label.classList.add('input-label');
	
	      util.arrayFrom(this.childNodes).forEach(function (element) {
	        return label.appendChild(element);
	      });
	      this.hasAttribute('content-left') ? container.insertBefore(label, container.firstChild) : container.appendChild(label);
	
	      this.appendChild(container);
	
	      switch (this.getAttribute('type')) {
	        case 'checkbox':
	          this.classList.add(defaultCheckboxClass);
	          this._input.classList.add('checkbox__input');
	          this._helper.classList.add('checkbox__checkmark');
	          this._updateBoundAttributes();
	          break;
	
	        case 'radio':
	          this.classList.add(defaultRadioButtonClass);
	          this._input.classList.add('radio-button__input');
	          this._helper.classList.add('radio-button__checkmark');
	          this._updateBoundAttributes();
	          break;
	
	        default:
	          this._input.classList.add('text-input');
	          this._helper.classList.add('text-input__label');
	          this._input.parentElement.classList.add('text-input__container');
	
	          this._updateLabel();
	          this._updateBoundAttributes();
	          this._updateLabelClass();
	          break;
	      }
	
	      if (this.hasAttribute('input-id')) {
	        this._input.id = this.getAttribute('input-id');
	      }
	
	      ModifierUtil.initModifier(this, scheme$11);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      var _this3 = this;
	
	      switch (name) {
	        case 'modifier':
	          contentReady(this, function () {
	            return ModifierUtil.onModifierChanged(last, current, _this3, scheme$11);
	          });
	          break;
	        case 'placeholder':
	          contentReady(this, function () {
	            return _this3._updateLabel();
	          });
	          break;
	        case 'input-id':
	          contentReady(this, function () {
	            return _this3._input.id = current;
	          });
	          break;
	        case 'checked':
	          this.checked = current !== null;
	          break;
	        case 'class':
	          switch (this.getAttribute('type')) {
	            case 'checkbox':
	              if (!this.classList.contains(defaultCheckboxClass)) {
	                this.className = defaultCheckboxClass + ' ' + current;
	              }
	              break;
	            case 'radio':
	              if (!this.classList.contains(defaultRadioButtonClass)) {
	                this.className = defaultRadioButtonClass + ' ' + current;
	              }
	              break;
	          }
	          break;
	      }
	
	      if (INPUT_ATTRIBUTES.indexOf(name) >= 0) {
	        contentReady(this, function () {
	          return _this3._updateBoundAttributes();
	        });
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this4 = this;
	
	      contentReady(this, function () {
	        if (_this4._input.type !== 'checkbox' && _this4._input.type !== 'radio') {
	          _this4._input.addEventListener('input', _this4._boundOnInput);
	          _this4._input.addEventListener('focusin', _this4._boundOnFocusin);
	          _this4._input.addEventListener('focusout', _this4._boundOnFocusout);
	        }
	
	        _this4._input.addEventListener('focus', _this4._boundDelegateEvent);
	        _this4._input.addEventListener('blur', _this4._boundDelegateEvent);
	      });
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      var _this5 = this;
	
	      contentReady(this, function () {
	        _this5._input.removeEventListener('input', _this5._boundOnInput);
	        _this5._input.removeEventListener('focusin', _this5._boundOnFocusin);
	        _this5._input.removeEventListener('focus', _this5._boundDelegateEvent);
	        _this5._input.removeEventListener('blur', _this5._boundDelegateEvent);
	      });
	    }
	  }, {
	    key: '_setLabel',
	    value: function _setLabel(value) {
	      if (typeof this._helper.textContent !== 'undefined') {
	        this._helper.textContent = value;
	      } else {
	        this._helper.innerText = value;
	      }
	    }
	  }, {
	    key: '_updateLabel',
	    value: function _updateLabel() {
	      this._setLabel(this.hasAttribute('placeholder') ? this.getAttribute('placeholder') : '');
	    }
	  }, {
	    key: '_updateBoundAttributes',
	    value: function _updateBoundAttributes() {
	      var _this6 = this;
	
	      INPUT_ATTRIBUTES.forEach(function (attr) {
	        if (_this6.hasAttribute(attr)) {
	          _this6._input.setAttribute(attr, _this6.getAttribute(attr));
	        } else {
	          _this6._input.removeAttribute(attr);
	        }
	      });
	    }
	  }, {
	    key: '_updateLabelClass',
	    value: function _updateLabelClass() {
	      if (this.value === '') {
	        this._helper.classList.remove('text-input--material__label--active');
	      } else if (['checkbox', 'radio'].indexOf(this.getAttribute('type')) === -1) {
	        this._helper.classList.add('text-input--material__label--active');
	      }
	    }
	  }, {
	    key: '_delegateEvent',
	    value: function _delegateEvent(event) {
	      var e = new CustomEvent(event.type, {
	        bubbles: false,
	        cancelable: true
	      });
	
	      return this.dispatchEvent(e);
	    }
	  }, {
	    key: '_onInput',
	    value: function _onInput(event) {
	      this._updateLabelClass();
	    }
	  }, {
	    key: '_onFocusin',
	    value: function _onFocusin(event) {
	      this._updateLabelClass();
	    }
	  }, {
	    key: '_input',
	    get: function get() {
	      return this.querySelector('input');
	    }
	  }, {
	    key: '_helper',
	    get: function get() {
	      return this.querySelector('._helper');
	    }
	
	    /**
	     * @property value
	     * @type {String}
	     * @description
	     *   [en]The current value of the input.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'value',
	    get: function get() {
	      return this._input === null ? this.getAttribute('value') : this._input.value;
	    },
	    set: function set(val) {
	      var _this7 = this;
	
	      contentReady(this, function () {
	        if (val instanceof Date) {
	          val = val.toISOString().substring(0, 10);
	        }
	        _this7._input.value = val;
	        _this7._onInput();
	      });
	    }
	
	    /**
	     * @property checked
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the input is checked or not. Only works for `radio` and `checkbox` type inputs.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'checked',
	    get: function get() {
	      return this._input.checked;
	    },
	    set: function set(val) {
	      var _this8 = this;
	
	      contentReady(this, function () {
	        _this8._input.checked = val;
	      });
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the input is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	  }, {
	    key: '_isTextInput',
	    get: function get() {
	      return this.type !== 'radio' && this.type !== 'checkbox';
	    }
	  }, {
	    key: 'type',
	    get: function get() {
	      return this.getAttribute('type');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['class', 'modifier', 'placeholder', 'input-id', 'checked'].concat(INPUT_ATTRIBUTES);
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['change', 'input', 'focus', 'focusin', 'focusout', 'blur'];
	    }
	  }]);
	  return InputElement;
	}(BaseElement);
	
	customElements.define('ons-input', InputElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var ModalAnimator = function (_BaseAnimator) {
	  inherits(ModalAnimator, _BaseAnimator);
	
	  /**
	   * @param {Object} options
	   * @param {String} options.timing
	   * @param {Number} options.duration
	   * @param {Number} options.delay
	   */
	  function ModalAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'linear' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.2 : _ref$duration;
	
	    classCallCheck(this, ModalAnimator);
	    return possibleConstructorReturn(this, (ModalAnimator.__proto__ || Object.getPrototypeOf(ModalAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	  }
	
	  /**
	   * @param {HTMLElement} modal
	   * @param {Function} callback
	   */
	
	
	  createClass(ModalAnimator, [{
	    key: 'show',
	    value: function show(modal, callback) {
	      callback();
	    }
	
	    /**
	     * @param {HTMLElement} modal
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(modal, callback) {
	      callback();
	    }
	  }]);
	  return ModalAnimator;
	}(BaseAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * iOS style animator for dialog.
	 */
	
	var FadeModalAnimator = function (_ModalAnimator) {
	  inherits(FadeModalAnimator, _ModalAnimator);
	
	  function FadeModalAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'linear' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.3 : _ref$duration;
	
	    classCallCheck(this, FadeModalAnimator);
	    return possibleConstructorReturn(this, (FadeModalAnimator.__proto__ || Object.getPrototypeOf(FadeModalAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	  }
	
	  /**
	   * @param {HTMLElement} modal
	   * @param {Function} callback
	   */
	
	
	  createClass(FadeModalAnimator, [{
	    key: 'show',
	    value: function show(modal, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit(modal).queue({
	        opacity: 0
	      }).wait(this.delay).queue({
	        opacity: 1.0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (done) {
	        callback();
	        done();
	      }).play();
	    }
	
	    /**
	     * @param {HTMLElement} modal
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide(modal, callback) {
	      callback = callback ? callback : function () {};
	
	      Animit(modal).queue({
	        opacity: 1
	      }).wait(this.delay).queue({
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (done) {
	        callback();
	        done();
	      }).play();
	    }
	  }]);
	  return FadeModalAnimator;
	}(ModalAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$12 = {
	  '': 'modal--*',
	  'modal__content': 'modal--*__content'
	};
	
	var defaultClassName$8 = 'modal';
	
	var _animatorDict$2 = {
	  'default': ModalAnimator,
	  'fade': FadeModalAnimator,
	  'none': ModalAnimator
	};
	
	/**
	 * @element ons-modal
	 * @category dialog
	 * @description
	 *   [en]
	 *     Modal component that masks current screen. Underlying components are not subject to any events while the modal component is shown.
	 *
	 *     This component can be used to block user input while some operation is running or to show some information to the user.
	 *   [/en]
	 *   [ja]
	 *     画面全体をマスクするモーダル用コンポーネントです。下側にあるコンポーネントは、
	 *     モーダルが表示されている間はイベント通知が行われません。
	 *   [/ja]
	 * @guide dialogs
	 *   [en]Dialog components[/en]
	 *   [ja]Dialog components[/ja]
	 * @seealso ons-dialog
	 *   [en]The `<ons-dialog>` component can be used to create a modal dialog.[/en]
	 *   [ja][/ja]
	 * @codepen devIg
	 * @example
	 * <ons-modal id="modal">
	 *   Modal content
	 * </ons-modal>
	 * <script>
	 *   var modal = document.getElementById('modal');
	 *   modal.show();
	 * </script>
	 */
	
	var ModalElement = function (_BaseDialogElement) {
	  inherits(ModalElement, _BaseDialogElement);
	
	  function ModalElement() {
	    classCallCheck(this, ModalElement);
	    return possibleConstructorReturn(this, (ModalElement.__proto__ || Object.getPrototypeOf(ModalElement)).apply(this, arguments));
	  }
	
	  createClass(ModalElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute animation
	     * @type {String}
	     * @default default
	     * @description
	     *  [en]The animation used when showing and hiding the modal. Can be either `"none"` or `"fade"`.[/en]
	     *  [ja]モーダルを表示する際のアニメーション名を指定します。"none"もしくは"fade"を指定できます。[/ja]
	     */
	
	    /**
	     * @attribute animation-options
	     * @type {Expression}
	     * @description
	     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]
	     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      get$1(ModalElement.prototype.__proto__ || Object.getPrototypeOf(ModalElement.prototype), 'init', this).call(this);
	      this._defaultDBB = function () {
	        return undefined;
	      };
	      contentReady(this, function () {
	        return _this2._compile();
	      });
	    }
	  }, {
	    key: '_updateAnimatorFactory',
	    value: function _updateAnimatorFactory() {
	      return new AnimatorFactory({
	        animators: _animatorDict$2,
	        baseClass: ModalAnimator,
	        baseClassName: 'ModalAnimator',
	        defaultAnimation: this.getAttribute('animation')
	      });
	    }
	
	    /**
	     * @property onDeviceBackButton
	     * @type {Object}
	     * @description
	     *   [en]Back-button handler.[/en]
	     *   [ja]バックボタンハンドラ。[/ja]
	     */
	
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      this.style.display = 'none';
	      this.style.zIndex = 10001;
	      this.classList.add(defaultClassName$8);
	
	      if (!util.findChild(this, '.modal__content')) {
	        var content = document.createElement('div');
	        content.classList.add('modal__content');
	
	        while (this.childNodes[0]) {
	          var node = this.childNodes[0];
	          this.removeChild(node);
	          content.insertBefore(node, null);
	        }
	
	        this.appendChild(content);
	      }
	
	      ModifierUtil.initModifier(this, this._scheme);
	    }
	  }, {
	    key: '_toggleStyle',
	    value: function _toggleStyle(shouldShow) {
	      this.style.display = shouldShow ? 'table' : 'none';
	    }
	
	    /**
	     * @property visible
	     * @readonly
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is visible or not.[/en]
	     *   [ja]要素が見える場合に`true`。[/ja]
	     */
	
	    /**
	     * @method show
	     * @signature show([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name. Available animations are `"none"` and `"fade"`.[/en]
	     *   [ja]アニメーション名を指定します。"none", "fade"のいずれかを指定します。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]
	     * @description
	     *   [en]Show modal.[/en]
	     *   [ja]モーダルを表示します。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the displayed element[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @method toggle
	     * @signature toggle([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name. Available animations are `"none"` and `"fade"`.[/en]
	     *   [ja]アニメーション名を指定します。"none", "fade"のいずれかを指定します。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]
	     * @description
	     *   [en]Toggle modal visibility.[/en]
	     *   [ja]モーダルの表示を切り替えます。[/ja]
	     */
	
	    /**
	     * @method hide
	     * @signature hide([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name. Available animations are `"none"` and `"fade"`.[/en]
	     *   [ja]アニメーション名を指定します。"none", "fade"のいずれかを指定します。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]
	     * @description
	     *   [en]Hide modal.[/en]
	     *   [ja]モーダルを非表示にします。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the hidden element[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'class') {
	        if (!this.classList.contains(defaultClassName$8)) {
	          this.className = defaultClassName$8 + ' ' + current;
	        }
	      } else {
	        get$1(ModalElement.prototype.__proto__ || Object.getPrototypeOf(ModalElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);
	      }
	    }
	
	    /**
	     * @param {String} name
	     * @param {Function} Animator
	     */
	
	  }, {
	    key: '_scheme',
	    get: function get() {
	      return scheme$12;
	    }
	  }], [{
	    key: 'registerAnimator',
	    value: function registerAnimator(name, Animator) {
	      if (!(Animator.prototype instanceof ModalAnimator)) {
	        throw new Error('"Animator" param must inherit OnsModalElement.ModalAnimator');
	      }
	      _animatorDict$2[name] = Animator;
	    }
	  }, {
	    key: 'observedAttributes',
	    get: function get() {
	      return [].concat(toConsumableArray(get$1(ModalElement.__proto__ || Object.getPrototypeOf(ModalElement), 'observedAttributes', this)), ['class']);
	    }
	  }, {
	    key: 'animators',
	    get: function get() {
	      return _animatorDict$2;
	    }
	  }, {
	    key: 'ModalAnimator',
	    get: function get() {
	      return ModalAnimator;
	    }
	  }]);
	  return ModalElement;
	}(BaseDialogElement);
	
	customElements.define('ons-modal', ModalElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var NavigatorTransitionAnimator = function (_BaseAnimator) {
	  inherits(NavigatorTransitionAnimator, _BaseAnimator);
	
	  /**
	   * @param {Object} options
	   * @param {String} options.timing
	   * @param {Number} options.duration
	   * @param {Number} options.delay
	   */
	  function NavigatorTransitionAnimator(options) {
	    classCallCheck(this, NavigatorTransitionAnimator);
	
	    options = util.extend({
	      timing: 'linear',
	      duration: '0.4',
	      delay: '0'
	    }, options || {});
	
	    return possibleConstructorReturn(this, (NavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(NavigatorTransitionAnimator)).call(this, options));
	  }
	
	  createClass(NavigatorTransitionAnimator, [{
	    key: 'push',
	    value: function push(enterPage, leavePage, callback) {
	      callback();
	    }
	  }, {
	    key: 'pop',
	    value: function pop(enterPage, leavePage, callback) {
	      callback();
	    }
	  }, {
	    key: 'block',
	    value: function block(page) {
	      var blocker = util.createElement('\n      <div style="position: absolute; background-color: transparent; width: 100%; height: 100%; z-index: 100000"></div>\n    ');
	      page.parentNode.appendChild(blocker);
	      return function () {
	        return blocker.remove();
	      };
	    }
	  }]);
	  return NavigatorTransitionAnimator;
	}(BaseAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * Slide animator for navigator transition like iOS's screen slide transition.
	 */
	
	var IOSSlideNavigatorTransitionAnimator = function (_NavigatorTransitionA) {
	  inherits(IOSSlideNavigatorTransitionAnimator, _NavigatorTransitionA);
	
	  function IOSSlideNavigatorTransitionAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'ease' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.4 : _ref$duration;
	
	    classCallCheck(this, IOSSlideNavigatorTransitionAnimator);
	
	    var _this = possibleConstructorReturn(this, (IOSSlideNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	
	    _this.backgroundMask = util.createElement('\n      <div style="position: absolute; width: 100%; height: 100%;\n        background-color: black; opacity: 0; z-index: 2"></div>\n    ');
	
	    return _this;
	  }
	
	  createClass(IOSSlideNavigatorTransitionAnimator, [{
	    key: '_decompose',
	    value: function _decompose(page) {
	      var toolbar = page._getToolbarElement();
	      var left = toolbar._getToolbarLeftItemsElement();
	      var right = toolbar._getToolbarRightItemsElement();
	
	      var excludeBackButton = function excludeBackButton(elements) {
	        var result = [];
	
	        for (var i = 0; i < elements.length; i++) {
	          if (elements[i].nodeName.toLowerCase() !== 'ons-back-button') {
	            result.push(elements[i]);
	          }
	        }
	
	        return result;
	      };
	
	      var other = [].concat(left.children.length === 0 ? left : excludeBackButton(left.children)).concat(right.children.length === 0 ? right : excludeBackButton(right.children));
	
	      return {
	        toolbarCenter: toolbar._getToolbarCenterItemsElement(),
	        backButtonIcon: toolbar._getToolbarBackButtonIconElement(),
	        backButtonLabel: toolbar._getToolbarBackButtonLabelElement(),
	        other: other,
	        content: page._getContentElement(),
	        background: page._getBackgroundElement(),
	        toolbar: toolbar,
	        bottomToolbar: page._getBottomToolbarElement()
	      };
	    }
	  }, {
	    key: '_shouldAnimateToolbar',
	    value: function _shouldAnimateToolbar(enterPage, leavePage) {
	      var bothPageHasToolbar = enterPage._canAnimateToolbar() && leavePage._canAnimateToolbar();
	
	      var noMaterialToolbar = !enterPage._getToolbarElement().classList.contains('toolbar--material') && !leavePage._getToolbarElement().classList.contains('toolbar--material');
	
	      return bothPageHasToolbar && noMaterialToolbar;
	    }
	  }, {
	    key: '_calculateDelta',
	    value: function _calculateDelta(element, decomposition) {
	      var title = void 0,
	          label = void 0;
	
	      var pageRect = element.getBoundingClientRect();
	      if (decomposition.backButtonLabel.classList.contains('back-button__label')) {
	        var labelRect = decomposition.backButtonLabel.getBoundingClientRect();
	        title = Math.round(pageRect.width / 2 - labelRect.width / 2 - labelRect.left);
	      } else {
	        title = Math.round(pageRect.width / 2 * 0.6);
	      }
	
	      if (decomposition.backButtonIcon.classList.contains('back-button__icon')) {
	        label = decomposition.backButtonIcon.getBoundingClientRect().right - 2;
	      }
	
	      return { title: title, label: label };
	    }
	
	    /**
	     * @param {Object} enterPage
	     * @param {Object} leavePage
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'push',
	    value: function push(enterPage, leavePage, callback) {
	      var _this2 = this;
	
	      this.backgroundMask.remove();
	      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage.nextSibling);
	
	      var unblock = get$1(IOSSlideNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      contentReady(enterPage, function () {
	        var enterPageTarget = util.findToolbarPage(enterPage) || enterPage;
	        var leavePageTarget = util.findToolbarPage(leavePage) || leavePage;
	        var enterPageDecomposition = _this2._decompose(enterPageTarget);
	        var leavePageDecomposition = _this2._decompose(leavePageTarget);
	
	        var delta = _this2._calculateDelta(leavePage, enterPageDecomposition);
	
	        var maskClear = Animit(_this2.backgroundMask).saveStyle().queue({
	          opacity: 0,
	          transform: 'translate3d(0, 0, 0)'
	        }).wait(_this2.delay).queue({
	          opacity: 0.05
	        }, {
	          duration: _this2.duration,
	          timing: _this2.timing
	        }).restoreStyle().queue(function (done) {
	          _this2.backgroundMask.remove();
	          done();
	        });
	
	        var shouldAnimateToolbar = _this2._shouldAnimateToolbar(enterPageTarget, leavePageTarget);
	
	        if (shouldAnimateToolbar) {
	          // TODO: Remove this fix
	          var enterPageToolbarHeight = enterPageDecomposition.toolbar.getBoundingClientRect().height + 'px';
	          _this2.backgroundMask.style.top = enterPageToolbarHeight;
	
	          Animit.runAll(maskClear, Animit([enterPageDecomposition.content, enterPageDecomposition.bottomToolbar, enterPageDecomposition.background]).saveStyle().queue({
	            css: {
	              transform: 'translate3D(100%, 0px, 0px)'
	            },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: {
	              transform: 'translate3D(0px, 0px, 0px)'
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle(), Animit(enterPageDecomposition.toolbar).saveStyle().queue({
	            css: {
	              opacity: 0
	            },
	            duration: 0
	          }).queue({
	            css: {
	              opacity: 1
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle(), Animit(enterPageDecomposition.background).queue({
	            css: {
	              top: enterPageToolbarHeight
	            },
	            duration: 0
	          }), Animit(enterPageDecomposition.toolbarCenter).saveStyle().queue({
	            css: {
	              transform: 'translate3d(125%, 0, 0)',
	              opacity: 1
	            },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: {
	              transform: 'translate3d(0, 0, 0)',
	              opacity: 1.0
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle(), Animit(enterPageDecomposition.backButtonLabel).saveStyle().queue({
	            css: {
	              transform: 'translate3d(' + delta.title + 'px, 0, 0)',
	              opacity: 0
	            },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: {
	              transform: 'translate3d(0, 0, 0)',
	              opacity: 1.0
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle(), Animit(enterPageDecomposition.other).saveStyle().queue({
	            css: { opacity: 0 },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: { opacity: 1 },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle(), Animit([leavePageDecomposition.content, leavePageDecomposition.bottomToolbar, leavePageDecomposition.background]).saveStyle().queue({
	            css: {
	              transform: 'translate3D(0, 0, 0)'
	            },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: {
	              transform: 'translate3D(-25%, 0px, 0px)'
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle().queue(function (done) {
	            unblock();
	            callback();
	            done();
	          }), Animit(leavePageDecomposition.toolbarCenter).saveStyle().queue({
	            css: {
	              transform: 'translate3d(0, 0, 0)',
	              opacity: 1.0
	            },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: {
	              transform: 'translate3d(-' + delta.title + 'px, 0, 0)',
	              opacity: 0
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle(), Animit(leavePageDecomposition.backButtonLabel).saveStyle().queue({
	            css: {
	              transform: 'translate3d(0, 0, 0)',
	              opacity: 1.0
	            },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: {
	              transform: 'translate3d(-' + delta.label + 'px, 0, 0)',
	              opacity: 0
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle(), Animit(leavePageDecomposition.other).saveStyle().queue({
	            css: { opacity: 1 },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: { opacity: 0 },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle());
	        } else {
	
	          Animit.runAll(maskClear, Animit(enterPage).saveStyle().queue({
	            css: {
	              transform: 'translate3D(100%, 0px, 0px)'
	            },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: {
	              transform: 'translate3D(0px, 0px, 0px)'
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle(), Animit(leavePage).saveStyle().queue({
	            css: {
	              transform: 'translate3D(0, 0, 0)'
	            },
	            duration: 0
	          }).wait(_this2.delay).queue({
	            css: {
	              transform: 'translate3D(-25%, 0px, 0px)'
	            },
	            duration: _this2.duration,
	            timing: _this2.timing
	          }).restoreStyle().queue(function (done) {
	            unblock();
	            callback();
	            done();
	          }));
	        }
	      });
	    }
	
	    /**
	     * @param {Object} enterPage
	     * @param {Object} leavePage
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'pop',
	    value: function pop(enterPage, leavePage, callback) {
	      var _this3 = this;
	
	      this.backgroundMask.remove();
	      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage.nextSibling);
	
	      var unblock = get$1(IOSSlideNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      var enterPageTarget = util.findToolbarPage(enterPage) || enterPage;
	      var leavePageTarget = util.findToolbarPage(leavePage) || leavePage;
	      var enterPageDecomposition = this._decompose(enterPageTarget);
	      var leavePageDecomposition = this._decompose(leavePageTarget);
	
	      var delta = this._calculateDelta(leavePage, leavePageDecomposition);
	
	      var maskClear = Animit(this.backgroundMask).saveStyle().queue({
	        opacity: 0.1,
	        transform: 'translate3d(0, 0, 0)'
	      }).wait(this.delay).queue({
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        done();
	      });
	
	      var shouldAnimateToolbar = this._shouldAnimateToolbar(enterPageTarget, leavePageTarget);
	
	      if (shouldAnimateToolbar) {
	        var enterPageToolbarHeight = enterPageDecomposition.toolbar.getBoundingClientRect().height + 'px';
	        this.backgroundMask.style.top = enterPageToolbarHeight;
	
	        Animit.runAll(maskClear, Animit([enterPageDecomposition.content, enterPageDecomposition.bottomToolbar, enterPageDecomposition.background]).saveStyle().queue({
	          css: {
	            transform: 'translate3D(-25%, 0px, 0px)',
	            opacity: 0.9
	          },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: {
	            transform: 'translate3D(0px, 0px, 0px)',
	            opacity: 1.0
	          },
	          duration: this.duration,
	          timing: this.timing
	        }).restoreStyle(), Animit(enterPageDecomposition.toolbarCenter).saveStyle().queue({
	          css: {
	            transform: 'translate3d(-' + delta.title + 'px, 0, 0)',
	            opacity: 0
	          },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: {
	            transform: 'translate3d(0, 0, 0)',
	            opacity: 1.0
	          },
	          duration: this.duration,
	          timing: this.timing
	        }).restoreStyle(), Animit(enterPageDecomposition.backButtonLabel).saveStyle().queue({
	          css: {
	            transform: 'translate3d(-' + delta.label + 'px, 0, 0)'
	          },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: {
	            transform: 'translate3d(0, 0, 0)'
	          },
	          duration: this.duration,
	          timing: this.timing
	        }).restoreStyle(), Animit(enterPageDecomposition.other).saveStyle().queue({
	          css: { opacity: 0 },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: { opacity: 1 },
	          duration: this.duration,
	          timing: this.timing
	        }).restoreStyle(), Animit(leavePageDecomposition.background).queue({
	          css: {
	            top: enterPageToolbarHeight
	          },
	          duration: 0
	        }), Animit([leavePageDecomposition.content, leavePageDecomposition.bottomToolbar, leavePageDecomposition.background]).queue({
	          css: {
	            transform: 'translate3D(0px, 0px, 0px)'
	          },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: {
	            transform: 'translate3D(100%, 0px, 0px)'
	          },
	          duration: this.duration,
	          timing: this.timing
	        }).wait(0).queue(function (done) {
	          _this3.backgroundMask.remove();
	          unblock();
	          callback();
	          done();
	        }), Animit(leavePageDecomposition.toolbar).queue({
	          css: {
	            opacity: 1
	          },
	          duration: 0
	        }).queue({
	          css: {
	            opacity: 0
	          },
	          duration: this.duration,
	          timing: this.timing
	        }), Animit(leavePageDecomposition.toolbarCenter).queue({
	          css: {
	            transform: 'translate3d(0, 0, 0)'
	          },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: {
	            transform: 'translate3d(125%, 0, 0)'
	          },
	          duration: this.duration,
	          timing: this.timing
	        }), Animit(leavePageDecomposition.backButtonLabel).queue({
	          css: {
	            transform: 'translate3d(0, 0, 0)',
	            opacity: 1
	          },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: {
	            transform: 'translate3d(' + delta.title + 'px, 0, 0)',
	            opacity: 0
	          },
	          duration: this.duration,
	          timing: this.timing
	        }));
	      } else {
	        Animit.runAll(maskClear, Animit(enterPage).saveStyle().queue({
	          css: {
	            transform: 'translate3D(-25%, 0px, 0px)',
	            opacity: 0.9
	          },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: {
	            transform: 'translate3D(0px, 0px, 0px)',
	            opacity: 1.0
	          },
	          duration: this.duration,
	          timing: this.timing
	        }).restoreStyle(), Animit(leavePage).queue({
	          css: {
	            transform: 'translate3D(0px, 0px, 0px)'
	          },
	          duration: 0
	        }).wait(this.delay).queue({
	          css: {
	            transform: 'translate3D(100%, 0px, 0px)'
	          },
	          duration: this.duration,
	          timing: this.timing
	        }).queue(function (done) {
	          _this3.backgroundMask.remove();
	          unblock();
	          callback();
	          done();
	        }));
	      }
	    }
	  }]);
	  return IOSSlideNavigatorTransitionAnimator;
	}(NavigatorTransitionAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * Lift screen transition.
	 */
	
	var IOSLiftNavigatorTransitionAnimator = function (_NavigatorTransitionA) {
	  inherits(IOSLiftNavigatorTransitionAnimator, _NavigatorTransitionA);
	
	  function IOSLiftNavigatorTransitionAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.4 : _ref$duration;
	
	    classCallCheck(this, IOSLiftNavigatorTransitionAnimator);
	
	    var _this = possibleConstructorReturn(this, (IOSLiftNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	
	    _this.backgroundMask = util.createElement('\n      <div style="position: absolute; width: 100%; height: 100%;\n        background: linear-gradient(black, white);"></div>\n    ');
	    return _this;
	  }
	
	  /**
	   * @param {Object} enterPage
	   * @param {Object} leavePage
	   * @param {Function} callback
	   */
	
	
	  createClass(IOSLiftNavigatorTransitionAnimator, [{
	    key: 'push',
	    value: function push(enterPage, leavePage, callback) {
	      var _this2 = this;
	
	      this.backgroundMask.remove();
	      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage);
	
	      var unblock = get$1(IOSLiftNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      var maskClear = Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {
	        _this2.backgroundMask.remove();
	        done();
	      });
	
	      Animit.runAll(maskClear, Animit(enterPage).saveStyle().queue({
	        css: {
	          transform: 'translate3D(0, 100%, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }), Animit(leavePage).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 1.0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, -10%, 0)',
	          opacity: 0.9
	        },
	        duration: this.duration,
	        timing: this.timing
	      }));
	    }
	
	    /**
	     * @param {Object} enterPage
	     * @param {Object} leavePage
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'pop',
	    value: function pop(enterPage, leavePage, callback) {
	      var _this3 = this;
	
	      this.backgroundMask.remove();
	      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage);
	
	      var unblock = get$1(IOSLiftNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      Animit.runAll(Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {
	        _this3.backgroundMask.remove();
	        done();
	      }), Animit(enterPage).queue({
	        css: {
	          transform: 'translate3D(0, -10%, 0)',
	          opacity: 0.9
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 1.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }), Animit(leavePage).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 100%, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }));
	    }
	  }]);
	  return IOSLiftNavigatorTransitionAnimator;
	}(NavigatorTransitionAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * Fade-in screen transition.
	 */
	
	var IOSFadeNavigatorTransitionAnimator = function (_NavigatorTransitionA) {
	  inherits(IOSFadeNavigatorTransitionAnimator, _NavigatorTransitionA);
	
	  function IOSFadeNavigatorTransitionAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'linear' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.4 : _ref$duration;
	
	    classCallCheck(this, IOSFadeNavigatorTransitionAnimator);
	    return possibleConstructorReturn(this, (IOSFadeNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	  }
	
	  /**
	   * @param {Object} enterPage
	   * @param {Object} leavePage
	   * @param {Function} callback
	   */
	
	
	  createClass(IOSFadeNavigatorTransitionAnimator, [{
	    key: 'push',
	    value: function push(enterPage, leavePage, callback) {
	      var unblock = get$1(IOSFadeNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      Animit.runAll(Animit([enterPage._getContentElement(), enterPage._getBackgroundElement()]).saveStyle().queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 1
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }), Animit(enterPage._getToolbarElement()).saveStyle().queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 1
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle());
	    }
	
	    /**
	     * @param {Object} enterPage
	     * @param {Object} leavePage
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'pop',
	    value: function pop(enterPage, leavePage, callback) {
	      var unblock = get$1(IOSFadeNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      Animit.runAll(Animit([leavePage._getContentElement(), leavePage._getBackgroundElement()]).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 1
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }), Animit(leavePage._getToolbarElement()).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 1
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }));
	    }
	  }]);
	  return IOSFadeNavigatorTransitionAnimator;
	}(NavigatorTransitionAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * Slide animator for navigator transition.
	 */
	
	var MDSlideNavigatorTransitionAnimator = function (_NavigatorTransitionA) {
	  inherits(MDSlideNavigatorTransitionAnimator, _NavigatorTransitionA);
	
	  function MDSlideNavigatorTransitionAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.3 : _ref$duration;
	
	    classCallCheck(this, MDSlideNavigatorTransitionAnimator);
	
	    var _this = possibleConstructorReturn(this, (MDSlideNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(MDSlideNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	
	    _this.backgroundMask = util.createElement('\n      <div style="position: absolute; width: 100%; height: 100%; z-index: 2;\n        background-color: black; opacity: 0;"></div>\n    ');
	    _this.blackMaskOpacity = 0.4;
	    return _this;
	  }
	
	  /**
	   * @param {Object} enterPage
	   * @param {Object} leavePage
	   * @param {Function} callback
	   */
	
	
	  createClass(MDSlideNavigatorTransitionAnimator, [{
	    key: 'push',
	    value: function push(enterPage, leavePage, callback) {
	      var _this2 = this;
	
	      this.backgroundMask.remove();
	      leavePage.parentElement.insertBefore(this.backgroundMask, leavePage.nextSibling);
	
	      var unblock = get$1(MDSlideNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDSlideNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      Animit.runAll(Animit(this.backgroundMask).saveStyle().queue({
	        opacity: 0,
	        transform: 'translate3d(0, 0, 0)'
	      }).wait(this.delay).queue({
	        opacity: this.blackMaskOpacity
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        _this2.backgroundMask.remove();
	        done();
	      }), Animit(enterPage).saveStyle().queue({
	        css: {
	          transform: 'translate3D(100%, 0, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle(), Animit(leavePage).saveStyle().queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(-45%, 0px, 0px)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().wait(0.2).queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }));
	    }
	
	    /**
	     * @param {Object} enterPage
	     * @param {Object} leavePage
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'pop',
	    value: function pop(enterPage, leavePage, callback) {
	      var _this3 = this;
	
	      this.backgroundMask.remove();
	      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage.nextSibling);
	
	      var unblock = get$1(MDSlideNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDSlideNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      Animit.runAll(Animit(this.backgroundMask).saveStyle().queue({
	        opacity: this.blackMaskOpacity,
	        transform: 'translate3d(0, 0, 0)'
	      }).wait(this.delay).queue({
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        _this3.backgroundMask.remove();
	        done();
	      }), Animit(enterPage).saveStyle().queue({
	        css: {
	          transform: 'translate3D(-45%, 0px, 0px)',
	          opacity: 0.9
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0px, 0px, 0px)',
	          opacity: 1.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle(), Animit(leavePage).queue({
	        css: {
	          transform: 'translate3D(0px, 0px, 0px)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(100%, 0px, 0px)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).wait(0.2).queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }));
	    }
	  }]);
	  return MDSlideNavigatorTransitionAnimator;
	}(NavigatorTransitionAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * Lift screen transition.
	 */
	
	var MDLiftNavigatorTransitionAnimator = function (_NavigatorTransitionA) {
	  inherits(MDLiftNavigatorTransitionAnimator, _NavigatorTransitionA);
	
	  function MDLiftNavigatorTransitionAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0.05 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.4 : _ref$duration;
	
	    classCallCheck(this, MDLiftNavigatorTransitionAnimator);
	
	    var _this = possibleConstructorReturn(this, (MDLiftNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(MDLiftNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	
	    _this.backgroundMask = util.createElement('\n      <div style="position: absolute; width: 100%; height: 100%;\n        background-color: black;"></div>\n    ');
	    return _this;
	  }
	
	  /**
	   * @param {Object} enterPage
	   * @param {Object} leavePage
	   * @param {Function} callback
	   */
	
	
	  createClass(MDLiftNavigatorTransitionAnimator, [{
	    key: 'push',
	    value: function push(enterPage, leavePage, callback) {
	      var _this2 = this;
	
	      this.backgroundMask.remove();
	      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage);
	
	      var unblock = get$1(MDLiftNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDLiftNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      var maskClear = Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {
	        _this2.backgroundMask.remove();
	        done();
	      });
	
	      Animit.runAll(maskClear, Animit(enterPage).saveStyle().queue({
	        css: {
	          transform: 'translate3D(0, 100%, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }), Animit(leavePage).queue({
	        css: {
	          opacity: 1.0
	        },
	        duration: 0
	      }).queue({
	        css: {
	          opacity: 0.4
	        },
	        duration: this.duration,
	        timing: this.timing
	      }));
	    }
	
	    /**
	     * @param {Object} enterPage
	     * @param {Object} leavePage
	     * @param {Function} callback
	     */
	
	  }, {
	    key: 'pop',
	    value: function pop(enterPage, leavePage, callback) {
	      var _this3 = this;
	
	      this.backgroundMask.remove();
	      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage);
	
	      var unblock = get$1(MDLiftNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDLiftNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      Animit.runAll(Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {
	        _this3.backgroundMask.remove();
	        done();
	      }), Animit(enterPage).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 0.4
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 1.0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }), Animit(leavePage).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)'
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 100%, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }));
	    }
	  }]);
	  return MDLiftNavigatorTransitionAnimator;
	}(NavigatorTransitionAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * Fade-in + Lift screen transition.
	 */
	
	var MDFadeNavigatorTransitionAnimator = function (_NavigatorTransitionA) {
	  inherits(MDFadeNavigatorTransitionAnimator, _NavigatorTransitionA);
	
	  function MDFadeNavigatorTransitionAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'ease-out' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.25 : _ref$duration;
	
	    classCallCheck(this, MDFadeNavigatorTransitionAnimator);
	    return possibleConstructorReturn(this, (MDFadeNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(MDFadeNavigatorTransitionAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	  }
	
	  /**
	   * @param {Object} enterPage
	   * @param {Object} leavePage
	   * @param {Function} callback
	   */
	
	
	  createClass(MDFadeNavigatorTransitionAnimator, [{
	    key: 'push',
	    value: function push(enterPage, leavePage, callback) {
	      var unblock = get$1(MDFadeNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDFadeNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      Animit.runAll(Animit(enterPage).saveStyle().queue({
	        css: {
	          transform: 'translate3D(0, 42px, 0)',
	          opacity: 0
	        },
	        duration: 0
	      }).wait(this.delay).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)',
	          opacity: 1
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }));
	    }
	
	    /**
	     * @param {Object} enterPage
	     * @param {Object} leavePage
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'pop',
	    value: function pop(enterPage, leavePage, callback) {
	      var unblock = get$1(MDFadeNavigatorTransitionAnimator.prototype.__proto__ || Object.getPrototypeOf(MDFadeNavigatorTransitionAnimator.prototype), 'block', this).call(this, enterPage);
	
	      Animit.runAll(Animit(leavePage).queue({
	        css: {
	          transform: 'translate3D(0, 0, 0)'
	        },
	        duration: 0
	      }).wait(0.15).queue({
	        css: {
	          transform: 'translate3D(0, 38px, 0)'
	        },
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (done) {
	        unblock();
	        callback();
	        done();
	      }), Animit(leavePage).queue({
	        css: {
	          opacity: 1
	        },
	        duration: 0
	      }).wait(0.04).queue({
	        css: {
	          opacity: 0
	        },
	        duration: this.duration,
	        timing: this.timing
	      }));
	    }
	  }]);
	  return MDFadeNavigatorTransitionAnimator;
	}(NavigatorTransitionAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var NoneNavigatorTransitionAnimator = function (_NavigatorTransitionA) {
	  inherits(NoneNavigatorTransitionAnimator, _NavigatorTransitionA);
	
	  function NoneNavigatorTransitionAnimator(options) {
	    classCallCheck(this, NoneNavigatorTransitionAnimator);
	    return possibleConstructorReturn(this, (NoneNavigatorTransitionAnimator.__proto__ || Object.getPrototypeOf(NoneNavigatorTransitionAnimator)).call(this, options));
	  }
	
	  createClass(NoneNavigatorTransitionAnimator, [{
	    key: 'push',
	    value: function push(enterPage, leavePage, callback) {
	      callback();
	    }
	  }, {
	    key: 'pop',
	    value: function pop(enterPage, leavePage, callback) {
	      callback();
	    }
	  }]);
	  return NoneNavigatorTransitionAnimator;
	}(NavigatorTransitionAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var _animatorDict$3 = {
	  'default': function _default() {
	    return platform.isAndroid() ? MDFadeNavigatorTransitionAnimator : IOSSlideNavigatorTransitionAnimator;
	  },
	  'slide': function slide() {
	    return platform.isAndroid() ? MDSlideNavigatorTransitionAnimator : IOSSlideNavigatorTransitionAnimator;
	  },
	  'lift': function lift() {
	    return platform.isAndroid() ? MDLiftNavigatorTransitionAnimator : IOSLiftNavigatorTransitionAnimator;
	  },
	  'fade': function fade() {
	    return platform.isAndroid() ? MDFadeNavigatorTransitionAnimator : IOSFadeNavigatorTransitionAnimator;
	  },
	  'slide-ios': IOSSlideNavigatorTransitionAnimator,
	  'slide-md': MDSlideNavigatorTransitionAnimator,
	  'lift-ios': IOSLiftNavigatorTransitionAnimator,
	  'lift-md': MDLiftNavigatorTransitionAnimator,
	  'fade-ios': IOSFadeNavigatorTransitionAnimator,
	  'fade-md': MDFadeNavigatorTransitionAnimator,
	  'none': NoneNavigatorTransitionAnimator
	};
	
	var rewritables = {
	  /**
	   * @param {Element} navigatorSideElement
	   * @param {Function} callback
	   */
	  ready: function ready(navigatorElement, callback) {
	    callback();
	  }
	};
	
	/**
	 * @element ons-navigator
	 * @category navigation
	 * @description
	 *   [en]
	 *     A component that provides page stack management and navigation. Stack navigation is the most common navigation pattern for mobile apps.
	 *
	 *     When a page is pushed on top of the stack it is displayed with a transition animation. When the user returns to the previous page the top page will be popped from the top of the stack and hidden with an opposite transition animation.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen yrhtv
	 * @tutorial vanilla/Reference/navigator
	 * @guide multiple-page-navigation
	 *   [en]Guide for page navigation[/en]
	 *   [ja]ページナビゲーションの概要[/ja]
	 * @guide templates
	 *   [en]Defining multiple pages in single html[/en]
	 *   [ja]複数のページを1つのHTMLに記述する[/ja]
	 * @guide creating-a-page
	 *   [en]Setting up a page in its `init` event[/en]
	 *   [ja]Setting up a page in its `init` event[/ja]
	 * @seealso ons-toolbar
	 *   [en]The `<ons-toolbar>` component is used to display a toolbar on the top of a page.[/en]
	 *   [ja][/ja]
	 * @seealso ons-back-button
	 *   [en]The `<ons-back-button>` component lets the user return to the previous page.[/en]
	 *   [ja][/ja]
	 * @example
	 * <ons-navigator id="navigator">
	 *   <ons-page>
	 *     <ons-toolbar>
	 *       <div class="center">
	 *         Title
	 *       </div>
	 *     </ons-toolbar>
	 *     <p>
	 *       <ons-button
	 *         onclick="document.getElementById('navigator').pushPage('page.html')">
	 *         Push page
	 *       </ons-button>
	 *     </p>
	 *   </ons-page>
	 * </ons-navigator>
	 *
	 * <ons-template id="page.html">
	 *   <ons-page>
	 *     <ons-toolbar>
	 *       <div class="left">
	 *         <ons-back-button>Back</ons-back-button>
	 *       </div>
	 *       <div class="center">
	 *         Another page
	 *       </div>
	 *     </ons-toolbar>
	 *   </ons-page>
	 * </ons-template>
	 */
	
	var NavigatorElement = function (_BaseElement) {
	  inherits(NavigatorElement, _BaseElement);
	
	  function NavigatorElement() {
	    classCallCheck(this, NavigatorElement);
	    return possibleConstructorReturn(this, (NavigatorElement.__proto__ || Object.getPrototypeOf(NavigatorElement)).apply(this, arguments));
	  }
	
	  createClass(NavigatorElement, [{
	    key: 'init',
	    value: function init() {
	      this._isRunning = false;
	      this._initialized = false;
	      this._pageLoader = defaultPageLoader;
	      this._pageMap = new WeakMap();
	
	      this._updateAnimatorFactory();
	    }
	
	    /**
	     * @property pageLoader
	     * @type {PageLoader}
	     * @description
	     *   [en]PageLoader instance. It can be overriden to change the way pages are loaded by this element. Useful for lib developers.[/en]
	     *   [ja]PageLoaderインスタンスを格納しています。[/ja]
	     */
	
	  }, {
	    key: '_getPageTarget',
	    value: function _getPageTarget() {
	      return this._page || this.getAttribute('page');
	    }
	
	    /**
	     * @property page
	     * @type {*}
	     * @description
	     *   [en]Specify the page to be loaded during initialization. This value takes precedence over the `page` attribute. Useful for lib developers.[/en]
	     *   [ja]初期化時に読み込むページを指定します。`page`属性で指定した値よりも`page`プロパティに指定した値を優先します。[/ja]
	     */
	
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this2 = this;
	
	      this.onDeviceBackButton = this._onDeviceBackButton.bind(this);
	
	      if (this._initialized) {
	        return;
	      }
	
	      this._initialized = true;
	
	      rewritables.ready(this, function () {
	        if (_this2.pages.length === 0 && _this2._getPageTarget()) {
	          _this2.pushPage(_this2._getPageTarget(), { animation: 'none' });
	        } else if (_this2.pages.length > 0) {
	          for (var i = 0; i < _this2.pages.length; i++) {
	            if (_this2.pages[i].nodeName !== 'ONS-PAGE') {
	              throw new Error('The children of <ons-navigator> need to be of type <ons-page>');
	            }
	          }
	
	          if (_this2.topPage) {
	            contentReady(_this2.topPage, function () {
	              return setTimeout(function () {
	                _this2.topPage._show();
	                _this2._updateLastPageBackButton();
	              }, 0);
	            });
	          }
	        } else {
	          contentReady(_this2, function () {
	            if (_this2.pages.length === 0 && _this2._getPageTarget()) {
	              _this2.pushPage(_this2._getPageTarget(), { animation: 'none' });
	            }
	          });
	        }
	      });
	    }
	  }, {
	    key: '_updateAnimatorFactory',
	    value: function _updateAnimatorFactory() {
	      this._animatorFactory = new AnimatorFactory({
	        animators: _animatorDict$3,
	        baseClass: NavigatorTransitionAnimator,
	        baseClassName: 'NavigatorTransitionAnimator',
	        defaultAnimation: this.getAttribute('animation')
	      });
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this._backButtonHandler.destroy();
	      this._backButtonHandler = null;
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'animation') {
	        this._updateAnimatorFactory();
	      }
	    }
	
	    /**
	     * @method popPage
	     * @signature popPage([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]
	     *     Animation name. Available animations are `"slide"`, `"lift"`, `"fade"` and `"none"`.
	     *
	     *     These are platform based animations. For fixed animations, add `"-ios"` or `"-md"` suffix to the animation name. E.g. `"lift-ios"`, `"lift-md"`. Defaults values are `"slide-ios"` and `"fade-md"`.
	     *   [/en]
	     *   [ja][/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]
	     * @param {Boolean} [options.refresh]
	     *   [en]The previous page will be refreshed (destroyed and created again) before popPage action.[/en]
	     *   [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]
	     * @param {Function} [options.callback]
	     *   [en]Function that is called when the transition has ended.[/en]
	     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]
	     * @param {Object} [options.data]
	     *   [en]Custom data that will be stored in the new page element.[/en]
	     *   [ja][/ja]
	     * @return {Promise}
	     *   [en]Promise which resolves to the revealed page.[/en]
	     *   [ja]明らかにしたページを解決するPromiseを返します。[/ja]
	     * @description
	     *   [en]Pops the current page from the page stack. The previous page will be displayed.[/en]
	     *   [ja]現在表示中のページをページスタックから取り除きます。一つ前のページに戻ります。[/ja]
	     */
	
	  }, {
	    key: 'popPage',
	    value: function popPage() {
	      var _this3 = this;
	
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      var _preparePageAndOption = this._preparePageAndOptions(null, options);
	
	      options = _preparePageAndOption.options;
	
	
	      var popUpdate = function popUpdate() {
	        return new Promise(function (resolve) {
	          _this3._pageLoader.unload(_this3.pages[_this3.pages.length - 1]);
	          resolve();
	        });
	      };
	
	      if (!options.refresh) {
	        return this._popPage(options, popUpdate);
	      } else {
	        return this._popPageAndRefresh(options, popUpdate);
	      }
	    }
	  }, {
	    key: '_popPageAndRefresh',
	    value: function _popPageAndRefresh(options, popUpdate) {
	      var _this4 = this;
	
	      util.warn('\'refresh\' option for pushPage has been deprecated and will be removed in the next release.');
	
	      var index = this.pages.length - 2;
	      var oldPage = this.pages[index];
	
	      if (!this._pageMap.has(oldPage)) {
	        throw new Error('Refresh option cannot be used with pages directly inside the Navigator. Use ons-template instead.');
	      }
	
	      var page = this._pageMap.get(oldPage);
	
	      return new Promise(function (resolve) {
	        var options = {
	          page: page,
	          parent: _this4,
	          params: oldPage.pushedOptions ? oldPage.pushedOptions.data : {}
	        };
	
	        _this4._pageLoader.load(options, function (pageElement) {
	          _this4._pageMap.set(pageElement, page);
	
	          pageElement = util.extend(pageElement, {
	            data: oldPage.data,
	            pushedOptions: oldPage.pushedOptions || {}
	          });
	
	          _this4.insertBefore(pageElement, oldPage ? oldPage : null);
	          _this4._pageLoader.unload(oldPage);
	          resolve();
	        });
	      }).then(function () {
	        return _this4._popPage(options, popUpdate);
	      });
	    }
	  }, {
	    key: '_popPage',
	    value: function _popPage(options) {
	      var _this5 = this;
	
	      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
	        return Promise.resolve();
	      };
	
	      if (this._isRunning) {
	        return Promise.reject('popPage is already running.');
	      }
	
	      if (this.pages.length <= 1) {
	        return Promise.reject('ons-navigator\'s page stack is empty.');
	      }
	
	      if (this._emitPrePopEvent()) {
	        return Promise.reject('Canceled in prepop event.');
	      }
	
	      var length = this.pages.length;
	
	      this._isRunning = true;
	
	      this.pages[length - 2].updateBackButton(length - 2 > 0);
	
	      return new Promise(function (resolve) {
	        var leavePage = _this5.pages[length - 1];
	        var enterPage = _this5.pages[length - 2];
	
	        options.animation = options.animation || (leavePage.pushedOptions ? leavePage.pushedOptions.animation : undefined);
	        options.animationOptions = util.extend({}, leavePage.pushedOptions ? leavePage.pushedOptions.animationOptions : {}, options.animationOptions || {});
	
	        if (options.data) {
	          enterPage.data = util.extend({}, enterPage.data || {}, options.data || {});
	        }
	
	        var callback = function callback() {
	          update().then(function () {
	            _this5._isRunning = false;
	
	            enterPage._show();
	            util.triggerElementEvent(_this5, 'postpop', { leavePage: leavePage, enterPage: enterPage, navigator: _this5 });
	
	            if (typeof options.callback === 'function') {
	              options.callback();
	            }
	
	            resolve(enterPage);
	          });
	        };
	
	        leavePage._hide();
	        var animator = _this5._animatorFactory.newAnimator(options);
	        animator.pop(_this5.pages[length - 2], _this5.pages[length - 1], callback);
	      }).catch(function () {
	        return _this5._isRunning = false;
	      });
	    }
	
	    /**
	     * @method pushPage
	     * @signature pushPage(page, [options])
	     * @param {String} page
	     *   [en]Page URL. Can be either a HTML document or a template defined with the `<ons-template>` tag.[/en]
	     *   [ja]pageのURLか、もしくはons-templateで宣言したテンプレートのid属性の値を指定できます。[/ja]
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.page]
	     *   [en]Page URL. Only necessary if `page` parameter is null or undefined.[/en]
	     *   [ja][/ja]
	     * @param {String} [options.pageHTML]
	     *   [en]HTML code that will be computed as a new page. Overwrites `page` parameter.[/en]
	     *   [ja][/ja]
	     * @param {String} [options.animation]
	     *   [en]
	     *     Animation name. Available animations are `"slide"`, `"lift"`, `"fade"` and `"none"`.
	     *
	     *     These are platform based animations. For fixed animations, add `"-ios"` or `"-md"` suffix to the animation name. E.g. `"lift-ios"`, `"lift-md"`. Defaults values are `"slide-ios"` and `"fade-md"`.
	     *   [/en]
	     *   [ja][/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]
	     * @param {Function} [options.callback]
	     *   [en]Function that is called when the transition has ended.[/en]
	     *   [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]
	     * @param {Object} [options.data]
	     *   [en]Custom data that will be stored in the new page element.[/en]
	     *   [ja][/ja]
	     * @return {Promise}
	     *   [en]Promise which resolves to the pushed page.[/en]
	     *   [ja]追加したページを解決するPromiseを返します。[/ja]
	     * @description
	     *   [en]Pushes the specified page into the stack.[/en]
	     *   [ja]指定したpageを新しいページスタックに追加します。新しいページが表示されます。[/ja]
	     */
	
	  }, {
	    key: 'pushPage',
	    value: function pushPage(page) {
	      var _this6 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var _preparePageAndOption2 = this._preparePageAndOptions(page, options);
	
	      page = _preparePageAndOption2.page;
	      options = _preparePageAndOption2.options;
	
	
	      var prepare = function prepare(pageElement) {
	        _this6._verifyPageElement(pageElement);
	        _this6._pageMap.set(pageElement, page);
	        pageElement = util.extend(pageElement, {
	          data: options.data
	        });
	        pageElement.style.visibility = 'hidden';
	      };
	
	      if (options.pageHTML) {
	        return this._pushPage(options, function () {
	          return new Promise(function (resolve) {
	            instantPageLoader.load({ page: options.pageHTML, parent: _this6, params: options.data }, function (pageElement) {
	              prepare(pageElement);
	              resolve();
	            });
	          });
	        });
	      }
	
	      return this._pushPage(options, function () {
	        return new Promise(function (resolve) {
	          _this6._pageLoader.load({ page: page, parent: _this6, params: options.data }, function (pageElement) {
	            prepare(pageElement);
	            resolve();
	          });
	        });
	      });
	    }
	  }, {
	    key: '_pushPage',
	    value: function _pushPage() {
	      var _this7 = this;
	
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
	        return Promise.resolve();
	      };
	
	      if (this._isRunning) {
	        return Promise.reject('pushPage is already running.');
	      }
	
	      if (this._emitPrePushEvent()) {
	        return Promise.reject('Canceled in prepush event.');
	      }
	
	      this._isRunning = true;
	
	      var animationOptions = AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options'));
	      options = util.extend({}, this.options || {}, { animationOptions: animationOptions }, options);
	
	      var animator = this._animatorFactory.newAnimator(options);
	
	      return update().then(function () {
	        var pageLength = _this7.pages.length;
	
	        var enterPage = _this7.pages[pageLength - 1];
	        var leavePage = options.leavePage || _this7.pages[pageLength - 2];
	
	        if (enterPage.nodeName !== 'ONS-PAGE') {
	          throw new Error('Only elements of type <ons-page> can be pushed to the navigator');
	        }
	
	        enterPage.updateBackButton(pageLength - 1);
	
	        enterPage.pushedOptions = util.extend({}, enterPage.pushedOptions || {}, options || {});
	        enterPage.data = util.extend({}, enterPage.data || {}, options.data || {});
	        enterPage.unload = enterPage.unload || options.unload;
	
	        return new Promise(function (resolve) {
	          var done = function done() {
	            _this7._isRunning = false;
	
	            setImmediate(function () {
	              return enterPage._show();
	            });
	            util.triggerElementEvent(_this7, 'postpush', { leavePage: leavePage, enterPage: enterPage, navigator: _this7 });
	
	            if (typeof options.callback === 'function') {
	              options.callback();
	            }
	
	            resolve(enterPage);
	          };
	
	          enterPage.style.visibility = '';
	          if (leavePage) {
	            leavePage._hide();
	            animator.push(enterPage, leavePage, done);
	          } else {
	            done();
	          }
	        });
	      }).catch(function (error) {
	        _this7._isRunning = false;
	        throw error;
	      });
	    }
	
	    /**
	     * @method replacePage
	     * @signature replacePage(page, [options])
	     * @return {Promise}
	     *   [en]Promise which resolves to the new page.[/en]
	     *   [ja]新しいページを解決するPromiseを返します。[/ja]
	     * @description
	     *   [en]Replaces the current top page with the specified one. Extends `pushPage()` parameters.[/en]
	     *   [ja]現在表示中のページをを指定したページに置き換えます。[/ja]
	     */
	
	  }, {
	    key: 'replacePage',
	    value: function replacePage(page) {
	      var _this8 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      return this.pushPage(page, options).then(function (resolvedValue) {
	        if (_this8.pages.length > 1) {
	          _this8._pageLoader.unload(_this8.pages[_this8.pages.length - 2]);
	        }
	        _this8._updateLastPageBackButton();
	
	        return Promise.resolve(resolvedValue);
	      });
	    }
	
	    /**
	     * @method insertPage
	     * @signature insertPage(index, page, [options])
	     * @param {Number} index
	     *   [en]The index where it should be inserted.[/en]
	     *   [ja]スタックに挿入する位置のインデックスを指定します。[/ja]
	     * @return {Promise}
	     *   [en]Promise which resolves to the inserted page.[/en]
	     *   [ja]指定したページを解決するPromiseを返します。[/ja]
	     * @description
	     *   [en]Insert the specified page into the stack with at a position defined by the `index` argument. Extends `pushPage()` parameters.[/en]
	     *   [ja]指定したpageをページスタックのindexで指定した位置に追加します。[/ja]
	     */
	
	  }, {
	    key: 'insertPage',
	    value: function insertPage(index, page) {
	      var _this9 = this;
	
	      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	      var _preparePageAndOption3 = this._preparePageAndOptions(page, options);
	
	      page = _preparePageAndOption3.page;
	      options = _preparePageAndOption3.options;
	
	      index = this._normalizeIndex(index);
	
	      if (index >= this.pages.length) {
	        return this.pushPage(page, options);
	      }
	
	      page = typeof options.pageHTML === 'string' ? options.pageHTML : page;
	      var loader = typeof options.pageHTML === 'string' ? instantPageLoader : this._pageLoader;
	
	      return new Promise(function (resolve) {
	        loader.load({ page: page, parent: _this9 }, function (pageElement) {
	          _this9._verifyPageElement(pageElement);
	          _this9._pageMap.set(pageElement, page);
	          pageElement = util.extend(pageElement, {
	            data: options.data,
	            pushedOptions: options
	          });
	
	          options.animationOptions = util.extend({}, AnimatorFactory.parseAnimationOptionsString(_this9.getAttribute('animation-options')), options.animationOptions || {});
	
	          _this9.insertBefore(pageElement, _this9.pages[index]);
	          _this9.topPage.updateBackButton(true);
	
	          setTimeout(function () {
	            pageElement = null;
	            resolve(_this9.pages[index]);
	          }, 1000 / 60);
	        });
	      });
	    }
	
	    /**
	     * @method resetToPage
	     * @signature resetToPage(page, [options])
	     * @return {Promise}
	     *   [en]Promise which resolves to the new top page.[/en]
	     *   [ja]新しいトップページを解決するPromiseを返します。[/ja]
	     * @description
	     *   [en]Clears page stack and adds the specified page to the stack. Extends `pushPage()` parameters.[/en]
	     *   [ja]ページスタックをリセットし、指定したページを表示します。[/ja]
	     */
	
	  }, {
	    key: 'resetToPage',
	    value: function resetToPage(page) {
	      var _this10 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var _preparePageAndOption4 = this._preparePageAndOptions(page, options);
	
	      page = _preparePageAndOption4.page;
	      options = _preparePageAndOption4.options;
	
	
	      if (!options.animator && !options.animation) {
	        options.animation = 'none';
	      }
	
	      var callback = options.callback;
	
	      options.callback = function () {
	        while (_this10.pages.length > 1) {
	          _this10._pageLoader.unload(_this10.pages[0]);
	        }
	
	        _this10.pages[0].updateBackButton(false);
	        callback && callback();
	      };
	
	      if (!options.page && !options.pageHTML && this._getPageTarget()) {
	        page = options.page = this._getPageTarget();
	      }
	
	      return this.pushPage(page, options);
	    }
	
	    /**
	     * @method bringPageTop
	     * @signature bringPageTop(item, [options])
	     * @param {String|Number} item
	     *   [en]Page URL or index of an existing page in navigator's stack.[/en]
	     *   [ja]ページのURLかもしくはons-navigatorのページスタックのインデックス値を指定します。[/ja]
	     * @return {Promise}
	     *   [en]Promise which resolves to the new top page.[/en]
	     *   [ja]新しいトップページを解決するPromiseを返します。[/ja]
	     * @description
	     *   [en]Brings the given page to the top of the page stack if it already exists or pushes it into the stack if doesn't. Extends `pushPage()` parameters.[/en]
	     *   [ja]指定したページをページスタックの一番上に移動します。もし指定したページが無かった場合新しくpushされます。[/ja]
	     */
	
	  }, {
	    key: 'bringPageTop',
	    value: function bringPageTop(item) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      if (['number', 'string'].indexOf(typeof item === 'undefined' ? 'undefined' : _typeof(item)) === -1) {
	        throw new Error('First argument must be a page name or the index of an existing page. You supplied ' + item);
	      }
	      var index = typeof item === 'number' ? this._normalizeIndex(item) : this._lastIndexOfPage(item);
	      var page = this.pages[index];
	
	      if (index < 0) {
	        return this.pushPage(item, options);
	      }
	
	      var _preparePageAndOption5 = this._preparePageAndOptions(page, options);
	
	      options = _preparePageAndOption5.options;
	
	
	      if (index === this.pages.length - 1) {
	        return Promise.resolve(page);
	      }
	      if (!page) {
	        throw new Error('Failed to find item ' + item);
	      }
	      if (this._isRunning) {
	        return Promise.reject('pushPage is already running.');
	      }
	      if (this._emitPrePushEvent()) {
	        return Promise.reject('Canceled in prepush event.');
	      }
	
	      page.style.visibility = 'hidden';
	      page.setAttribute('_skipinit', '');
	      page.parentNode.appendChild(page);
	      return this._pushPage(options);
	    }
	  }, {
	    key: '_preparePageAndOptions',
	    value: function _preparePageAndOptions(page) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) != 'object') {
	        throw new Error('options must be an object. You supplied ' + options);
	      }
	
	      if ((page === null || page === undefined) && options.page) {
	        page = options.page;
	      }
	
	      options = util.extend({}, this.options || {}, options, { page: page });
	
	      return { page: page, options: options };
	    }
	  }, {
	    key: '_updateLastPageBackButton',
	    value: function _updateLastPageBackButton() {
	      var index = this.pages.length - 1;
	      if (index >= 0) {
	        this.pages[index].updateBackButton(index > 0);
	      }
	    }
	  }, {
	    key: '_normalizeIndex',
	    value: function _normalizeIndex(index) {
	      return index >= 0 ? index : Math.abs(this.pages.length + index) % this.pages.length;
	    }
	  }, {
	    key: '_onDeviceBackButton',
	    value: function _onDeviceBackButton(event) {
	      if (this.pages.length > 1) {
	        this.popPage();
	      } else {
	        event.callParentHandler();
	      }
	    }
	  }, {
	    key: '_lastIndexOfPage',
	    value: function _lastIndexOfPage(pageName) {
	      var index = void 0;
	      for (index = this.pages.length - 1; index >= 0; index--) {
	        if (!this._pageMap.has(this.pages[index])) {
	          throw Error('This is bug.');
	        }
	
	        if (pageName === this._pageMap.get(this.pages[index])) {
	          break;
	        }
	      }
	      return index;
	    }
	  }, {
	    key: '_emitPreEvent',
	    value: function _emitPreEvent(name) {
	      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var isCanceled = false;
	
	      util.triggerElementEvent(this, 'pre' + name, util.extend({
	        navigator: this,
	        currentPage: this.pages[this.pages.length - 1],
	        cancel: function cancel() {
	          return isCanceled = true;
	        }
	      }, data));
	
	      return isCanceled;
	    }
	  }, {
	    key: '_emitPrePushEvent',
	    value: function _emitPrePushEvent() {
	      return this._emitPreEvent('push');
	    }
	  }, {
	    key: '_emitPrePopEvent',
	    value: function _emitPrePopEvent() {
	      var l = this.pages.length;
	      return this._emitPreEvent('pop', {
	        leavePage: this.pages[l - 1],
	        enterPage: this.pages[l - 2]
	      });
	    }
	
	    // TODO: 書き直す
	
	  }, {
	    key: '_createPageElement',
	    value: function _createPageElement(templateHTML) {
	      var pageElement = util.createElement(internal$1.normalizePageHTML(templateHTML));
	      this._verifyPageElement(pageElement);
	      return pageElement;
	    }
	
	    /**
	     * @param {Element} element
	     */
	
	  }, {
	    key: '_verifyPageElement',
	    value: function _verifyPageElement(element) {
	      if (element.nodeName.toLowerCase() !== 'ons-page') {
	        throw new Error('You must supply an "ons-page" element to "ons-navigator".');
	      }
	    }
	
	    /**
	     * @property onDeviceBackButton
	     * @type {Object}
	     * @description
	     *   [en]Back-button handler.[/en]
	     *   [ja]バックボタンハンドラ。[/ja]
	     */
	
	  }, {
	    key: '_show',
	    value: function _show() {
	      if (this.topPage) {
	        this.topPage._show();
	      }
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      if (this.topPage) {
	        this.topPage._hide();
	      }
	    }
	  }, {
	    key: '_destroy',
	    value: function _destroy() {
	      for (var i = this.pages.length - 1; i >= 0; i--) {
	        this._pageLoader.unload(this.pages[i]);
	      }
	
	      this.remove();
	    }
	
	    /**
	     * @param {String} name
	     * @param {Function} Animator
	     */
	
	  }, {
	    key: 'animatorFactory',
	
	
	    /**
	     * @attribute page
	     * @initonly
	     * @type {String}
	     * @description
	     *   [en]First page to show when navigator is initialized.[/en]
	     *   [ja]ナビゲーターが初期化された時に表示するページを指定します。[/ja]
	     */
	
	    /**
	     * @attribute animation
	     * @type {String}
	     * @default default
	     * @description
	     *   [en]
	     *     Animation name. Available animations are `"slide"`, `"lift"`, `"fade"` and `"none"`.
	     *
	     *     These are platform based animations. For fixed animations, add `"-ios"` or `"-md"` suffix to the animation name. E.g. `"lift-ios"`, `"lift-md"`. Defaults values are `"slide-ios"` and `"fade-md"` depending on the platform.
	     *   [/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @attribute animation-options
	     * @type {Expression}
	     * @description
	     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/en]
	     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/ja]
	     */
	
	    /**
	     * @event prepush
	     * @description
	     *   [en]Fired just before a page is pushed.[/en]
	     *   [ja]pageがpushされる直前に発火されます。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.navigator
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Object} event.currentPage
	     *   [en]Current page object.[/en]
	     *   [ja]現在のpageオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Call this function to cancel the push.[/en]
	     *   [ja]この関数を呼び出すと、push処理がキャンセルされます。[/ja]
	     */
	
	    /**
	     * @event prepop
	     * @description
	     *   [en]Fired just before a page is popped.[/en]
	     *   [ja]pageがpopされる直前に発火されます。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.navigator
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Object} event.currentPage
	     *   [en]Current page object.[/en]
	     *   [ja]現在のpageオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Call this function to cancel the pop.[/en]
	     *   [ja]この関数を呼び出すと、pageのpopがキャンセルされます。[/ja]
	     */
	
	    /**
	     * @event postpush
	     * @description
	     *   [en]Fired just after a page is pushed.[/en]
	     *   [ja]pageがpushされてアニメーションが終了してから発火されます。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.navigator
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Object} event.enterPage
	     *   [en]Object of the next page.[/en]
	     *   [ja]pushされたpageオブジェクト。[/ja]
	     * @param {Object} event.leavePage
	     *   [en]Object of the previous page.[/en]
	     *   [ja]以前のpageオブジェクト。[/ja]
	     */
	
	    /**
	     * @event postpop
	     * @description
	     *   [en]Fired just after a page is popped.[/en]
	     *   [ja]pageがpopされてアニメーションが終わった後に発火されます。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.navigator
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Object} event.enterPage
	     *   [en]Object of the next page.[/en]
	     *   [ja]popされて表示されるページのオブジェクト。[/ja]
	     * @param {Object} event.leavePage
	     *   [en]Object of the previous page.[/en]
	     *   [ja]popされて消えるページのオブジェクト。[/ja]
	     */
	
	    get: function get() {
	      return this._animatorFactory;
	    }
	  }, {
	    key: 'pageLoader',
	    get: function get() {
	      return this._pageLoader;
	    },
	    set: function set(pageLoader) {
	      if (!(pageLoader instanceof PageLoader)) {
	        throw Error('First parameter must be an instance of PageLoader.');
	      }
	      this._pageLoader = pageLoader;
	    }
	  }, {
	    key: 'page',
	    get: function get() {
	      return this._page;
	    },
	    set: function set(page) {
	      this._page = page;
	    }
	  }, {
	    key: 'onDeviceBackButton',
	    get: function get() {
	      return this._backButtonHandler;
	    },
	    set: function set(callback) {
	      if (this._backButtonHandler) {
	        this._backButtonHandler.destroy();
	      }
	
	      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);
	    }
	
	    /**
	     * @property topPage
	     * @readonly
	     * @type {HTMLElement}
	     * @description
	     *   [en]Current top page element. Use this method to access options passed by `pushPage()`-like methods.[/en]
	     *   [ja]現在のページを取得します。pushPage()やresetToPage()メソッドの引数を取得できます。[/ja]
	     */
	
	  }, {
	    key: 'topPage',
	    get: function get() {
	      return this.pages[this.pages.length - 1] || null;
	    }
	
	    /**
	     * @property pages
	     * @readonly
	     * @type {Array}
	     * @description
	     *   [en]Copy of the navigator's page stack.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'pages',
	    get: function get() {
	      return util.arrayFrom(this.children).filter(function (element) {
	        return element.tagName === 'ONS-PAGE';
	      });
	    }
	
	    /**
	     * @property options
	     * @type {Object}
	     * @description
	     *   [en]Default options object. Attributes have priority over this property.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @property options.animation
	     * @type {String}
	     * @description
	     *   [en]
	     *     Animation name. Available animations are `"slide"`, `"lift"`, `"fade"` and `"none"`.
	     *     These are platform based animations. For fixed animations, add `"-ios"` or `"-md"` suffix to the animation name. E.g. `"lift-ios"`, `"lift-md"`. Defaults values are `"slide-ios"` and `"fade-md"`.
	     *   [/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @property options.animationOptions
	     * @type {String}
	     * @description
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]
	     */
	
	    /**
	     * @property options.callback
	     * @type {String}
	     * @description
	     *   [en]Function that is called when the transition has ended.[/en]
	     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]
	     */
	
	    /**
	     * @property options.refresh
	     * @default  false
	     * @type {Boolean}
	     * @description
	     *   [en]If this parameter is `true`, the previous page will be refreshed (destroyed and created again) before `popPage()` action.[/en]
	     *   [ja]popPageする前に、前にあるページを生成しなおして更新する場合にtrueを指定します。[/ja]
	     */
	
	  }, {
	    key: 'options',
	    get: function get() {
	      return this._options;
	    },
	    set: function set(object) {
	      this._options = object;
	    }
	  }, {
	    key: '_isRunning',
	    set: function set(value) {
	      this.setAttribute('_is-running', value ? 'true' : 'false');
	    },
	    get: function get() {
	      return JSON.parse(this.getAttribute('_is-running'));
	    }
	  }], [{
	    key: 'registerAnimator',
	    value: function registerAnimator(name, Animator) {
	      if (!(Animator.prototype instanceof NavigatorTransitionAnimator)) {
	        throw new Error('"Animator" param must inherit NavigatorElement.NavigatorTransitionAnimator');
	      }
	
	      _animatorDict$3[name] = Animator;
	    }
	  }, {
	    key: 'observedAttributes',
	    get: function get() {
	      return ['animation'];
	    }
	  }, {
	    key: 'animators',
	    get: function get() {
	      return _animatorDict$3;
	    }
	  }, {
	    key: 'NavigatorTransitionAnimator',
	    get: function get() {
	      return NavigatorTransitionAnimator;
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['prepush', 'postpush', 'prepop', 'postpop'];
	    }
	  }, {
	    key: 'rewritables',
	    get: function get() {
	      return rewritables;
	    }
	  }]);
	  return NavigatorElement;
	}(BaseElement);
	
	customElements.define('ons-navigator', NavigatorElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$10 = 'toolbar';
	
	var scheme$14 = {
	  '': 'toolbar--*',
	  '.toolbar__left': 'toolbar--*__left',
	  '.toolbar__center': 'toolbar--*__center',
	  '.toolbar__right': 'toolbar--*__right'
	};
	
	/**
	 * @element ons-toolbar
	 * @category page
	 * @modifier material
	 *   [en]Material Design toolbar.[/en]
	 *   [ja][/ja]
	 * @modifier transparent
	 *   [en]Transparent toolbar[/en]
	 *   [ja]透明な背景を持つツールバーを表示します。[/ja]
	 * @modifier noshadow
	 *   [en]Toolbar without shadow[/en]
	 *   [ja]ツールバーに影を付けずに表示します。[/ja]
	 * @description
	 *   [en]
	 *     Toolbar component that can be used with navigation.
	 *
	 *     Left, center and right container can be specified by class names.
	 *
	 *     This component will automatically displays as a Material Design toolbar when running on Android devices.
	 *   [/en]
	 *   [ja]ナビゲーションで使用するツールバー用コンポーネントです。クラス名により、左、中央、右のコンテナを指定できます。[/ja]
	 * @codepen aHmGL
	 * @tutorial vanilla/Reference/page
	 * @guide adding-a-toolbar [en]Adding a toolbar[/en][ja]ツールバーの追加[/ja]
	 * @seealso ons-bottom-toolbar
	 *   [en]The `<ons-bottom-toolbar>` displays a toolbar on the bottom of the page.[/en]
	 *   [ja]ons-bottom-toolbarコンポーネント[/ja]
	 * @seealso ons-back-button
	 *   [en]The `<ons-back-button>` component displays a back button inside the toolbar.[/en]
	 *   [ja]ons-back-buttonコンポーネント[/ja]
	 * @seealso ons-toolbar-button
	 *   [en]The `<ons-toolbar-button>` component displays a toolbar button inside the toolbar.[/en]
	 *   [ja]ons-toolbar-buttonコンポーネント[/ja]
	 * @example
	 * <ons-page>
	 *   <ons-toolbar>
	 *     <div class="left">
	 *       <ons-back-button>
	 *         Back
	 *       </ons-back-button>
	 *     </div>
	 *     <div class="center">
	 *       Title
	 *     </div>
	 *     <div class="right">
	 *       <ons-toolbar-button>
	 *         <ons-icon icon="md-menu"></ons-icon>
	 *       </ons-toolbar-button>
	 *     </div>
	 *   </ons-toolbar>
	 * </ons-page>
	 */
	
	var ToolbarElement = function (_BaseElement) {
	  inherits(ToolbarElement, _BaseElement);
	
	  function ToolbarElement() {
	    classCallCheck(this, ToolbarElement);
	    return possibleConstructorReturn(this, (ToolbarElement.__proto__ || Object.getPrototypeOf(ToolbarElement)).apply(this, arguments));
	  }
	
	  createClass(ToolbarElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute inline
	     * @initonly
	     * @description
	     *   [en]Display the toolbar as an inline element.[/en]
	     *   [ja]ツールバーをインラインに置きます。スクロール領域内にそのまま表示されます。[/ja]
	     */
	
	    /**
	     * @attribute modifier
	     * @description
	     *   [en]The appearance of the toolbar.[/en]
	     *   [ja]ツールバーの表現を指定します。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        _this2._compile();
	      });
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$10)) {
	            this.className = defaultClassName$10 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$14);
	          break;
	      }
	    }
	
	    /**
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_getToolbarLeftItemsElement',
	    value: function _getToolbarLeftItemsElement() {
	      return this.querySelector('.left') || internal$1.nullElement;
	    }
	
	    /**
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_getToolbarCenterItemsElement',
	    value: function _getToolbarCenterItemsElement() {
	      return this.querySelector('.center') || internal$1.nullElement;
	    }
	
	    /**
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_getToolbarRightItemsElement',
	    value: function _getToolbarRightItemsElement() {
	      return this.querySelector('.right') || internal$1.nullElement;
	    }
	
	    /**
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_getToolbarBackButtonLabelElement',
	    value: function _getToolbarBackButtonLabelElement() {
	      return this.querySelector('ons-back-button .back-button__label') || internal$1.nullElement;
	    }
	
	    /**
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_getToolbarBackButtonIconElement',
	    value: function _getToolbarBackButtonIconElement() {
	      return this.querySelector('ons-back-button .back-button__icon') || internal$1.nullElement;
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	      this.classList.add(defaultClassName$10);
	      this._ensureToolbarItemElements();
	      ModifierUtil.initModifier(this, scheme$14);
	    }
	  }, {
	    key: '_ensureToolbarItemElements',
	    value: function _ensureToolbarItemElements() {
	      for (var i = this.childNodes.length - 1; i >= 0; i--) {
	        // case of not element
	        if (this.childNodes[i].nodeType != 1) {
	          this.removeChild(this.childNodes[i]);
	        }
	      }
	
	      var center = this._ensureToolbarElement('center');
	      center.classList.add('toolbar__title');
	
	      if (this.children.length !== 1 || !this.children[0].classList.contains('center')) {
	        var left = this._ensureToolbarElement('left');
	        var right = this._ensureToolbarElement('right');
	
	        if (this.children[0] !== left || this.children[1] !== center || this.children[2] !== right) {
	          this.appendChild(left);
	          this.appendChild(center);
	          this.appendChild(right);
	        }
	      }
	    }
	  }, {
	    key: '_ensureToolbarElement',
	    value: function _ensureToolbarElement(name) {
	      if (util.findChild(this, '.toolbar__' + name)) {
	        var _element = util.findChild(this, '.toolbar__' + name);
	        _element.classList.add(name);
	        return _element;
	      }
	
	      var element = util.findChild(this, '.' + name) || util.create('.' + name);
	      element.classList.add('toolbar__' + name);
	
	      return element;
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class'];
	    }
	  }]);
	  return ToolbarElement;
	}(BaseElement);
	
	customElements.define('ons-toolbar', ToolbarElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$9 = 'page';
	var scheme$13 = {
	  '': 'page--*',
	  '.page__content': 'page--*__content',
	  '.page__background': 'page--*__background'
	};
	
	var nullToolbarElement = document.createElement('ons-toolbar'); // requires that 'ons-toolbar' element is registered
	
	/**
	 * @element ons-page
	 * @category page
	 * @modifier material
	 *   [en]Material Design style[/en]
	 *   [ja][/ja]
	 * @description
	 *   [en]
	 *     This component defines the root of each page. If the content is large it will become scrollable.
	 *
	 *     A navigation bar can be added to the top of the page using the `<ons-toolbar>` element.
	 *   [/en]
	 *   [ja]ページ定義のためのコンポーネントです。このコンポーネントの内容はスクロールが許可されます。[/ja]
	 * @tutorial vanilla/Reference/page
	 * @guide creating-a-page
	 *   [en]Setting up a page in its `init` event[/en]
	 *   [ja]Setting up a page in its `init` event[/ja]
	 * @guide templates
	 *   [en]Defining multiple pages in single html[/en]
	 *   [ja]複数のページを1つのHTMLに記述する[/ja]
	 * @guide multiple-page-navigation
	 *   [en]Managing multiple pages[/en]
	 *   [ja]複数のページを管理する[/ja]
	 * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]
	 * @seealso ons-toolbar
	 *   [en]Use the `<ons-toolbar>` element to add a navigation bar to the top of the page.[/en]
	 *   [ja][/ja]
	 * @example
	 * <ons-page>
	 *   <ons-toolbar>
	 *     <div class="left">
	 *       <ons-back-button>Back</ons-back-button>
	 *     </div>
	 *     <div class="center">Title</div>
	 *     <div class="right">
	 *       <ons-toolbar-button>
	 *         <ons-icon icon="md-menu"></ons-icon>
	 *       </ons-toolbar-button>
	 *     </div>
	 *   </ons-toolbar>
	 *
	 *   <p>Page content</p>
	 * </ons-page>
	 *
	 * @example
	 * <script>
	 *   myApp.handler = function(done) {
	 *     loadMore().then(done);
	 *   }
	 * </script>
	 *
	 * <ons-page on-infinite-scroll="myApp.handler">
	 *   <ons-toolbar>
	 *     <div class="center">List</div>
	 *   </ons-toolbar>
	 *
	 *   <ons-list>
	 *     <ons-list-item>#1</ons-list-item>
	 *     <ons-list-item>#2</ons-list-item>
	 *     <ons-list-item>#3</ons-list-item>
	 *     ...
	 *   </ons-list>
	 * </ons-page>
	 */
	
	var PageElement = function (_BaseElement) {
	  inherits(PageElement, _BaseElement);
	
	  function PageElement() {
	    classCallCheck(this, PageElement);
	    return possibleConstructorReturn(this, (PageElement.__proto__ || Object.getPrototypeOf(PageElement)).apply(this, arguments));
	  }
	
	  createClass(PageElement, [{
	    key: 'init',
	
	
	    /**
	     * @event init
	     * @description
	     *   [en]Fired right after the page is attached.[/en]
	     *   [ja]ページがアタッチされた後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     */
	
	    /**
	     * @event show
	     * @description
	     *   [en]Fired right after the page is shown.[/en]
	     *   [ja]ページが表示された後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     */
	
	    /**
	     * @event hide
	     * @description
	     *   [en]Fired right after the page is hidden.[/en]
	     *   [ja]ページが隠れた後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     */
	
	    /**
	     * @event destroy
	     * @description
	     *   [en]Fired right before the page is destroyed.[/en]
	     *   [ja]ページが破棄される前に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     */
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]Specify modifier name to specify custom styles.[/en]
	     *   [ja]スタイル定義をカスタマイズするための名前を指定します。[/ja]
	     */
	
	    /**
	     * @attribute on-infinite-scroll
	     * @type {String}
	     * @description
	     *   [en]Path of the function to be executed on infinite scrolling. Example: `app.loadData`. The function receives a done callback that must be called when it's finished.[/en]
	     *   [ja][/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      this.classList.add(defaultClassName$9);
	      this._initialized = false;
	
	      contentReady(this, function () {
	        _this2._compile();
	
	        _this2._isShown = false;
	        _this2._contentElement = _this2._getContentElement();
	        _this2._isMuted = _this2.hasAttribute('_muted');
	        _this2._skipInit = _this2.hasAttribute('_skipinit');
	      });
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this3 = this;
	
	      if (this._initialized) {
	        return;
	      }
	
	      this._initialized = true;
	
	      contentReady(this, function () {
	        if (!_this3._isMuted) {
	          if (_this3._skipInit) {
	            _this3.removeAttribute('_skipinit');
	          } else {
	            setImmediate(function () {
	              return util.triggerElementEvent(_this3, 'init');
	            });
	          }
	        }
	
	        if (!util.hasAnyComponentAsParent(_this3)) {
	          setImmediate(function () {
	            return _this3._show();
	          });
	        }
	
	        _this3._tryToFillStatusBar();
	
	        if (_this3.hasAttribute('on-infinite-scroll')) {
	          _this3.attributeChangedCallback('on-infinite-scroll', null, _this3.getAttribute('on-infinite-scroll'));
	        }
	      });
	    }
	  }, {
	    key: 'updateBackButton',
	    value: function updateBackButton(show) {
	      if (this.backButton) {
	        show ? this.backButton.show() : this.backButton.hide();
	      }
	    }
	  }, {
	    key: '_tryToFillStatusBar',
	    value: function _tryToFillStatusBar() {
	      var _this4 = this;
	
	      internal$1.autoStatusBarFill(function () {
	        var filled = util.findParent(_this4, function (e) {
	          return e.hasAttribute('status-bar-fill');
	        });
	        util.toggleAttribute(_this4, 'status-bar-fill', !filled && (_this4._canAnimateToolbar() || !_this4._hasAPageControlChild()));
	      });
	    }
	  }, {
	    key: '_hasAPageControlChild',
	    value: function _hasAPageControlChild() {
	      return util.findChild(this._contentElement, function (e) {
	        return e.nodeName.match(/ons-(splitter|sliding-menu|navigator|tabbar)/i);
	      });
	    }
	
	    /**
	     * @property onInfiniteScroll
	     * @description
	     *  [en]Function to be executed when scrolling to the bottom of the page. The function receives a done callback as an argument that must be called when it's finished.[/en]
	     *  [ja][/ja]
	     */
	
	  }, {
	    key: '_onScroll',
	    value: function _onScroll() {
	      var _this5 = this;
	
	      var c = this._contentElement,
	          overLimit = (c.scrollTop + c.clientHeight) / c.scrollHeight >= this._infiniteScrollLimit;
	
	      if (this._onInfiniteScroll && !this._loadingContent && overLimit) {
	        this._loadingContent = true;
	        this._onInfiniteScroll(function () {
	          return _this5._loadingContent = false;
	        });
	      }
	    }
	
	    /**
	     * @property onDeviceBackButton
	     * @type {Object}
	     * @description
	     *   [en]Back-button handler.[/en]
	     *   [ja]バックボタンハンドラ。[/ja]
	     */
	
	  }, {
	    key: '_getContentElement',
	
	
	    /**
	     * @return {HTMLElement}
	     */
	    value: function _getContentElement() {
	      var result = util.findChild(this, '.page__content');
	      if (result) {
	        return result;
	      }
	      throw Error('fail to get ".page__content" element.');
	    }
	
	    /**
	     * @return {Boolean}
	     */
	
	  }, {
	    key: '_canAnimateToolbar',
	    value: function _canAnimateToolbar() {
	      if (util.findChild(this, 'ons-toolbar')) {
	        return true;
	      }
	      return !!util.findChild(this._contentElement, function (el) {
	        return util.match(el, 'ons-toolbar') && !el.hasAttribute('inline');
	      });
	    }
	
	    /**
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_getBackgroundElement',
	    value: function _getBackgroundElement() {
	      var result = util.findChild(this, '.page__background');
	      if (result) {
	        return result;
	      }
	      throw Error('fail to get ".page__background" element.');
	    }
	
	    /**
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_getBottomToolbarElement',
	    value: function _getBottomToolbarElement() {
	      return util.findChild(this, 'ons-bottom-toolbar') || internal$1.nullElement;
	    }
	
	    /**
	     * @return {HTMLElement}
	     */
	
	  }, {
	    key: '_getToolbarElement',
	    value: function _getToolbarElement() {
	      return util.findChild(this, 'ons-toolbar') || nullToolbarElement;
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      var _this6 = this;
	
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$9)) {
	            this.className = defaultClassName$9 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$13);
	          break;
	        case '_muted':
	          this._isMuted = this.hasAttribute('_muted');
	          break;
	        case '_skipinit':
	          this._skipInit = this.hasAttribute('_skipinit');
	          break;
	        case 'on-infinite-scroll':
	          if (current === null) {
	            this.onInfiniteScroll = null;
	          } else {
	            this.onInfiniteScroll = function (done) {
	              var f = util.findFromPath(current);
	              _this6.onInfiniteScroll = f;
	              f(done);
	            };
	          }
	          break;
	      }
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      var _this7 = this;
	
	      autoStyle.prepare(this);
	
	      if (util.findChild(this, '.content')) {
	        util.findChild(this, '.content').classList.add('page__content');
	      }
	
	      if (util.findChild(this, '.background')) {
	        util.findChild(this, '.background').classList.add('page__background');
	      }
	
	      if (!util.findChild(this, '.page__content')) {
	        var content = util.create('.page__content');
	
	        util.arrayFrom(this.childNodes).forEach(function (node) {
	          if (node.nodeType !== 1 || _this7._elementShouldBeMoved(node)) {
	            content.appendChild(node);
	          }
	        });
	
	        var prevNode = util.findChild(this, '.page__background') || util.findChild(this, 'ons-toolbar');
	
	        this.insertBefore(content, prevNode && prevNode.nextSibling);
	      }
	
	      if (!util.findChild(this, '.page__background')) {
	        var background = util.create('.page__background');
	        this.insertBefore(background, util.findChild(this, '.page__content'));
	      }
	
	      ModifierUtil.initModifier(this, scheme$13);
	    }
	  }, {
	    key: '_elementShouldBeMoved',
	    value: function _elementShouldBeMoved(el) {
	      if (el.classList.contains('page__background')) {
	        return false;
	      }
	      var tagName = el.tagName.toLowerCase();
	      if (tagName === 'ons-fab') {
	        return !el.hasAttribute('position');
	      }
	      var fixedElements = ['ons-toolbar', 'ons-bottom-toolbar', 'ons-modal', 'ons-speed-dial', 'ons-dialog', 'ons-alert-dialog', 'ons-popover'];
	      return el.hasAttribute('inline') || fixedElements.indexOf(tagName) === -1;
	    }
	  }, {
	    key: '_show',
	    value: function _show() {
	      if (!this._isShown && util.isAttached(this)) {
	        this._isShown = true;
	
	        if (!this._isMuted) {
	          util.triggerElementEvent(this, 'show');
	        }
	
	        util.propagateAction(this, '_show');
	      }
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      if (this._isShown) {
	        this._isShown = false;
	
	        if (!this._isMuted) {
	          util.triggerElementEvent(this, 'hide');
	        }
	
	        util.propagateAction(this, '_hide');
	      }
	    }
	  }, {
	    key: '_destroy',
	    value: function _destroy() {
	      this._hide();
	
	      if (!this._isMuted) {
	        util.triggerElementEvent(this, 'destroy');
	      }
	
	      if (this.onDeviceBackButton) {
	        this.onDeviceBackButton.destroy();
	      }
	
	      util.propagateAction(this, '_destroy');
	
	      this.remove();
	    }
	  }, {
	    key: 'name',
	    set: function set(str) {
	      this.setAttribute('name', str);
	    },
	    get: function get() {
	      return this.getAttribute('name');
	    }
	  }, {
	    key: 'backButton',
	    get: function get() {
	      return this.querySelector('ons-back-button');
	    }
	  }, {
	    key: 'onInfiniteScroll',
	    set: function set(value) {
	      var _this8 = this;
	
	      if (value === null) {
	        this._onInfiniteScroll = null;
	        this._contentElement.removeEventListener('scroll', this._boundOnScroll);
	        return;
	      }
	      if (!(value instanceof Function)) {
	        throw new Error('onInfiniteScroll must be a function or null');
	      }
	      if (!this._onInfiniteScroll) {
	        this._infiniteScrollLimit = 0.9;
	        this._boundOnScroll = this._onScroll.bind(this);
	        setImmediate(function () {
	          return _this8._contentElement.addEventListener('scroll', _this8._boundOnScroll);
	        });
	      }
	      this._onInfiniteScroll = value;
	    },
	    get: function get() {
	      return this._onInfiniteScroll;
	    }
	  }, {
	    key: 'onDeviceBackButton',
	    get: function get() {
	      return this._backButtonHandler;
	    },
	    set: function set(callback) {
	      if (this._backButtonHandler) {
	        this._backButtonHandler.destroy();
	      }
	
	      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', '_muted', '_skipinit', 'on-infinite-scroll', 'class'];
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['init', 'show', 'hide', 'destroy'];
	    }
	
	    /**
	     * @property data
	     * @type {*}
	     * @description
	     *   [en]User's custom data passed to `pushPage()`-like methods.[/en]
	     *   [ja][/ja]
	     */
	
	  }]);
	  return PageElement;
	}(BaseElement);
	
	customElements.define('ons-page', PageElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	var PopoverAnimator = function (_BaseAnimator) {
	  inherits(PopoverAnimator, _BaseAnimator);
	
	  /**
	   * @param {Object} options
	   * @param {String} options.timing
	   * @param {Number} options.duration
	   * @param {Number} options.delay
	   */
	  function PopoverAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref$timing,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.2 : _ref$duration;
	
	    classCallCheck(this, PopoverAnimator);
	    return possibleConstructorReturn(this, (PopoverAnimator.__proto__ || Object.getPrototypeOf(PopoverAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));
	  }
	
	  createClass(PopoverAnimator, [{
	    key: 'show',
	    value: function show(popover, callback) {
	      callback();
	    }
	  }, {
	    key: 'hide',
	    value: function hide(popover, callback) {
	      callback();
	    }
	  }, {
	    key: '_animate',
	    value: function _animate(element, _ref2) {
	      var from = _ref2.from,
	          to = _ref2.to,
	          options = _ref2.options,
	          callback = _ref2.callback,
	          _ref2$restore = _ref2.restore,
	          restore = _ref2$restore === undefined ? false : _ref2$restore,
	          animation = _ref2.animation;
	
	      options = util.extend({}, this.options, options);
	
	      if (animation) {
	        from = animation.from;
	        to = animation.to;
	      }
	
	      animation = Animit(element);
	      if (restore) {
	        animation = animation.saveStyle();
	      }
	      animation = animation.queue(from).wait(this.delay).queue({
	        css: to,
	        duration: this.duration,
	        timing: this.timing
	      });
	      if (restore) {
	        animation = animation.restoreStyle();
	      }
	      if (callback) {
	        animation = animation.queue(function (done) {
	          callback();
	          done();
	        });
	      }
	      return animation;
	    }
	  }, {
	    key: '_animateAll',
	    value: function _animateAll(element, animations) {
	      var _this2 = this;
	
	      Object.keys(animations).forEach(function (key) {
	        return _this2._animate(element[key], animations[key]).play();
	      });
	    }
	  }]);
	  return PopoverAnimator;
	}(BaseAnimator);
	
	var fade$1 = {
	  out: {
	    from: { opacity: 1.0 },
	    to: { opacity: 0 }
	  },
	  in: {
	    from: { opacity: 0 },
	    to: { opacity: 1.0 }
	  }
	};
	
	var MDFadePopoverAnimator = function (_PopoverAnimator) {
	  inherits(MDFadePopoverAnimator, _PopoverAnimator);
	
	  function MDFadePopoverAnimator() {
	    classCallCheck(this, MDFadePopoverAnimator);
	    return possibleConstructorReturn(this, (MDFadePopoverAnimator.__proto__ || Object.getPrototypeOf(MDFadePopoverAnimator)).apply(this, arguments));
	  }
	
	  createClass(MDFadePopoverAnimator, [{
	    key: 'show',
	    value: function show(popover, callback) {
	      this._animateAll(popover, {
	        _mask: fade$1.in,
	        _popover: { animation: fade$1.in, restore: true, callback: callback }
	      });
	    }
	  }, {
	    key: 'hide',
	    value: function hide(popover, callback) {
	      this._animateAll(popover, {
	        _mask: fade$1.out,
	        _popover: { animation: fade$1.out, restore: true, callback: callback }
	      });
	    }
	  }]);
	  return MDFadePopoverAnimator;
	}(PopoverAnimator);
	
	var IOSFadePopoverAnimator = function (_MDFadePopoverAnimato) {
	  inherits(IOSFadePopoverAnimator, _MDFadePopoverAnimato);
	
	  function IOSFadePopoverAnimator() {
	    classCallCheck(this, IOSFadePopoverAnimator);
	    return possibleConstructorReturn(this, (IOSFadePopoverAnimator.__proto__ || Object.getPrototypeOf(IOSFadePopoverAnimator)).apply(this, arguments));
	  }
	
	  createClass(IOSFadePopoverAnimator, [{
	    key: 'show',
	    value: function show(popover, callback) {
	      this._animateAll(popover, {
	        _mask: fade$1.in,
	        _popover: {
	          from: {
	            transform: 'scale3d(1.3, 1.3, 1.0)',
	            opacity: 0
	          },
	          to: {
	            transform: 'scale3d(1.0, 1.0,  1.0)',
	            opacity: 1.0
	          },
	          restore: true,
	          callback: callback
	        }
	      });
	    }
	  }]);
	  return IOSFadePopoverAnimator;
	}(MDFadePopoverAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$15 = {
	  '.popover': 'popover--*',
	  '.popover-mask': 'popover-mask--*',
	  '.popover__content': 'popover--*__content',
	  '.popover__arrow': 'popover--*__arrow'
	};
	
	var _animatorDict$4 = {
	  'default': function _default() {
	    return platform.isAndroid() ? MDFadePopoverAnimator : IOSFadePopoverAnimator;
	  },
	  'none': PopoverAnimator,
	  'fade-ios': IOSFadePopoverAnimator,
	  'fade-md': MDFadePopoverAnimator
	};
	
	var templateSource = util.createFragment('\n  <div class="popover-mask"></div>\n  <div class="popover">\n    <div class="popover__content"></div>\n    <div class="popover__arrow"></div>\n  </div>\n');
	
	var positions = {
	  up: 'bottom',
	  left: 'right',
	  down: 'top',
	  right: 'left'
	};
	
	/**
	 * @element ons-popover
	 * @category dialog
	 * @description
	 *  [en]
	 *    A component that displays a popover next to an element. The popover can be used to display extra information about a component or a tooltip.
	 *
	 *    To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createPopover(template)` utility function and the `<ons-template>` tag.
	 *
	 *    Another common way to use the popover is to display a menu when a button on the screen is tapped. For Material Design, popover looks exactly as a dropdown menu.
	 *  [/en]
	 *  [ja]ある要素を対象とするポップオーバーを表示するコンポーネントです。[/ja]
	 * @codepen ZYYRKo
	 * @tutorial vanilla/Reference/popover
	 * @guide dialogs
	 *  [en]Dialog components[/en]
	 *  [ja]Dialog components[/ja]
	 * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]
	 * @example
	 * <ons-button onclick="showPopover(this)">
	 *   Click me!
	 * </ons-button>
	 *
	 * <ons-popover direction="down" id="popover">
	 *   <p>This is a popover!</p>
	 * </ons-popover>
	 *
	 * <script>
	 *   var showPopover = function(element) {
	 *     var popover = document.getElementById('popover');
	 *     popover.show(element);
	 *   };
	 * </script>
	 */
	
	var PopoverElement = function (_BaseDialogElement) {
	  inherits(PopoverElement, _BaseDialogElement);
	
	  function PopoverElement() {
	    classCallCheck(this, PopoverElement);
	    return possibleConstructorReturn(this, (PopoverElement.__proto__ || Object.getPrototypeOf(PopoverElement)).apply(this, arguments));
	  }
	
	  createClass(PopoverElement, [{
	    key: 'init',
	
	
	    /**
	     * @event preshow
	     * @description
	     *   [en]Fired just before the popover is displayed.[/en]
	     *   [ja]ポップオーバーが表示される直前に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.popover
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Call this function to stop the popover from being shown.[/en]
	     *   [ja]この関数を呼び出すと、ポップオーバーの表示がキャンセルされます。[/ja]
	     */
	
	    /**
	     * @event postshow
	     * @description
	     *   [en]Fired just after the popover is displayed.[/en]
	     *   [ja]ポップオーバーが表示された直後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.popover
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     */
	
	    /**
	     * @event prehide
	     * @description
	     *   [en]Fired just before the popover is hidden.[/en]
	     *   [ja]ポップオーバーが隠れる直前に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.popover
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Call this function to stop the popover from being hidden.[/en]
	     *   [ja]この関数を呼び出すと、ポップオーバーが隠れる処理をキャンセルします。[/ja]
	     */
	
	    /**
	     * @event posthide
	     * @description
	     *   [en]Fired just after the popover is hidden.[/en]
	     *   [ja]ポップオーバーが隠れた後に発火します。[/ja]
	     * @param {Object} event [en]Event object.[/en]
	     * @param {Object} event.popover
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     */
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *  [en]The appearance of the popover.[/en]
	     *  [ja]ポップオーバーの表現を指定します。[/ja]
	     */
	
	    /**
	     * @attribute direction
	     * @type {String}
	     * @description
	     *  [en]
	     *    A space separated list of directions. If more than one direction is specified,
	     *    it will be chosen automatically. Valid directions are `"up"`, `"down"`, `"left"` and `"right"`.
	     *  [/en]
	     *  [ja]
	     *    ポップオーバーを表示する方向を空白区切りで複数指定できます。
	     *    指定できる方向は、"up", "down", "left", "right"の4つです。空白区切りで複数指定することもできます。
	     *    複数指定された場合、対象とする要素に合わせて指定した値から自動的に選択されます。
	     *  [/ja]
	     */
	
	    /**
	     * @attribute cancelable
	     * @description
	     *   [en]If this attribute is set the popover can be closed by tapping the background or by pressing the back button.[/en]
	     *   [ja]この属性があると、ポップオーバーが表示された時に、背景やバックボタンをタップした時にをポップオーバー閉じます。[/ja]
	     */
	
	    /**
	     * @attribute cover-target
	     * @description
	     *   [en]If set the popover will cover the target on the screen.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @attribute animation
	     * @type {String}
	     * @description
	     *   [en]The animation used when showing an hiding the popover. Can be either `"none"`, `"default"`, `"fade-ios"` or `"fade-md"`.[/en]
	     *   [ja]ポップオーバーを表示する際のアニメーション名を指定します。[/ja]
	     */
	
	    /**
	     * @attribute animation-options
	     * @type {Expression}
	     * @description
	     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]
	     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]
	     */
	
	    /**
	     * @attribute mask-color
	     * @type {Color}
	     * @description
	     *   [en]Color of the background mask. Default is `"rgba(0, 0, 0, 0.2)"`.[/en]
	     *   [ja]背景のマスクの色を指定します。デフォルトは"rgba(0, 0, 0, 0.2)"です。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      get$1(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'init', this).call(this);
	      this._boundOnChange = this._onChange.bind(this);
	
	      contentReady(this, function () {
	        _this2._compile();
	        _this2.style.display = 'none';
	      });
	    }
	  }, {
	    key: '_updateAnimatorFactory',
	    value: function _updateAnimatorFactory() {
	      return new AnimatorFactory({
	        animators: _animatorDict$4,
	        baseClass: PopoverAnimator,
	        baseClassName: 'PopoverAnimator',
	        defaultAnimation: this.getAttribute('animation') || 'default'
	      });
	    }
	  }, {
	    key: '_toggleStyle',
	    value: function _toggleStyle(shouldShow) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      if (shouldShow) {
	        this.style.display = 'block';
	        this._currentTarget = options.target;
	        this._positionPopover(options.target);
	      } else {
	        this.style.display = 'none';
	        this._clearStyles();
	      }
	    }
	  }, {
	    key: '_positionPopover',
	    value: function _positionPopover(target) {
	      var radius = this._radius,
	          contentElement = this._content,
	          margin = this._margin;
	
	      var targetRect = target.getBoundingClientRect();
	      var isMD = util.hasModifier(this, 'material');
	      var cover = isMD && this.hasAttribute('cover-target');
	
	      var targetDistance = {
	        top: targetRect.top - margin,
	        left: targetRect.left - margin,
	        right: window.innerWidth - targetRect.right - margin,
	        bottom: window.innerHeight - targetRect.bottom - margin
	      };
	
	      var targetCenterDistanceFrom = {
	        top: targetRect.top + Math.round(targetRect.height / 2),
	        bottom: window.innerHeight - targetRect.bottom + Math.round(targetRect.height / 2),
	        left: targetRect.left + Math.round(targetRect.width / 2),
	        right: window.innerWidth - targetRect.right + Math.round(targetRect.width / 2)
	      };
	
	      var _calculateDirections2 = this._calculateDirections(targetDistance),
	          vertical = _calculateDirections2.vertical,
	          primaryDirection = _calculateDirections2.primary,
	          secondary = _calculateDirections2.secondary;
	
	      ModifierUtil.addModifier(this, primaryDirection);
	
	      var sizeName = vertical ? 'width' : 'height';
	      // Get .popover__content size
	      var contentSize = function (style) {
	        return {
	          width: parseInt(style.getPropertyValue('width'), 10),
	          height: parseInt(style.getPropertyValue('height'), 10)
	        };
	      }(window.getComputedStyle(contentElement));
	
	      // Setting .popover position.
	      var offset = cover ? 0 : (vertical ? targetRect.height : targetRect.width) + (isMD ? 0 : 14);
	      this._popover.style[primaryDirection] = Math.max(margin, targetDistance[primaryDirection] + offset + margin) + 'px';
	      var secondaryOffset = Math.max(margin, margin + targetDistance[secondary] - (contentSize[sizeName] - targetRect[sizeName]) / 2);
	      this._popover.style[secondary] = secondaryOffset + 'px';
	
	      // Setting .popover__arrow position.
	      this._arrow.style[secondary] = Math.max(radius, targetCenterDistanceFrom[secondary] - secondaryOffset) + 'px';
	    }
	  }, {
	    key: '_calculateDirections',
	    value: function _calculateDirections(distance) {
	      var options = (this.getAttribute('direction') || 'up down left right').split(/\s+/).map(function (e) {
	        return positions[e];
	      });
	      var primary = options.sort(function (a, b) {
	        return distance[a] - distance[b];
	      })[0];
	      var vertical = 'top' == primary || 'bottom' == primary;
	      var secondary = void 0;
	
	      if (vertical) {
	        secondary = distance.left < distance.right ? 'left' : 'right';
	      } else {
	        secondary = distance.top < distance.bottom ? 'top' : 'bottom';
	      }
	
	      return { vertical: vertical, primary: primary, secondary: secondary };
	    }
	  }, {
	    key: '_clearStyles',
	    value: function _clearStyles() {
	      var _this3 = this;
	
	      ['top', 'bottom', 'left', 'right'].forEach(function (e) {
	        _this3._arrow.style[e] = _this3._content.style[e] = _this3._popover.style[e] = '';
	        ModifierUtil.removeModifier(_this3, e);
	      });
	    }
	  }, {
	    key: '_onChange',
	    value: function _onChange() {
	      var _this4 = this;
	
	      setImmediate(function () {
	        if (_this4._currentTarget) {
	          _this4._positionPopover(_this4._currentTarget);
	        }
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      if (this._popover && this._mask) {
	        return;
	      }
	
	      var hasDefaultContainer = this._popover && this._content;
	
	      if (hasDefaultContainer) {
	
	        if (!this._mask) {
	          var mask = document.createElement('div');
	          mask.classList.add('popover-mask');
	          this.insertBefore(mask, this.firstChild);
	        }
	
	        if (!this._arrow) {
	          var arrow = document.createElement('div');
	          arrow.classList.add('popover__arrow');
	          this._popover.appendChild(arrow);
	        }
	      } else {
	
	        var template = templateSource.cloneNode(true);
	        var content = template.querySelector('.popover__content');
	
	        while (this.childNodes[0]) {
	          content.appendChild(this.childNodes[0]);
	        }
	
	        this.appendChild(template);
	      }
	
	      // FIXME!
	      if (this.hasAttribute('style')) {
	        this._popover.setAttribute('style', this.getAttribute('style'));
	        this.removeAttribute('style');
	      }
	
	      // FIXME!
	      if (this.hasAttribute('mask-color')) {
	        this._mask.style.backgroundColor = this.getAttribute('mask-color');
	      }
	
	      ModifierUtil.initModifier(this, this._scheme);
	    }
	
	    /**
	     * @method show
	     * @signature show(target, [options])
	     * @param {String|Event|HTMLElement} target
	     *   [en]Target element. Can be either a CSS selector, an event object or a DOM element. It can be also provided as 'options.target' instead. [/en]
	     *   [ja]ポップオーバーのターゲットとなる要素を指定します。CSSセレクタかeventオブジェクトかDOM要素のいずれかを渡せます。[/ja]
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name.  Use one of `"fade-ios"`, `"fade-md"`, `"none"` and `"default"`.[/en]
	     *   [ja]アニメーション名を指定します。"fade-ios", "fade-md", "none", "default"のいずれかを指定できます。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]
	     * @param {Function} [options.callback]
	     *   [en]This function is called after the popover has been revealed.[/en]
	     *   [ja]ポップオーバーが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]
	     * @description
	     *   [en]Open the popover and point it at a target. The target can be either an event, a CSS selector or a DOM element..[/en]
	     *   [ja]対象とする要素にポップオーバーを表示します。target引数には、$eventオブジェクトやDOMエレメントやCSSセレクタを渡すことが出来ます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the displayed element[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'show',
	    value: function show(target) {
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      // Copy options and include options.target
	      if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && !(target instanceof Event) && !(target instanceof HTMLElement)) {
	        options = _extends({}, target);
	      } else {
	        options = _extends({}, options, { target: target });
	      }
	
	      if (typeof options.target === 'string') {
	        options.target = document.querySelector(options.target);
	      } else if (options.target instanceof Event) {
	        options.target = options.target.target;
	      }
	
	      if (typeof options.target === 'undefined') {
	        throw new Error('A target or options.target argument must be defined for the popover.');
	      }
	
	      if (!(options.target instanceof HTMLElement)) {
	        throw new Error('Invalid target for popover.');
	      }
	
	      return get$1(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'show', this).call(this, options);
	    }
	
	    /**
	     * @method hide
	     * @signature hide([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name.  Use one of `"fade-ios"`, `"fade-md"`, `"none"` and `"default"`.[/en]
	     *   [ja]アニメーション名を指定します。"fade-ios", "fade-md", "none", "default"のいずれかを指定できます。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]
	     * @param {Function} [options.callback]
	     *   [en]This functions is called after the popover has been hidden.[/en]
	     *   [ja]ポップオーバーが隠れた後に呼び出される関数オブジェクトを指定します。[/ja]
	     * @description
	     *   [en]Close the popover.[/en]
	     *   [ja]ポップオーバーを閉じます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the hidden element[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @property visible
	     * @readonly
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is visible or not.[/en]
	     *   [ja]要素が見える場合に`true`。[/ja]
	     */
	
	    /**
	     * @property cancelable
	     * @type {Boolean}
	     * @description
	     *   [en]
	     *     A boolean value that specifies whether the popover is cancelable or not.
	     *
	     *     When the popover is cancelable it can be closed by tapping the background or by pressing the back button on Android devices.
	     *   [/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @property onDeviceBackButton
	     * @type {Object}
	     * @description
	     *   [en]Back-button handler.[/en]
	     *   [ja]バックボタンハンドラ。[/ja]
	     */
	
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this5 = this;
	
	      get$1(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'connectedCallback', this).call(this);
	
	      window.addEventListener('resize', this._boundOnChange, false);
	      this._margin = this._margin || parseInt(window.getComputedStyle(this).getPropertyValue('top'));
	      this._margin = this._margin || 6; // Fix for iframes
	
	      contentReady(this, function () {
	        _this5._radius = parseInt(window.getComputedStyle(_this5._content).getPropertyValue('border-top-left-radius'));
	      });
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      get$1(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'disconnectedCallback', this).call(this);
	      window.removeEventListener('resize', this._boundOnChange, false);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'direction') {
	        this._boundOnChange();
	      } else {
	        get$1(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);
	      }
	    }
	
	    /**
	     * @param {String} name
	     * @param {PopoverAnimator} Animator
	     */
	
	  }, {
	    key: '_scheme',
	    get: function get() {
	      return scheme$15;
	    }
	  }, {
	    key: '_mask',
	    get: function get() {
	      return util.findChild(this, '.popover-mask');
	    }
	  }, {
	    key: '_popover',
	    get: function get() {
	      return util.findChild(this, '.popover');
	    }
	  }, {
	    key: '_content',
	    get: function get() {
	      return util.findChild(this._popover, '.popover__content');
	    }
	  }, {
	    key: '_arrow',
	    get: function get() {
	      return util.findChild(this._popover, '.popover__arrow');
	    }
	  }], [{
	    key: 'registerAnimator',
	    value: function registerAnimator(name, Animator) {
	      if (!(Animator.prototype instanceof PopoverAnimator)) {
	        throw new Error('"Animator" param must inherit PopoverAnimator');
	      }
	      _animatorDict$4[name] = Animator;
	    }
	  }, {
	    key: 'observedAttributes',
	    get: function get() {
	      return [].concat(toConsumableArray(get$1(PopoverElement.__proto__ || Object.getPrototypeOf(PopoverElement), 'observedAttributes', this)), ['direction']);
	    }
	  }, {
	    key: 'animators',
	    get: function get() {
	      return _animatorDict$4;
	    }
	  }, {
	    key: 'PopoverAnimator',
	    get: function get() {
	      return PopoverAnimator;
	    }
	  }]);
	  return PopoverElement;
	}(BaseDialogElement);
	
	customElements.define('ons-popover', PopoverElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$16 = {
	  '.progress-bar': 'progress-bar--*',
	  '.progress-bar__primary': 'progress-bar--*__primary',
	  '.progress-bar__secondary': 'progress-bar--*__secondary'
	};
	
	var template = util.createElement('\n  <div class="progress-bar">\n    <div class="progress-bar__secondary"></div>\n    <div class="progress-bar__primary"></div>\n  </div>\n');
	
	/**
	 * @element ons-progress-bar
	 * @category visual
	 * @description
	 *   [en]
	 *     The component is used to display a linear progress bar. It can either display a progress bar that shows the user how much of a task has been completed. In the case where the percentage is not known it can be used to display an animated progress bar so the user can see that an operation is in progress.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen zvQbGj
	 * @tutorial vanilla/Reference/progress
	 * @seealso ons-progress-circular
	 *   [en]The `<ons-progress-circular>` component displays a circular progress indicator.[/en]
	 *   [ja][/ja]
	 * @example
	 * <ons-progress-bar
	 *  value="55"
	 *  secondary-value="87">
	 * </ons-progress-bar>
	 *
	 * <ons-progress-bar
	 *  indeterminate>
	 * </ons-progress-bar>
	 */
	
	var ProgressBarElement = function (_BaseElement) {
	  inherits(ProgressBarElement, _BaseElement);
	
	  function ProgressBarElement() {
	    classCallCheck(this, ProgressBarElement);
	    return possibleConstructorReturn(this, (ProgressBarElement.__proto__ || Object.getPrototypeOf(ProgressBarElement)).apply(this, arguments));
	  }
	
	  createClass(ProgressBarElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]Change the appearance of the progress indicator.[/en]
	     *   [ja]プログレスインジケータの見た目を変更します。[/ja]
	     */
	
	    /**
	     * @attribute value
	     * @type {Number}
	     * @description
	     *   [en]Current progress. Should be a value between 0 and 100.[/en]
	     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]
	     */
	
	    /**
	     * @attribute secondary-value
	     * @type {Number}
	     * @description
	     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]
	     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]
	     */
	
	    /**
	     * @attribute indeterminate
	     * @description
	     *   [en]If this attribute is set, an infinite looping animation will be shown.[/en]
	     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        return _this2._compile();
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      if (!this._isCompiled()) {
	        this._template = template.cloneNode(true);
	      } else {
	        this._template = util.findChild(this, '.progress-bar');
	      }
	
	      this._primary = util.findChild(this._template, '.progress-bar__primary');
	      this._secondary = util.findChild(this._template, '.progress-bar__secondary');
	
	      this._updateDeterminate();
	      this._updateValue();
	
	      this.appendChild(this._template);
	
	      ModifierUtil.initModifier(this, scheme$16);
	    }
	  }, {
	    key: '_isCompiled',
	    value: function _isCompiled() {
	      if (!util.findChild(this, '.progress-bar')) {
	        return false;
	      }
	
	      var barElement = util.findChild(this, '.progress-bar');
	
	      if (!util.findChild(barElement, '.progress-bar__secondary')) {
	        return false;
	      }
	
	      if (!util.findChild(barElement, '.progress-bar__primary')) {
	        return false;
	      }
	
	      return true;
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'modifier') {
	        return ModifierUtil.onModifierChanged(last, current, this, scheme$16);
	      } else if (name === 'value' || name === 'secondary-value') {
	        this._updateValue();
	      } else if (name === 'indeterminate') {
	        this._updateDeterminate();
	      }
	    }
	  }, {
	    key: '_updateDeterminate',
	    value: function _updateDeterminate() {
	      var _this3 = this;
	
	      if (this.hasAttribute('indeterminate')) {
	        contentReady(this, function () {
	          _this3._template.classList.add('progress-bar--indeterminate');
	          _this3._template.classList.remove('progress-bar--determinate');
	        });
	      } else {
	        contentReady(this, function () {
	          _this3._template.classList.add('progress-bar--determinate');
	          _this3._template.classList.remove('progress-bar--indeterminate');
	        });
	      }
	    }
	  }, {
	    key: '_updateValue',
	    value: function _updateValue() {
	      var _this4 = this;
	
	      contentReady(this, function () {
	        _this4._primary.style.width = _this4.hasAttribute('value') ? _this4.getAttribute('value') + '%' : '0%';
	        _this4._secondary.style.width = _this4.hasAttribute('secondary-value') ? _this4.getAttribute('secondary-value') + '%' : '0%';
	      });
	    }
	
	    /**
	     * @property value
	     * @type {Number}
	     * @description
	     *   [en]Current progress. Should be a value between 0 and 100.[/en]
	     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]
	     */
	
	  }, {
	    key: 'value',
	    set: function set(value) {
	      if (typeof value !== 'number' || value < 0 || value > 100) {
	        throw new Error('Invalid value');
	      }
	
	      this.setAttribute('value', Math.floor(value));
	    },
	    get: function get() {
	      return parseInt(this.getAttribute('value') || '0');
	    }
	
	    /**
	     * @property secondaryValue
	     * @type {Number}
	     * @description
	     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]
	     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]
	     */
	
	  }, {
	    key: 'secondaryValue',
	    set: function set(value) {
	      if (typeof value !== 'number' || value < 0 || value > 100) {
	        throw new Error('Invalid value');
	      }
	
	      this.setAttribute('secondary-value', Math.floor(value));
	    },
	    get: function get() {
	      return parseInt(this.getAttribute('secondary-value') || '0');
	    }
	
	    /**
	     * @property indeterminate
	     * @type {Boolean}
	     * @description
	     *   [en]If this property is `true`, an infinite looping animation will be shown.[/en]
	     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]
	     */
	
	  }, {
	    key: 'indeterminate',
	    set: function set(value) {
	      if (value) {
	        this.setAttribute('indeterminate', '');
	      } else {
	        this.removeAttribute('indeterminate');
	      }
	    },
	    get: function get() {
	      return this.hasAttribute('indeterminate');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'value', 'secondary-value', 'indeterminate'];
	    }
	  }]);
	  return ProgressBarElement;
	}(BaseElement);
	
	customElements.define('ons-progress-bar', ProgressBarElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$17 = {
	  '.progress-circular': 'progress-circular--*',
	  '.progress-circular__primary': 'progress-circular--*__primary',
	  '.progress-circular__secondary': 'progress-circular--*__secondary'
	};
	
	var template$1 = util.createElement('\n  <svg class="progress-circular">\n    <circle class="progress-circular__secondary" />\n    <circle class="progress-circular__primary" />\n  </svg>\n');
	
	/**
	 * @element ons-progress-circular
	 * @category visual
	 * @description
	 *   [en]
	 *     This component displays a circular progress indicator. It can either be used to show how much of a task has been completed or to show a looping animation to indicate that an operation is currently running.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen EVzMjR
	 * @tutorial vanilla/Reference/progress
	 * @seealso ons-progress-bar
	 *   [en]The `<ons-progress-bar>` component displays a bar progress indicator.[/en]
	 *   [ja][/ja]
	 * @example
	 * <ons-progress-circular
	 *  value="55"
	 *  secondary-value="87">
	 * </ons-progress-circular>
	 *
	 * <ons-progress-circular
	 *  indeterminate>
	 * </ons-progress-circular>
	 */
	
	var ProgressCircularElement = function (_BaseElement) {
	  inherits(ProgressCircularElement, _BaseElement);
	
	  function ProgressCircularElement() {
	    classCallCheck(this, ProgressCircularElement);
	    return possibleConstructorReturn(this, (ProgressCircularElement.__proto__ || Object.getPrototypeOf(ProgressCircularElement)).apply(this, arguments));
	  }
	
	  createClass(ProgressCircularElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]Change the appearance of the progress indicator.[/en]
	     *   [ja]プログレスインジケータの見た目を変更します。[/ja]
	     */
	
	    /**
	     * @attribute value
	     * @type {Number}
	     * @description
	     *   [en]Current progress. Should be a value between 0 and 100.[/en]
	     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]
	     */
	
	    /**
	     * @attribute secondary-value
	     * @type {Number}
	     * @description
	     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]
	     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]
	     */
	
	    /**
	     * @attribute indeterminate
	     * @description
	     *   [en]If this attribute is set, an infinite looping animation will be shown.[/en]
	     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        return _this2._compile();
	      });
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'modifier') {
	        return ModifierUtil.onModifierChanged(last, current, this, scheme$17);
	      } else if (name === 'value' || name === 'secondary-value') {
	        this._updateValue();
	      } else if (name === 'indeterminate') {
	        this._updateDeterminate();
	      }
	    }
	  }, {
	    key: '_updateDeterminate',
	    value: function _updateDeterminate() {
	      var _this3 = this;
	
	      if (this.hasAttribute('indeterminate')) {
	        contentReady(this, function () {
	          ModifierUtil.addModifier(_this3, 'indeterminate');
	        });
	      } else {
	        contentReady(this, function () {
	          ModifierUtil.removeModifier(_this3, 'indeterminate');
	        });
	      }
	    }
	  }, {
	    key: '_updateValue',
	    value: function _updateValue() {
	      var _this4 = this;
	
	      if (this.hasAttribute('value')) {
	        contentReady(this, function () {
	          var per = Math.ceil(_this4.getAttribute('value') * 251.32 * 0.01);
	          _this4._primary.style['stroke-dasharray'] = per + '%, 251.32%';
	        });
	      }
	      if (this.hasAttribute('secondary-value')) {
	        contentReady(this, function () {
	          var per = Math.ceil(_this4.getAttribute('secondary-value') * 251.32 * 0.01);
	          _this4._secondary.style.display = null;
	          _this4._secondary.style['stroke-dasharray'] = per + '%, 251.32%';
	        });
	      } else {
	        contentReady(this, function () {
	          _this4._secondary.style.display = 'none';
	        });
	      }
	    }
	
	    /**
	     * @property value
	     * @type {Number}
	     * @description
	     *   [en]Current progress. Should be a value between 0 and 100.[/en]
	     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]
	     */
	
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      if (this._isCompiled()) {
	        this._template = util.findChild(this, '.progress-circular');
	      } else {
	        this._template = template$1.cloneNode(true);
	      }
	
	      this._primary = util.findChild(this._template, '.progress-circular__primary');
	      this._secondary = util.findChild(this._template, '.progress-circular__secondary');
	
	      this._updateDeterminate();
	      this._updateValue();
	
	      this.appendChild(this._template);
	
	      ModifierUtil.initModifier(this, scheme$17);
	    }
	  }, {
	    key: '_isCompiled',
	    value: function _isCompiled() {
	      if (!util.findChild(this, '.progress-circular')) {
	        return false;
	      }
	
	      var svg = util.findChild(this, '.progress-circular');
	
	      if (!util.findChild(svg, '.progress-circular__secondary')) {
	        return false;
	      }
	
	      if (!util.findChild(svg, '.progress-circular__primary')) {
	        return false;
	      }
	
	      return true;
	    }
	  }, {
	    key: 'value',
	    set: function set(value) {
	      if (typeof value !== 'number' || value < 0 || value > 100) {
	        throw new Error('Invalid value');
	      }
	
	      this.setAttribute('value', Math.floor(value));
	    },
	    get: function get() {
	      return parseInt(this.getAttribute('value') || '0');
	    }
	
	    /**
	     * @property secondaryValue
	     * @type {Number}
	     * @description
	     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]
	     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]
	     */
	
	  }, {
	    key: 'secondaryValue',
	    set: function set(value) {
	      if (typeof value !== 'number' || value < 0 || value > 100) {
	        throw new Error('Invalid value');
	      }
	
	      this.setAttribute('secondary-value', Math.floor(value));
	    },
	    get: function get() {
	      return parseInt(this.getAttribute('secondary-value') || '0');
	    }
	
	    /**
	     * @property indeterminate
	     * @type {Boolean}
	     * @description
	     *   [en]If this property is `true`, an infinite looping animation will be shown.[/en]
	     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]
	     */
	
	  }, {
	    key: 'indeterminate',
	    set: function set(value) {
	      if (value) {
	        this.setAttribute('indeterminate', '');
	      } else {
	        this.removeAttribute('indeterminate');
	      }
	    },
	    get: function get() {
	      return this.hasAttribute('indeterminate');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'value', 'secondary-value', 'indeterminate'];
	    }
	  }]);
	  return ProgressCircularElement;
	}(BaseElement);
	
	customElements.define('ons-progress-circular', ProgressCircularElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var STATE_INITIAL = 'initial';
	var STATE_PREACTION = 'preaction';
	var STATE_ACTION = 'action';
	
	var removeTransform = function removeTransform(el) {
	  el.style.transform = '';
	  el.style.WebkitTransform = '';
	  el.style.transition = '';
	  el.style.WebkitTransition = '';
	};
	
	/**
	 * @element ons-pull-hook
	 * @category control
	 * @description
	 *   [en]
	 *     Component that adds **Pull to refresh** functionality to an `<ons-page>` element.
	 *
	 *     It can be used to perform a task when the user pulls down at the top of the page. A common usage is to refresh the data displayed in a page.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen WbJogM
	 * @tutorial vanilla/Reference/pull-hook
	 * @example
	 * <ons-page>
	 *   <ons-pull-hook>
	 *     Release to refresh
	 *   </ons-pull-hook>
	 * </ons-page>
	 *
	 * <script>
	 *   document.querySelector('ons-pull-hook').onAction = function(done) {
	 *     setTimeout(done, 1000);
	 *   };
	 * </script>
	 */
	
	var PullHookElement = function (_BaseElement) {
	  inherits(PullHookElement, _BaseElement);
	
	  function PullHookElement() {
	    classCallCheck(this, PullHookElement);
	    return possibleConstructorReturn(this, (PullHookElement.__proto__ || Object.getPrototypeOf(PullHookElement)).apply(this, arguments));
	  }
	
	  createClass(PullHookElement, [{
	    key: 'init',
	
	
	    /**
	     * @event changestate
	     * @description
	     *   [en]Fired when the state is changed. The state can be either "initial", "preaction" or "action".[/en]
	     *   [ja]コンポーネントの状態が変わった場合に発火します。状態は、"initial", "preaction", "action"のいずれかです。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクト。[/ja]
	     * @param {Object} event.pullHook
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {String} event.state
	     *   [en]Current state.[/en]
	     *   [ja]現在の状態名を参照できます。[/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *   [en]If this attribute is set the "pull-to-refresh" functionality is disabled.[/en]
	     *   [ja]この属性がある時、disabled状態になりアクションが実行されなくなります[/ja]
	     */
	
	    /**
	     * @attribute height
	     * @type {String}
	     * @description
	     *   [en]Specify the height of the component. When pulled down further than this value it will switch to the "preaction" state. The default value is "64px".[/en]
	     *   [ja]コンポーネントの高さを指定します。この高さ以上にpull downすると"preaction"状態に移行します。デフォルトの値は"64px"です。[/ja]
	     */
	
	    /**
	     * @attribute threshold-height
	     * @type {String}
	     * @description
	     *   [en]Specify the threshold height. The component automatically switches to the "action" state when pulled further than this value. The default value is "96px". A negative value or a value less than the height will disable this property.[/en]
	     *   [ja]閾値となる高さを指定します。この値で指定した高さよりもpull downすると、このコンポーネントは自動的に"action"状態に移行します。[/ja]
	     */
	
	    /**
	     * @attribute fixed-content
	     * @description
	     *   [en]If this attribute is set the content of the page will not move when pulling.[/en]
	     *   [ja]この属性がある時、プルフックが引き出されている時にもコンテンツは動きません。[/ja]
	     */
	
	    value: function init() {
	      this._boundOnDrag = this._onDrag.bind(this);
	      this._boundOnDragStart = this._onDragStart.bind(this);
	      this._boundOnDragEnd = this._onDragEnd.bind(this);
	      this._boundOnScroll = this._onScroll.bind(this);
	
	      this._setState(STATE_INITIAL, true);
	      this._hide(); // Fix for transparent toolbar transitions
	    }
	  }, {
	    key: '_setStyle',
	    value: function _setStyle() {
	      var height = this.height;
	
	      this.style.height = height + 'px';
	      this.style.lineHeight = height + 'px';
	      this.style.marginTop = '-1px';
	      this._pageElement.style.marginTop = '-' + height + 'px';
	    }
	  }, {
	    key: '_onScroll',
	    value: function _onScroll(event) {
	      var element = this._pageElement;
	
	      if (element.scrollTop < 0) {
	        element.scrollTop = 0;
	      }
	    }
	  }, {
	    key: '_generateTranslationTransform',
	    value: function _generateTranslationTransform(scroll) {
	      return 'translate3d(0px, ' + scroll + 'px, 0px)';
	    }
	  }, {
	    key: '_onDrag',
	    value: function _onDrag(event) {
	      var _this2 = this;
	
	      if (this.disabled) {
	        return;
	      }
	
	      // Hack to make it work on Android 4.4 WebView. Scrolls manually near the top of the page so
	      // there will be no inertial scroll when scrolling down. Allowing default scrolling will
	      // kill all 'touchmove' events.
	      if (platform.isAndroid()) {
	        var element = this._pageElement;
	        element.scrollTop = this._startScroll - event.gesture.deltaY;
	        if (element.scrollTop < window.innerHeight && event.gesture.direction !== 'up') {
	          event.gesture.preventDefault();
	        }
	      }
	
	      if (this._currentTranslation === 0 && this._getCurrentScroll() === 0) {
	        this._transitionDragLength = event.gesture.deltaY;
	
	        var direction = event.gesture.interimDirection;
	        if (direction === 'down') {
	          this._transitionDragLength -= 1;
	        } else {
	          this._transitionDragLength += 1;
	        }
	      }
	
	      var scroll = Math.max(event.gesture.deltaY - this._startScroll, 0);
	
	      if (this._thresholdHeightEnabled() && scroll >= this.thresholdHeight) {
	        event.gesture.stopDetect();
	
	        setImmediate(function () {
	          return _this2._finish();
	        });
	      } else if (scroll >= this.height) {
	        this._setState(STATE_PREACTION);
	      } else {
	        this._setState(STATE_INITIAL);
	      }
	
	      // By stopping propagation only of `dragup` and `dragdown`,
	      // allowing ancestor elements to detect `dragleft` and `dragright`.
	      // If we comment out the following `if` block, `ons-splitter` with `ons-pull-hook` will be broken.
	      if (event.gesture.direction === 'up' || event.gesture.direction === 'down') {
	        event.stopPropagation();
	      }
	      this._translateTo(scroll);
	    }
	  }, {
	    key: '_onDragStart',
	    value: function _onDragStart(event) {
	      if (this.disabled) {
	        return;
	      }
	
	      this._startScroll = this._getCurrentScroll();
	    }
	  }, {
	    key: '_onDragEnd',
	    value: function _onDragEnd(event) {
	      if (this.disabled) {
	        return;
	      }
	
	      if (this._currentTranslation > 0) {
	        var scroll = this._currentTranslation;
	
	        if (scroll > this.height) {
	          this._finish();
	        } else {
	          this._translateTo(0, { animate: true });
	        }
	      }
	    }
	
	    /**
	     * @property onAction
	     * @type {Function}
	     * @description
	     *   [en]This will be called in the `action` state if it exists. The function will be given a `done` callback as it's first argument.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: '_finish',
	    value: function _finish() {
	      var _this3 = this;
	
	      this._setState(STATE_ACTION);
	      this._translateTo(this.height, { animate: true });
	      var action = this.onAction || function (done) {
	        return done();
	      };
	      action(function () {
	        _this3._translateTo(0, { animate: true });
	        _this3._setState(STATE_INITIAL);
	      });
	    }
	
	    /**
	     * @property height
	     * @type {Number}
	     * @description
	     *   [en]The height of the pull hook in pixels. The default value is `64px`.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: '_thresholdHeightEnabled',
	    value: function _thresholdHeightEnabled() {
	      var th = this.thresholdHeight;
	      return th > 0 && th >= this.height;
	    }
	  }, {
	    key: '_setState',
	    value: function _setState(state, noEvent) {
	      var lastState = this._getState();
	
	      this.setAttribute('state', state);
	
	      if (!noEvent && lastState !== this._getState()) {
	        util.triggerElementEvent(this, 'changestate', {
	          pullHook: this,
	          state: state,
	          lastState: lastState
	        });
	      }
	    }
	  }, {
	    key: '_getState',
	    value: function _getState() {
	      return this.getAttribute('state');
	    }
	
	    /**
	     * @property state
	     * @readonly
	     * @type {String}
	     * @description
	     *   [en]Current state of the element.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: '_getCurrentScroll',
	    value: function _getCurrentScroll() {
	      return this._pageElement.scrollTop;
	    }
	
	    /**
	     * @property pullDistance
	     * @readonly
	     * @type {Number}
	     * @description
	     *   [en]The current number of pixels the pull hook has moved.[/en]
	     *   [ja]現在のプルフックが引き出された距離をピクセル数。[/ja]
	     */
	
	  }, {
	    key: '_isContentFixed',
	    value: function _isContentFixed() {
	      return this.hasAttribute('fixed-content');
	    }
	  }, {
	    key: '_getScrollableElement',
	    value: function _getScrollableElement() {
	      if (this._isContentFixed()) {
	        return this;
	      } else {
	        return this._pageElement;
	      }
	    }
	  }, {
	    key: '_show',
	    value: function _show() {
	      this.style.visibility = '';
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      this.style.visibility = 'hidden';
	    }
	
	    /**
	     * @param {Number} scroll
	     * @param {Object} options
	     * @param {Function} [options.callback]
	     */
	
	  }, {
	    key: '_translateTo',
	    value: function _translateTo(scroll) {
	      var _this4 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      if (this._currentTranslation == 0 && scroll == 0) {
	        return;
	      }
	
	      var done = function done() {
	        if (scroll === 0) {
	          var el = _this4._getScrollableElement();
	          removeTransform(el);
	        }
	
	        if (options.callback) {
	          options.callback();
	        }
	      };
	
	      this._currentTranslation = scroll;
	
	      if (options.animate) {
	        Animit(this._getScrollableElement()).queue({
	          transform: this._generateTranslationTransform(scroll)
	        }, {
	          duration: 0.3,
	          timing: 'cubic-bezier(.1, .7, .1, 1)'
	        }).play(done);
	      } else {
	        Animit(this._getScrollableElement()).queue({
	          transform: this._generateTranslationTransform(scroll)
	        }).play(done);
	      }
	    }
	  }, {
	    key: '_disableDragLock',
	    value: function _disableDragLock() {
	      // e2e tests need it
	      this._dragLockDisabled = true;
	      this._destroyEventListeners();
	      this._createEventListeners();
	    }
	  }, {
	    key: '_createEventListeners',
	    value: function _createEventListeners() {
	      this._gestureDetector = new GestureDetector(this._pageElement, {
	        dragMinDistance: 1,
	        dragDistanceCorrection: false,
	        dragLockToAxis: !this._dragLockDisabled
	      });
	
	      // Bind listeners
	      //
	      // Note:
	      // If we swipe up/down a screen too fast,
	      // the gesture detector occasionally dispatches a `dragleft` or `dragright`,
	      // so we need to have the pull hook listen to `dragleft` and `dragright` as well as `dragup` and `dragdown`.
	      this._gestureDetector.on('dragup dragdown dragleft dragright', this._boundOnDrag);
	      this._gestureDetector.on('dragstart', this._boundOnDragStart);
	      this._gestureDetector.on('dragend', this._boundOnDragEnd);
	
	      this._pageElement.addEventListener('scroll', this._boundOnScroll, false);
	    }
	  }, {
	    key: '_destroyEventListeners',
	    value: function _destroyEventListeners() {
	      if (this._gestureDetector) {
	        this._gestureDetector.off('dragup dragdown dragleft dragright', this._boundOnDrag);
	        this._gestureDetector.off('dragstart', this._boundOnDragStart);
	        this._gestureDetector.off('dragend', this._boundOnDragEnd);
	
	        this._gestureDetector.dispose();
	        this._gestureDetector = null;
	      }
	
	      this._pageElement.removeEventListener('scroll', this._boundOnScroll, false);
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this._currentTranslation = 0;
	      this._pageElement = this.parentNode;
	
	      this._createEventListeners();
	      this._setStyle();
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this._pageElement.style.marginTop = '';
	
	      this._destroyEventListeners();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'height' && this._pageElement) {
	        this._setStyle();
	      }
	    }
	  }, {
	    key: 'onAction',
	    get: function get() {
	      return this._onAction;
	    },
	    set: function set(value) {
	      if (!(value instanceof Function) && value !== null) {
	        throw new Error('onAction must be a function or null');
	      }
	      this._onAction = value;
	    }
	  }, {
	    key: 'height',
	    set: function set(value) {
	      if (!util.isInteger(value)) {
	        throw new Error('The height must be an integer');
	      }
	
	      this.setAttribute('height', value + 'px');
	    },
	    get: function get() {
	      return parseInt(this.getAttribute('height') || '64', 10);
	    }
	
	    /**
	     * @property thresholdHeight
	     * @type {Number}
	     * @description
	     *   [en]The thresholdHeight of the pull hook in pixels. The default value is `96px`.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'thresholdHeight',
	    set: function set(value) {
	      if (!util.isInteger(value)) {
	        throw new Error('The threshold height must be an integer');
	      }
	
	      this.setAttribute('threshold-height', value + 'px');
	    },
	    get: function get() {
	      return parseInt(this.getAttribute('threshold-height') || '96', 10);
	    }
	  }, {
	    key: 'state',
	    get: function get() {
	      return this._getState();
	    }
	  }, {
	    key: 'pullDistance',
	    get: function get() {
	      return this._currentTranslation;
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['height'];
	    }
	  }, {
	    key: 'STATE_INITIAL',
	    get: function get() {
	      return STATE_INITIAL;
	    }
	  }, {
	    key: 'STATE_PREACTION',
	    get: function get() {
	      return STATE_PREACTION;
	    }
	  }, {
	    key: 'STATE_ACTION',
	    get: function get() {
	      return STATE_ACTION;
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['changestate'];
	    }
	  }]);
	  return PullHookElement;
	}(BaseElement);
	
	customElements.define('ons-pull-hook', PullHookElement);
	
	/*
	Copyright 2013-2016 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @class AnimatorCSS - implementation of Animator class using css transitions
	 */
	
	var AnimatorCSS = function () {
	  createClass(AnimatorCSS, [{
	    key: 'animate',
	
	
	    /**
	     * @method animate
	     * @desc main animation function
	     * @param {Element} element
	     * @param {Object} finalCSS
	     * @param {number} [duration=200] - duration in milliseconds
	     * @return {Object} result
	     * @return {Function} result.then(callback) - sets a callback to be executed after the animation has stopped
	     * @return {Function} result.stop(options) - stops the animation; if options.stopNext is true then it doesn't call the callback
	     * @return {Function} result.finish(ms) - finishes the animation in the specified time in milliseconds
	     * @return {Function} result.speed(ms) - sets the animation speed so that it finishes as if the original duration was the one specified here
	     * @example
	     * ````
	     *  var result = animator.animate(el, {opacity: 0.5}, 1000);
	     *
	     *  el.addEventListener('click', function(e){
	     *    result.speed(200).then(function(){
	     *      console.log('done');
	     *    });
	     *  }, 300);
	     * ````
	     */
	    value: function animate(el, final) {
	      var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;
	
	      var start = new Date().getTime(),
	          initial = {},
	          stopped = false,
	          next = false,
	          timeout = false,
	          properties = Object.keys(final);
	
	      var updateStyles = function updateStyles() {
	        var s = window.getComputedStyle(el);
	        properties.forEach(s.getPropertyValue.bind(s));
	        s = el.offsetHeight;
	      };
	
	      var result = {
	        stop: function stop() {
	          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	          timeout && clearTimeout(timeout);
	          var k = Math.min(1, (new Date().getTime() - start) / duration);
	          properties.forEach(function (i) {
	            el.style[i] = (1 - k) * initial[i] + k * final[i] + (i == 'opacity' ? '' : 'px');
	          });
	          el.style.transitionDuration = '0s';
	
	          if (options.stopNext) {
	            next = false;
	          } else if (!stopped) {
	            stopped = true;
	            next && next();
	          }
	          return result;
	        },
	        then: function then(cb) {
	          next = cb;
	          if (stopped) {
	            next && next();
	          }
	          return result;
	        },
	        speed: function speed(newDuration) {
	          if (internal$1.config.animationsDisabled) {
	            newDuration = 0;
	          }
	          if (!stopped) {
	            timeout && clearTimeout(timeout);
	
	            var passed = new Date().getTime() - start;
	            var k = passed / duration;
	            var remaining = newDuration * (1 - k);
	
	            properties.forEach(function (i) {
	              el.style[i] = (1 - k) * initial[i] + k * final[i] + (i == 'opacity' ? '' : 'px');
	            });
	
	            updateStyles();
	
	            start = el.speedUpTime;
	            duration = remaining;
	
	            el.style.transitionDuration = duration / 1000 + 's';
	
	            properties.forEach(function (i) {
	              el.style[i] = final[i] + (i == 'opacity' ? '' : 'px');
	            });
	
	            timeout = setTimeout(result.stop, remaining);
	          }
	          return result;
	        },
	        finish: function finish() {
	          var milliseconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;
	
	          var k = (new Date().getTime() - start) / duration;
	
	          result.speed(milliseconds / (1 - k));
	          return result;
	        }
	      };
	
	      if (el.hasAttribute('disabled') || stopped || internal$1.config.animationsDisabled) {
	        return result;
	      }
	
	      var style = window.getComputedStyle(el);
	      properties.forEach(function (e) {
	        var v = parseFloat(style.getPropertyValue(e));
	        initial[e] = isNaN(v) ? 0 : v;
	      });
	
	      if (!stopped) {
	        el.style.transitionProperty = properties.join(',');
	        el.style.transitionDuration = duration / 1000 + 's';
	
	        properties.forEach(function (e) {
	          el.style[e] = final[e] + (e == 'opacity' ? '' : 'px');
	        });
	      }
	
	      timeout = setTimeout(result.stop, duration);
	      this._onStopAnimations(el, result.stop);
	
	      return result;
	    }
	  }]);
	
	  function AnimatorCSS() {
	    classCallCheck(this, AnimatorCSS);
	
	    this._queue = [];
	    this._index = 0;
	  }
	
	  createClass(AnimatorCSS, [{
	    key: '_onStopAnimations',
	    value: function _onStopAnimations(el, listener) {
	      var queue = this._queue;
	      var i = this._index++;
	      queue[el] = queue[el] || [];
	      queue[el][i] = function (options) {
	        delete queue[el][i];
	        if (queue[el] && queue[el].length == 0) {
	          delete queue[el];
	        }
	        return listener(options);
	      };
	    }
	
	    /**
	    * @method stopAnimations
	    * @desc stops active animations on a specified element
	    * @param {Element|Array} element - element or array of elements
	    * @param {Object} [options={}]
	    * @param {Boolean} [options.stopNext] - the callbacks after the animations won't be called if this option is true
	    */
	
	  }, {
	    key: 'stopAnimations',
	    value: function stopAnimations(el) {
	      var _this = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      if (Array.isArray(el)) {
	        return el.forEach(function (el) {
	          _this.stopAnimations(el, options);
	        });
	      }
	
	      (this._queue[el] || []).forEach(function (e) {
	        e(options || {});
	      });
	    }
	
	    /**
	    * @method stopAll
	    * @desc stops all active animations
	    * @param {Object} [options={}]
	    * @param {Boolean} [options.stopNext] - the callbacks after the animations won't be called if this option is true
	    */
	
	  }, {
	    key: 'stopAll',
	    value: function stopAll() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      this.stopAnimations(Object.keys(this._queue), options);
	    }
	
	    /**
	    * @method fade
	    * @desc fades the element (short version for animate(el, {opacity: 0}))
	    * @param {Element} element
	    * @param {number} [duration=200]
	    */
	
	  }, {
	    key: 'fade',
	    value: function fade(el) {
	      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;
	
	      return this.animate(el, { opacity: 0 }, duration);
	    }
	  }]);
	  return AnimatorCSS;
	}();
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$11 = 'ripple';
	
	/**
	 * @element ons-ripple
	 * @category visual
	 * @description
	 *   [en]
	 *     Adds a Material Design "ripple" effect to an element. The ripple effect will spread from the position where the user taps.
	 *
	 *     Some elements such as `<ons-button>` and `<ons-fab>`  support a `ripple` attribute.
	 *   [/en]
	 *   [ja]マテリアルデザインのリップル効果をDOM要素に追加します。[/ja]
	 * @codepen wKQWdZ
	 * @tutorial vanilla/Reference/ripple
	 * @guide cross-platform-styling
	 *  [en]Cross platform styling[/en]
	 *  [ja]Cross platform styling[/ja]
	 * @example
	 * <div class="my-div">
	 *  <ons-ripple></ons-ripple>
	 * </div>
	 *
	 * @example
	 * <ons-button ripple>Click me!</ons-button>
	 */
	
	var RippleElement = function (_BaseElement) {
	  inherits(RippleElement, _BaseElement);
	
	  function RippleElement() {
	    classCallCheck(this, RippleElement);
	    return possibleConstructorReturn(this, (RippleElement.__proto__ || Object.getPrototypeOf(RippleElement)).apply(this, arguments));
	  }
	
	  createClass(RippleElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute color
	     * @type {String}
	     * @description
	     *   [en]Color of the ripple effect.[/en]
	     *   [ja]リップルエフェクトの色を指定します。[/ja]
	     */
	
	    /**
	     * @attribute background
	     * @type {String}
	     * @description
	     *   [en]Color of the background.[/en]
	     *   [ja]背景の色を設定します。[/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *   [en]If this attribute is set, the ripple effect will be disabled.[/en]
	     *   [ja]この属性が設定された場合、リップルエフェクトは無効になります。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        return _this2._compile();
	      });
	
	      this._animator = new AnimatorCSS();
	
	      ['color', 'center', 'start-radius', 'background'].forEach(function (e) {
	        _this2.attributeChangedCallback(e, null, _this2.getAttribute(e));
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      this.classList.add(defaultClassName$11);
	
	      this._wave = this.getElementsByClassName('ripple__wave')[0];
	      this._background = this.getElementsByClassName('ripple__background')[0];
	
	      if (!(this._background && this._wave)) {
	        this._wave = util.create('.ripple__wave');
	        this._background = util.create('.ripple__background');
	
	        this.appendChild(this._wave);
	        this.appendChild(this._background);
	      }
	    }
	  }, {
	    key: '_calculateCoords',
	    value: function _calculateCoords(e) {
	      var x, y, h, w, r;
	      var b = this.getBoundingClientRect();
	      if (this._center) {
	        x = b.width / 2;
	        y = b.height / 2;
	        r = Math.sqrt(x * x + y * y);
	      } else {
	        x = (e.clientX || e.changedTouches[0].clientX) - b.left;
	        y = (e.clientY || e.changedTouches[0].clientY) - b.top;
	        h = Math.max(y, b.height - y);
	        w = Math.max(x, b.width - x);
	        r = Math.sqrt(h * h + w * w);
	      }
	      return { x: x, y: y, r: r };
	    }
	  }, {
	    key: '_rippleAnimation',
	    value: function _rippleAnimation(e) {
	      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;
	
	      var _animator = this._animator,
	          _wave = this._wave,
	          _background = this._background,
	          _minR = this._minR,
	          _calculateCoords2 = this._calculateCoords(e),
	          x = _calculateCoords2.x,
	          y = _calculateCoords2.y,
	          r = _calculateCoords2.r;
	
	      _animator.stopAll({ stopNext: 1 });
	      _animator.animate(_background, { opacity: 1 }, duration);
	
	      util.extend(_wave.style, {
	        opacity: 1,
	        top: y - _minR + 'px',
	        left: x - _minR + 'px',
	        width: 2 * _minR + 'px',
	        height: 2 * _minR + 'px'
	      });
	
	      return _animator.animate(_wave, {
	        top: y - r,
	        left: x - r,
	        height: 2 * r,
	        width: 2 * r
	      }, duration);
	    }
	  }, {
	    key: '_updateParent',
	    value: function _updateParent() {
	      if (!this._parentUpdated && this.parentNode) {
	        var computedStyle = window.getComputedStyle(this.parentNode);
	        if (computedStyle.getPropertyValue('position') === 'static') {
	          this.parentNode.style.position = 'relative';
	        }
	        this._parentUpdated = true;
	      }
	    }
	  }, {
	    key: '_onTap',
	    value: function _onTap(e) {
	      var _this3 = this;
	
	      if (!this.disabled) {
	        this._updateParent();
	        this._rippleAnimation(e.gesture.srcEvent).then(function () {
	          _this3._animator.fade(_this3._wave);
	          _this3._animator.fade(_this3._background);
	        });
	      }
	    }
	  }, {
	    key: '_onHold',
	    value: function _onHold(e) {
	      if (!this.disabled) {
	        this._updateParent();
	        this._holding = this._rippleAnimation(e.gesture.srcEvent, 2000);
	        document.addEventListener('release', this._boundOnRelease);
	      }
	    }
	  }, {
	    key: '_onRelease',
	    value: function _onRelease(e) {
	      var _this4 = this;
	
	      if (this._holding) {
	        this._holding.speed(300).then(function () {
	          _this4._animator.stopAll({ stopNext: true });
	          _this4._animator.fade(_this4._wave);
	          _this4._animator.fade(_this4._background);
	        });
	
	        this._holding = false;
	      }
	
	      document.removeEventListener('release', this._boundOnRelease);
	    }
	  }, {
	    key: '_onDragStart',
	    value: function _onDragStart(e) {
	      if (this._holding) {
	        return this._onRelease(e);
	      }
	      if (['left', 'right'].indexOf(e.gesture.direction) != -1) {
	        this._onTap(e);
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this._parentNode = this.parentNode;
	      this._boundOnTap = this._onTap.bind(this);
	      this._boundOnHold = this._onHold.bind(this);
	      this._boundOnDragStart = this._onDragStart.bind(this);
	      this._boundOnRelease = this._onRelease.bind(this);
	
	      if (internal$1.config.animationsDisabled) {
	        this.disabled = true;
	      } else {
	        this._parentNode.addEventListener('tap', this._boundOnTap);
	        this._parentNode.addEventListener('hold', this._boundOnHold);
	        this._parentNode.addEventListener('dragstart', this._boundOnDragStart);
	      }
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      var pn = this._parentNode || this.parentNode;
	      pn.removeEventListener('tap', this._boundOnTap);
	      pn.removeEventListener('hold', this._boundOnHold);
	      pn.removeEventListener('dragstart', this._boundOnDragStart);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      var _this5 = this;
	
	      switch (name) {
	
	        case 'class':
	          if (!this.classList.contains(defaultClassName$11)) {
	            this.className = defaultClassName$11 + ' ' + current;
	          }
	          break;
	
	        case 'start-radius':
	          this._minR = Math.max(0, parseFloat(current) || 0);
	          break;
	
	        case 'color':
	          if (current) {
	            contentReady(this, function () {
	              _this5._wave.style.background = current;
	              if (!_this5.hasAttribute('background')) {
	                _this5._background.style.background = current;
	              }
	            });
	          }
	          break;
	
	        case 'background':
	          if (current || last) {
	            if (current === 'none') {
	              contentReady(this, function () {
	                _this5._background.setAttribute('disabled', 'disabled');
	                _this5._background.style.background = 'transparent';
	              });
	            } else {
	              contentReady(this, function () {
	                if (_this5._background.hasAttribute('disabled')) {
	                  _this5._background.removeAttribute('disabled');
	                }
	                _this5._background.style.background = current;
	              });
	            }
	          }
	          break;
	
	        case 'center':
	          if (name === 'center') {
	            this._center = current != null && current != 'false';
	          }
	          break;
	
	      }
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['start-radius', 'color', 'background', 'center', 'class'];
	    }
	  }]);
	  return RippleElement;
	}(BaseElement);
	
	customElements.define('ons-ripple', RippleElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * @element ons-row
	 * @category grid
	 * @description
	 *   [en]Represents a row in the grid system. Use with `<ons-col>` to layout components.[/en]
	 *   [ja]グリッドシステムにて行を定義します。ons-colとともに使用し、コンポーネントの配置に使用します。[/ja]
	 * @codepen GgujC {wide}
	 * @guide layouting
	 *   [en]Layouting guide[/en]
	 *   [ja]レイアウト調整[/ja]
	 * @seealso ons-col
	 *   [en]The `<ons-col>` component is used as children of `<ons-row>`.[/en]
	 *   [ja]ons-colコンポーネント[/ja]
	 * @note
	 *   [en]For Android 4.3 and earlier, and iOS6 and earlier, when using mixed alignment with ons-row and ons-col, they may not be displayed correctly. You can use only one vertical-align.[/en]
	 *   [ja]Android 4.3以前、もしくはiOS 6以前のOSの場合、ons-rowとons-colを組み合わせてそれぞれのons-col要素のvertical-align属性の値に別々の値を指定すると、描画が崩れる場合があります。vertical-align属性の値には一つの値だけを指定できます。[/ja]
	 * @example
	 * <ons-row>
	 *   <ons-col width="50px"><ons-icon icon="fa-twitter"></ons-icon></ons-col>
	 *   <ons-col>Text</ons-col>
	 * </ons-row>
	 */
	
	/**
	 * @attribute vertical-align
	 * @type {String}
	 * @description
	 *   [en]Short hand attribute for aligning vertically. Valid values are top, bottom, and center.[/en]
	 *   [ja]縦に整列するために指定します。top、bottom、centerのいずれかを指定できます。[/ja]
	 */
	
	var RowElement = function (_BaseElement) {
	  inherits(RowElement, _BaseElement);
	
	  function RowElement() {
	    classCallCheck(this, RowElement);
	    return possibleConstructorReturn(this, (RowElement.__proto__ || Object.getPrototypeOf(RowElement)).apply(this, arguments));
	  }
	
	  return RowElement;
	}(BaseElement);
	
	customElements.define('ons-row', RowElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$18 = {
	  '': 'select-*',
	  '.select-input': 'select-input--*'
	};
	
	var defaultClassName$12 = 'select';
	
	var INPUT_ATTRIBUTES$1 = ['autofocus', 'disabled', 'form', 'multiple', 'name', 'required', 'size'];
	
	/**
	 * @element ons-select
	 * @category form
	 * @modifier material
	 *  [en]Displays a Material Design select input.[/en]
	 *  [ja][/ja]
	 * @modifier underbar
	 *  [en]Displays a horizontal line underneath a select input.[/en]
	 *  [ja][/ja]
	 * @description
	 *   [en]
	 *     Select component. If you want to place a select with an ID of `my-id` on a page, use `<ons-select select-id="my-id">`.
	 *
	 *     The component will automatically display as a Material Design select on Android.
	 *
	 *     Most attributes that can be used for a normal `<select>` element can also be used on the `<ons-select>` element.
	 *   [/en]
	 *   [ja]セレクトボックスを表示するコンポーネントです。`select` 要素に使用できる属性の多くが `ons-select` 要素でも利用できます。[/ja]
	 * @codepen hLayx
	 * @tutorial vanilla/Reference/select
	 * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]
	 * @guide cross-platform-styling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]
	 * @example
	 * <ons-select>
	 *   <option value="1">1</option>
	 *   <option value="2">2nd</option>
	 *   <option value="3">3rd option</option>
	 * </ons-select>
	 */
	
	var SelectElement = function (_BaseElement) {
	  inherits(SelectElement, _BaseElement);
	
	  function SelectElement() {
	    classCallCheck(this, SelectElement);
	    return possibleConstructorReturn(this, (SelectElement.__proto__ || Object.getPrototypeOf(SelectElement)).apply(this, arguments));
	  }
	
	  createClass(SelectElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute autofocus
	     * @type {Boolean}
	     * @default false
	     * @description
	     *  [en]Element automatically gains focus on page load.[/en]
	     *  [ja]ページロード時にこのセレクトボックスにフォーカスが移るようにします。[/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @type {Boolean}
	     * @default false
	     * @description
	     *   [en]Specify if select input should be disabled.[/en]
	     *   [ja]このセレクトボックスを無効化する場合に指定します。[/ja]
	     */
	
	    /**
	     * @attribute form
	     * @type {String}
	     * @description
	     *   [en]Associate a select element to an existing form on the page, even if not nested.[/en]
	     *   [ja]このセレクトボックスを、指定した `form` 要素に紐付けます。セレクトボックスを `form` 要素の外側に配置する際に使用します。[/ja]
	     */
	
	    /**
	     * @attribute multiple
	     * @type {Boolean}
	     * @default false
	     * @description
	     *  [en]If this attribute is defined, multiple options can be selected at once.[/en]
	     *  [ja]選択肢の複数選択を有効にします。[/ja]
	     */
	
	    /**
	     * @attribute name
	     * @type {String}
	     * @description
	     *   [en]Name the select element, useful for instance if it is part of a form.[/en]
	     *   [ja]このセレクトボックスの名前を指定します。通常 `form` 要素と共に使用します。[/ja]
	     */
	
	    /**
	     * @attribute required
	     * @type {Boolean}
	     * @description
	     *   [en]Make the select input required for submitting the form it is part of.[/en]
	     *   [ja]このセレクトボックスを入力必須にする場合に指定します。通常 `form` 要素と共に使用します。[/ja]
	     */
	
	    /**
	     * @attribute select-id
	     * @type {String}
	     * @description
	     *   [en]ID given to the inner select, useful for dynamic manipulation.[/en]
	     *   [ja]このセレクトボックスが内部に持つ select 要素に与える ID を指定します。セレクトボックスの内容を動的に変更する必要がある場合に使用します。[/ja]
	     */
	
	    /**
	     * @attribute size
	     * @type {Number}
	     * @default 1
	     * @description
	     *   [en]How many options are displayed; if there are more than the size then a scroll appears to navigate them.[/en]
	     *   [ja]一度に表示する選択肢の個数を指定します。選択肢がこの属性で指定した個数よりも多い場合、スクロールが有効になります。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        _this2._compile();
	      });
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      var _this3 = this;
	
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$12)) {
	            this.className = defaultClassName$12 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$18);
	          break;
	      }
	
	      if (INPUT_ATTRIBUTES$1.indexOf(name) >= 0) {
	        contentReady(this, function () {
	          return _this3._updateBoundAttributes();
	        });
	      }
	    }
	  }, {
	    key: '_updateBoundAttributes',
	    value: function _updateBoundAttributes() {
	      var _this4 = this;
	
	      INPUT_ATTRIBUTES$1.forEach(function (attr) {
	        if (_this4.hasAttribute(attr)) {
	          _this4._select.setAttribute(attr, _this4.getAttribute(attr));
	        } else {
	          _this4._select.removeAttribute(attr);
	        }
	      });
	    }
	
	    /**
	     * @property length
	     * @description
	     *   [en]Number of options in the select box.[/en]
	     *   [ja]このセレクトボックスに含まれる選択肢の個数を返します。 `select` 要素[/ja]
	     */
	
	    /**
	     * @property options
	     * @description
	     *   [en]Several options for handling the select DOM object.[/en]
	     *   [ja]このセレクトボックスに含まれる `option` 要素の配列を返します。[/ja]
	     */
	
	    /**
	     * @property selectedIndex
	     * @description
	     *   [en]Index of the currently selected option.[/en]
	     *   [ja]現在選択されている選択肢のインデックスを返します。[/ja]
	     */
	
	    /**
	     * @property value
	     * @description
	     *   [en]Value of the currently selected option.[/en]
	     *   [ja]現在選択されている選択肢の値を返します。[/ja]
	     */
	
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      var _this5 = this;
	
	      autoStyle.prepare(this);
	
	      this.classList.add(defaultClassName$12);
	      var sel = this._select || document.createElement('select');
	      if (!sel.id && this.hasAttribute('select-id')) {
	        sel.id = this.getAttribute('select-id');
	      }
	      sel.classList.add('select-input');
	      if (!this._select) {
	        util.arrayFrom(this.childNodes).forEach(function (element) {
	          return sel.appendChild(element);
	        });
	        this.appendChild(sel);
	      }
	
	      ModifierUtil.initModifier(this, scheme$18);
	
	      var _arr = ['disabled', 'length', 'multiple', 'name', 'options', 'selectedIndex', 'size', 'value'];
	
	      var _loop = function _loop() {
	        var key = _arr[_i];
	        _this5.__defineGetter__(key, function () {
	          return _this5._select[key];
	        });
	        _this5.__defineSetter__(key, function (value) {
	          _this5._select[key] = value;
	        });
	      };
	
	      for (var _i = 0; _i < _arr.length; _i++) {
	        _loop();
	      }
	      this.__defineGetter__('form', function () {
	        return _this5._select['form'];
	      });
	      this.__defineGetter__('type', function () {
	        return _this5._select['type'];
	      });
	
	      this.add = function (option) {
	        var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	
	        _this5._select.add(option, index);
	      };
	      this.remove = function (index) {
	        _this5._select.remove(index);
	      };
	    }
	  }, {
	    key: '_select',
	    get: function get() {
	      return this.querySelector('select');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class'].concat(INPUT_ATTRIBUTES$1);
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['change'];
	    }
	  }]);
	  return SelectElement;
	}(BaseElement);
	
	customElements.define('ons-select', SelectElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	   http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	*/
	
	var defaultClassName$13 = 'fab fab--mini speed-dial__item';
	
	var scheme$19 = {
	  '': 'speed-dial__item--*'
	};
	
	/**
	 * @element ons-speed-dial-item
	 * @category control
	 * @description
	 *   [en]
	 *     This component displays the child elements of the Material Design Speed dial component.
	 *   [/en]
	 *   [ja]
	 *     Material DesignのSpeed dialの子要素を表現する要素です。
	 *   [/ja]
	 * @codepen dYQYLg
	 * @tutorial vanilla/Reference/speed-dial
	 * @seealso ons-speed-dial
	 *   [en]The `<ons-speed-dial>` component.[/en]
	 *   [ja]ons-speed-dialコンポーネント[/ja]
	 * @seealso ons-fab
	 *   [en]ons-fab component[/en]
	 *   [ja]ons-fabコンポーネント[/ja]
	 * @example
	 * <ons-speed-dial position="left bottom">
	 *   <ons-fab>
	 *     <ons-icon icon="fa-twitter"></ons-icon>
	 *   </ons-fab>
	 *   <ons-speed-dial-item>A</ons-speed-dial-item>
	 *   <ons-speed-dial-item>B</ons-speed-dial-item>
	 *   <ons-speed-dial-item>C</ons-speed-dial-item>
	 * </ons-speed-dial>
	 */
	
	var SpeedDialItemElement = function (_BaseElement) {
	  inherits(SpeedDialItemElement, _BaseElement);
	
	  function SpeedDialItemElement() {
	    classCallCheck(this, SpeedDialItemElement);
	    return possibleConstructorReturn(this, (SpeedDialItemElement.__proto__ || Object.getPrototypeOf(SpeedDialItemElement)).apply(this, arguments));
	  }
	
	  createClass(SpeedDialItemElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]The appearance of the component.[/en]
	     *   [ja]このコンポーネントの表現を指定します。[/ja]
	     */
	
	    value: function init() {
	      this._compile();
	      this._boundOnClick = this._onClick.bind(this);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          this._updateClassName(current);
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$19);
	          break;
	        case 'ripple':
	          this._updateRipple();
	      }
	    }
	  }, {
	    key: '_updateClassName',
	    value: function _updateClassName(className) {
	      var _this2 = this;
	
	      if (!defaultClassName$13.split(/\s+/).every(function (token) {
	        return _this2.classList.contains(token);
	      })) {
	        this.className = defaultClassName$13 + ' ' + className;
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this.addEventListener('click', this._boundOnClick, false);
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this.removeEventListener('click', this._boundOnClick, false);
	    }
	  }, {
	    key: '_updateRipple',
	    value: function _updateRipple() {
	      util.updateRipple(this);
	    }
	  }, {
	    key: '_onClick',
	    value: function _onClick(e) {
	      e.stopPropagation();
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      var _this3 = this;
	
	      autoStyle.prepare(this);
	
	      defaultClassName$13.split(/\s+/).forEach(function (token) {
	        _this3.classList.add(token);
	      });
	
	      this._updateRipple();
	
	      ModifierUtil.initModifier(this, scheme$19);
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'ripple', 'class'];
	    }
	  }]);
	  return SpeedDialItemElement;
	}(BaseElement);
	
	customElements.define('ons-speed-dial-item', SpeedDialItemElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	/**
	 * Minimal utility library for manipulating element's style.
	 */
	var styler = function styler(element, style) {
	  return styler.css.apply(styler, arguments);
	};
	
	/**
	 * Set element's style.
	 *
	 * @param {Element} element
	 * @param {Object} styles
	 * @return {Element}
	 */
	styler.css = function (element, styles) {
	  var keys = Object.keys(styles);
	  keys.forEach(function (key) {
	    if (key in element.style) {
	      element.style[key] = styles[key];
	    } else if (styler._prefix(key) in element.style) {
	      element.style[styler._prefix(key)] = styles[key];
	    } else {
	      util.warn('No such style property: ' + key);
	    }
	  });
	  return element;
	};
	
	/**
	 * Add vendor prefix.
	 *
	 * @param {String} name
	 * @return {String}
	 */
	styler._prefix = function () {
	  var styles = window.getComputedStyle(document.documentElement, '');
	  var prefix = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];
	
	  return function (name) {
	    return prefix + name.substr(0, 1).toUpperCase() + name.substr(1);
	  };
	}();
	
	/**
	 * @param {Element} element
	 */
	styler.clear = function (element) {
	  styler._clear(element);
	};
	
	/**
	 * @param {Element} element
	 */
	styler._clear = function (element) {
	  var len = element.style.length;
	  var style = element.style;
	  var keys = [];
	  for (var i = 0; i < len; i++) {
	    keys.push(style[i]);
	  }
	
	  keys.forEach(function (key) {
	    style[key] = '';
	  });
	};
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	   http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	*/
	
	var defaultClassName$14 = 'speed-dial';
	var scheme$20 = {
	  '': 'speed-dial--*'
	};
	
	/**
	 * @element ons-speed-dial
	 * @category control
	 * @description
	 *   [en]
	 *     Element that displays a Material Design Speed Dialog component. It is useful when there are more than one primary action that can be performed in a page.
	 *
	 *     The Speed dial looks like a `<ons-fab>` element but will expand a menu when tapped.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen dYQYLg
	 * @tutorial vanilla/Reference/speed-dial
	 * @seealso ons-speed-dial-item
	 *   [en]The `<ons-speed-dial-item>` represents a menu item.[/en]
	 *   [ja]ons-speed-dial-itemコンポーネント[/ja]
	 * @seealso ons-fab
	 *   [en]ons-fab component[/en]
	 *   [ja]ons-fabコンポーネント[/ja]
	 * @example
	 * <ons-speed-dial position="left bottom">
	 *   <ons-fab>
	 *     <ons-icon icon="fa-twitter"></ons-icon>
	 *   </ons-fab>
	 *   <ons-speed-dial-item>A</ons-speed-dial-item>
	 *   <ons-speed-dial-item>B</ons-speed-dial-item>
	 *   <ons-speed-dial-item>C</ons-speed-dial-item>
	 * </ons-speed-dial>
	 */
	
	var SpeedDialElement = function (_BaseElement) {
	  inherits(SpeedDialElement, _BaseElement);
	
	  function SpeedDialElement() {
	    classCallCheck(this, SpeedDialElement);
	    return possibleConstructorReturn(this, (SpeedDialElement.__proto__ || Object.getPrototypeOf(SpeedDialElement)).apply(this, arguments));
	  }
	
	  createClass(SpeedDialElement, [{
	    key: 'init',
	
	
	    /**
	     * @event open
	     * @description
	     *   [en]Fired when the menu items are shown.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @event close
	     * @description
	     *   [en]Fired when the menu items are hidden.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]The appearance of the component.[/en]
	     *   [ja]このコンポーネントの表現を指定します。[/ja]
	     */
	
	    /**
	     * @attribute position
	     * @type {String}
	     * @description
	     *   [en]
	     *     Specify the vertical and horizontal position of the component.
	     *     I.e. to display it in the top right corner specify "right top".
	     *     Choose from "right", "left", "top" and "bottom".
	     *   [/en]
	     *   [ja]
	     *     この要素を表示する左右と上下の位置を指定します。
	     *     例えば、右上に表示する場合には"right top"を指定します。
	     *     左右と上下の位置の指定には、rightとleft、topとbottomがそれぞれ指定できます。
	     *   [/ja]
	     */
	
	    /**
	     * @attribute direction
	     * @type {String}
	     * @description
	     *   [en]Specify the direction the items are displayed. Possible values are "up", "down", "left" and "right".[/en]
	     *   [ja]
	     *     要素が表示する方向を指定します。up, down, left, rightが指定できます。
	     *   [/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *   [en]Specify if button should be disabled.[/en]
	     *   [ja]無効化する場合に指定します。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        _this2._compile();
	      });
	
	      this._itemShown = false;
	      this._boundOnClick = this._onClick.bind(this);
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      this.classList.add(defaultClassName$14);
	      autoStyle.prepare(this);
	      this._updateRipple();
	      ModifierUtil.initModifier(this, scheme$20);
	
	      if (this.hasAttribute('direction')) {
	        this._updateDirection(this.getAttribute('direction'));
	      } else {
	        this._updateDirection('up');
	      }
	
	      this._updatePosition();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      var _this3 = this;
	
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$14)) {
	            this.className = defaultClassName$14 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$20);
	          break;
	        case 'ripple':
	          contentReady(this, function () {
	            return _this3._updateRipple();
	          });
	          break;
	        case 'direction':
	          contentReady(this, function () {
	            return _this3._updateDirection(current);
	          });
	          break;
	        case 'position':
	          contentReady(this, function () {
	            return _this3._updatePosition();
	          });
	          break;
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this.addEventListener('click', this._boundOnClick, false);
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this.removeEventListener('click', this._boundOnClick, false);
	    }
	  }, {
	    key: '_onClick',
	    value: function _onClick(e) {
	      if (this.onClick) {
	        this.onClick.apply(this);
	        return Promise.resolve();
	      } else if (!this.disabled && this.visible) {
	        return this.toggleItems();
	      }
	    }
	  }, {
	    key: '_show',
	    value: function _show() {
	      if (!this.inline) {
	        return this.show();
	      }
	      return Promise.resolve();
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      var _this4 = this;
	
	      return new Promise(function (resolve) {
	        if (!_this4.inline) {
	          setImmediate(function () {
	            return _this4.hide().then(resolve);
	          });
	        } else {
	          resolve();
	        }
	      });
	    }
	  }, {
	    key: '_updateRipple',
	    value: function _updateRipple() {
	      if (this._fab) {
	        this.hasAttribute('ripple') ? this._fab.setAttribute('ripple', '') : this._fab.removeAttribute('ripple');
	      }
	    }
	  }, {
	    key: '_updateDirection',
	    value: function _updateDirection(direction) {
	      var children = this.items;
	      for (var i = 0; i < children.length; i++) {
	        styler(children[i], {
	          transitionDelay: 25 * i + 'ms',
	          bottom: 'auto',
	          right: 'auto',
	          top: 'auto',
	          left: 'auto'
	        });
	      }
	      switch (direction) {
	        case 'up':
	          for (var _i = 0; _i < children.length; _i++) {
	            children[_i].style.bottom = 72 + 56 * _i + 'px';
	            children[_i].style.right = '8px';
	          }
	          break;
	        case 'down':
	          for (var _i2 = 0; _i2 < children.length; _i2++) {
	            children[_i2].style.top = 72 + 56 * _i2 + 'px';
	            children[_i2].style.left = '8px';
	          }
	          break;
	        case 'left':
	          for (var _i3 = 0; _i3 < children.length; _i3++) {
	            children[_i3].style.top = '8px';
	            children[_i3].style.right = 72 + 56 * _i3 + 'px';
	          }
	          break;
	        case 'right':
	          for (var _i4 = 0; _i4 < children.length; _i4++) {
	            children[_i4].style.top = '8px';
	            children[_i4].style.left = 72 + 56 * _i4 + 'px';
	          }
	          break;
	        default:
	          throw new Error('Argument must be one of up, down, left or right.');
	      }
	    }
	  }, {
	    key: '_updatePosition',
	    value: function _updatePosition() {
	      var position = this.getAttribute('position');
	      this.classList.remove('fab--top__left', 'fab--bottom__right', 'fab--bottom__left', 'fab--top__right', 'fab--top__center', 'fab--bottom__center');
	      switch (position) {
	        case 'top right':
	        case 'right top':
	          this.classList.add('fab--top__right');
	          break;
	        case 'top left':
	        case 'left top':
	          this.classList.add('fab--top__left');
	          break;
	        case 'bottom right':
	        case 'right bottom':
	          this.classList.add('fab--bottom__right');
	          break;
	        case 'bottom left':
	        case 'left bottom':
	          this.classList.add('fab--bottom__left');
	          break;
	        case 'center top':
	        case 'top center':
	          this.classList.add('fab--top__center');
	          break;
	        case 'center bottom':
	        case 'bottom center':
	          this.classList.add('fab--bottom__center');
	          break;
	        default:
	          break;
	      }
	    }
	
	    /**
	     * @method show
	     * @signature show()
	     * @description
	     *   [en]Show the speed dial.[/en]
	     *   [ja]Speed dialを表示します。[/ja]
	     */
	
	  }, {
	    key: 'show',
	    value: function show() {
	      this._fab.show();
	      return Promise.resolve();
	    }
	
	    /**
	     * @method hide
	     * @signature hide()
	     * @description
	     *   [en]Hide the speed dial.[/en]
	     *   [ja]Speed dialを非表示にします。[/ja]
	     */
	
	  }, {
	    key: 'hide',
	    value: function hide() {
	      var _this5 = this;
	
	      return this.hideItems().then(function () {
	        return _this5._fab.hide();
	      });
	    }
	
	    /**
	     * @method showItems
	     * @signature showItems()
	     * @description
	     *   [en]Show the speed dial items.[/en]
	     *   [ja]Speed dialの子要素を表示します。[/ja]
	     */
	
	  }, {
	    key: 'showItems',
	    value: function showItems() {
	      if (this.hasAttribute('direction')) {
	        this._updateDirection(this.getAttribute('direction'));
	      } else {
	        this._updateDirection('up');
	      }
	
	      var totalDelay = 0;
	      if (!this._itemShown) {
	        var children = this.items;
	        for (var i = 0; i < children.length; i++) {
	          var delay = 25 * i;
	          totalDelay += delay;
	          styler(children[i], {
	            transform: 'scale(1)',
	            transitionDelay: delay + 'ms'
	          });
	        }
	        totalDelay += 50;
	
	        this._itemShown = true;
	        util.triggerElementEvent(this, 'open');
	      }
	
	      var deferred = util.defer();
	      setTimeout(deferred.resolve, totalDelay);
	      return deferred.promise;
	    }
	
	    /**
	     * @method hideItems
	     * @signature hideItems()
	     * @description
	     *   [en]Hide the speed dial items.[/en]
	     *   [ja]Speed dialの子要素を非表示にします。[/ja]
	     */
	
	  }, {
	    key: 'hideItems',
	    value: function hideItems() {
	      var totalDelay = 0;
	      if (this._itemShown) {
	        var children = this.items;
	        for (var i = 0; i < children.length; i++) {
	          var delay = 25 * (children.length - i);
	          totalDelay += delay;
	          styler(children[i], {
	            transform: 'scale(0)',
	            transitionDelay: delay + 'ms'
	          });
	        }
	        totalDelay += 50;
	
	        this._itemShown = false;
	        util.triggerElementEvent(this, 'close');
	      }
	
	      var deferred = util.defer();
	      setTimeout(deferred.resolve, totalDelay);
	      return deferred.promise;
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'isOpen',
	
	
	    /**
	     * @method isOpen
	     * @signature isOpen()
	     * @description
	     *   [en]Returns whether the menu is open or not.[/en]
	     *   [ja][/ja]
	     */
	    value: function isOpen() {
	      return this._itemShown;
	    }
	
	    /**
	     * @method toggle
	     * @signature toggle()
	     * @description
	     *   [en]Toggle visibility.[/en]
	     *   [ja]Speed dialの表示非表示を切り替えます。[/ja]
	     */
	
	  }, {
	    key: 'toggle',
	    value: function toggle() {
	      return this.visible ? this.hide() : this.show();
	    }
	
	    /**
	     * @method toggleItems
	     * @signature toggleItems()
	     * @description
	     *   [en]Toggle item visibility.[/en]
	     *   [ja]Speed dialの子要素の表示非表示を切り替えます。[/ja]
	     */
	
	  }, {
	    key: 'toggleItems',
	    value: function toggleItems() {
	      return this.isOpen() ? this.hideItems() : this.showItems();
	    }
	  }, {
	    key: 'items',
	    get: function get() {
	      return util.arrayFrom(this.querySelectorAll('ons-speed-dial-item'));
	    }
	  }, {
	    key: '_fab',
	    get: function get() {
	      return util.findChild(this, 'ons-fab');
	    }
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      if (value) {
	        this.hideItems();
	      }
	      util.arrayFrom(this.children).forEach(function (e) {
	        util.match(e, '.fab') && util.toggleAttribute(e, 'disabled', value);
	      });
	
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	
	    /**
	     * @property inline
	     * @readonly
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is inline or not.[/en]
	     *   [ja]インライン要素の場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'inline',
	    get: function get() {
	      return this.hasAttribute('inline');
	    }
	
	    /**
	     * @property visible
	     * @readonly
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is visible or not.[/en]
	     *   [ja]要素が見える場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'visible',
	    get: function get() {
	      return this._fab.visible && this.style.display !== 'none';
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['class', 'modifier', 'ripple', 'direction', 'position'];
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['open', 'close'];
	    }
	  }]);
	  return SpeedDialElement;
	}(BaseElement);
	
	customElements.define('ons-speed-dial', SpeedDialElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var rewritables$1 = {
	  /**
	   * @param {Element} element
	   * @param {Function} callback
	   */
	  ready: function ready(element, callback) {
	    setImmediate(callback);
	  }
	};
	
	/**
	 * @element ons-splitter-content
	 * @category menu
	 * @description
	 *  [en]
	 *    The `<ons-splitter-content>` element is used as a child element of `<ons-splitter>`.
	 *
	 *    It contains the main content of the page while `<ons-splitter-side>` contains the list.
	 *  [/en]
	 *  [ja]ons-splitter-content要素は、ons-splitter要素の子要素として利用します。[/ja]
	 * @codepen rOQOML
	 * @tutorial vanilla/Reference/splitter
	 * @guide multiple-page-navigation
	 *  [en]Managing multiple pages.[/en]
	 *  [ja]Managing multiple pages[/ja]
	 * @seealso ons-splitter
	 *  [en]The `<ons-splitter>` component is the parent element.[/en]
	 *  [ja]ons-splitterコンポーネント[/ja]
	 * @seealso ons-splitter-side
	 *  [en]The `<ons-splitter-side>` component contains the menu.[/en]
	 *  [ja]ons-splitter-sideコンポーネント[/ja]
	 * @example
	 * <ons-splitter>
	 *   <ons-splitter-content>
	 *     ...
	 *   </ons-splitter-content>
	 *
	 *   <ons-splitter-side side="left" width="80%" collapse>
	 *     ...
	 *   </ons-splitter-side>
	 * </ons-splitter>
	 */
	
	var SplitterContentElement = function (_BaseElement) {
	  inherits(SplitterContentElement, _BaseElement);
	
	  function SplitterContentElement() {
	    classCallCheck(this, SplitterContentElement);
	    return possibleConstructorReturn(this, (SplitterContentElement.__proto__ || Object.getPrototypeOf(SplitterContentElement)).apply(this, arguments));
	  }
	
	  createClass(SplitterContentElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute page
	     * @type {String}
	     * @description
	     *   [en]
	     *     The url of the content page. If this attribute is used the content will be loaded from a `<ons-template>` tag or a remote file.
	     *
	     *     It is also possible to put `<ons-page>` element as a child of the element.
	     *   [/en]
	     *   [ja]ons-splitter-content要素に表示するページのURLを指定します。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      this._page = null;
	      this._pageLoader = defaultPageLoader;
	
	      contentReady(this, function () {
	        rewritables$1.ready(_this2, function () {
	          var page = _this2._getPageTarget();
	
	          if (page) {
	            _this2.load(page);
	          }
	        });
	      });
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      if (!util.match(this.parentNode, 'ons-splitter')) {
	        throw new Error('"ons-splitter-content" must have "ons-splitter" as parentNode.');
	      }
	    }
	  }, {
	    key: '_getPageTarget',
	    value: function _getPageTarget() {
	      return this._page || this.getAttribute('page');
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {}
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {}
	
	    /**
	     * @property page
	     * @type {HTMLElement}
	     * @description
	     *   [en]The page to load in the splitter content.[/en]
	     *   [ja]この要素内に表示するページを指定します。[/ja]
	     */
	
	  }, {
	    key: 'load',
	
	
	    /**
	     * @method load
	     * @signature load(page, [options])
	     * @param {String} page, [options]
	     *   [en]Page URL. Can be either an HTML document or an `<ons-template>` id.[/en]
	     *   [ja]pageのURLか、ons-templateで宣言したテンプレートのid属性の値を指定します。[/ja]
	     * @param {Object} [options]
	     * @param {Function} [options.callback]
	     * @description
	     *   [en]Show the page specified in `page` in the content.[/en]
	     *   [ja]指定したURLをメインページを読み込みます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the new `<ons-page>` element[/en]
	     *   [ja]`<ons-page>`要素を解決するPromiseオブジェクトを返します。[/ja]
	     */
	    value: function load(page) {
	      var _this3 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this._page = page;
	      var callback = options.callback || function () {};
	
	      return new Promise(function (resolve) {
	        var oldContent = _this3._content || null;
	
	        _this3._pageLoader.load({ page: page, parent: _this3 }, function (pageElement) {
	          if (oldContent) {
	            _this3._pageLoader.unload(oldContent);
	            oldContent = null;
	          }
	
	          setImmediate(function () {
	            return _this3._show();
	          });
	
	          callback(pageElement);
	          resolve(pageElement);
	        });
	      });
	    }
	  }, {
	    key: '_show',
	    value: function _show() {
	      if (this._content) {
	        this._content._show();
	      }
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      if (this._content) {
	        this._content._hide();
	      }
	    }
	  }, {
	    key: '_destroy',
	    value: function _destroy() {
	      if (this._content) {
	        this._pageLoader.unload(this._content);
	      }
	      this.remove();
	    }
	  }, {
	    key: 'page',
	    get: function get() {
	      return this._page;
	    }
	
	    /**
	     * @param {*} page
	     */
	    ,
	    set: function set(page) {
	      this._page = page;
	    }
	  }, {
	    key: '_content',
	    get: function get() {
	      return this.children[0];
	    }
	
	    /**
	     * @property pageLoader
	     * @type {Function}
	     * @description
	     *   [en]Page element loaded in the splitter content.[/en]
	     *   [ja]この要素内に表示するページを指定します。[/ja]
	     */
	
	  }, {
	    key: 'pageLoader',
	    get: function get() {
	      return this._pageLoader;
	    },
	    set: function set(loader) {
	      if (!(loader instanceof PageLoader)) {
	        throw Error('First parameter must be an instance of PageLoader');
	      }
	      this._pageLoader = loader;
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return [];
	    }
	  }, {
	    key: 'rewritables',
	    get: function get() {
	      return rewritables$1;
	    }
	  }]);
	  return SplitterContentElement;
	}(BaseElement);
	
	customElements.define('ons-splitter-content', SplitterContentElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var SplitterMaskElement = function (_BaseElement) {
	  inherits(SplitterMaskElement, _BaseElement);
	
	  function SplitterMaskElement() {
	    classCallCheck(this, SplitterMaskElement);
	    return possibleConstructorReturn(this, (SplitterMaskElement.__proto__ || Object.getPrototypeOf(SplitterMaskElement)).apply(this, arguments));
	  }
	
	  createClass(SplitterMaskElement, [{
	    key: 'init',
	    value: function init() {
	      var _this2 = this;
	
	      this._boundOnClick = this._onClick.bind(this);
	      contentReady(this, function () {
	        if (_this2.parentNode._sides.every(function (side) {
	          return side.mode === 'split';
	        })) {
	          _this2.setAttribute('style', 'display: none !important');
	        }
	      });
	    }
	  }, {
	    key: '_onClick',
	    value: function _onClick(event) {
	      if (this.onClick instanceof Function) {
	        this.onClick();
	      } else if (util.match(this.parentNode, 'ons-splitter')) {
	        this.parentNode._sides.forEach(function (side) {
	          return side.close('left').catch(function () {});
	        });
	      }
	      event.stopPropagation();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {}
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this.addEventListener('click', this._boundOnClick);
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this.removeEventListener('click', this._boundOnClick);
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return [];
	    }
	  }]);
	  return SplitterMaskElement;
	}(BaseElement);
	
	customElements.define('ons-splitter-mask', SplitterMaskElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var SplitterAnimator$1 = function (_BaseAnimator) {
	  inherits(SplitterAnimator, _BaseAnimator);
	
	  function SplitterAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.3 : _ref$duration,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay;
	
	    classCallCheck(this, SplitterAnimator);
	    return possibleConstructorReturn(this, (SplitterAnimator.__proto__ || Object.getPrototypeOf(SplitterAnimator)).call(this, { timing: timing, duration: duration, delay: delay }));
	  }
	
	  createClass(SplitterAnimator, [{
	    key: 'updateOptions',
	    value: function updateOptions() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      util.extend(this, {
	        timing: this.timing, duration: this.duration, delay: this.delay
	      }, options);
	    }
	
	    /**
	     * @param {Element} sideElement
	     */
	
	  }, {
	    key: 'activate',
	    value: function activate(sideElement) {
	      var _this2 = this;
	
	      var splitter = sideElement.parentNode;
	
	      contentReady(splitter, function () {
	        _this2._side = sideElement;
	        _this2._oppositeSide = splitter.right !== sideElement && splitter.right || splitter.left !== sideElement && splitter.left;
	        _this2._content = splitter.content;
	        _this2._mask = splitter.mask;
	      });
	    }
	  }, {
	    key: 'deactivate',
	    value: function deactivate() {
	      this.clearTransition();
	      this.clearMask();
	      this._content = this._side = this._oppositeSide = this._mask = null;
	    }
	  }, {
	    key: 'clearTransition',
	    value: function clearTransition() {
	      this._side.style.transform = this._side.style.transition = this._side.style.webkitTransition = '';
	      this._mask.style.transform = this._mask.style.transition = this._mask.style.webkitTransition = '';
	      this._content.style.transform = this._content.style.transition = this._content.style.webkitTransition = '';
	    }
	  }, {
	    key: 'clearMask',
	    value: function clearMask() {
	      // Check if the other side needs the mask before clearing
	      if (!this._oppositeSide || this._oppositeSide.mode === 'split' || !this._oppositeSide.isOpen) {
	        this._mask.style.opacity = '';
	        this._mask.style.display = 'none';
	      }
	    }
	
	    /**
	     * @param {Number} distance
	     */
	
	  }, {
	    key: 'translate',
	    value: function translate(distance) {}
	
	    /**
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'open',
	    value: function open(done) {
	      done();
	    }
	
	    /**
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'close',
	    value: function close(done) {
	      done();
	    }
	  }, {
	    key: 'minus',
	    get: function get() {
	      return this._side._side === 'right' ? '-' : '';
	    }
	  }]);
	  return SplitterAnimator;
	}(BaseAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var OverlaySplitterAnimator = function (_SplitterAnimator) {
	  inherits(OverlaySplitterAnimator, _SplitterAnimator);
	
	  function OverlaySplitterAnimator() {
	    classCallCheck(this, OverlaySplitterAnimator);
	    return possibleConstructorReturn(this, (OverlaySplitterAnimator.__proto__ || Object.getPrototypeOf(OverlaySplitterAnimator)).apply(this, arguments));
	  }
	
	  createClass(OverlaySplitterAnimator, [{
	    key: 'translate',
	    value: function translate(distance) {
	      Animit(this._side).queue({
	        transform: 'translate3d(' + (this.minus + distance) + 'px, 0px, 0px)'
	      }).play();
	    }
	
	    /**
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'open',
	    value: function open(done) {
	      Animit.runAll(Animit(this._side).wait(this.delay).queue({
	        transform: 'translate3d(' + this.minus + '100%, 0px, 0px)'
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (callback) {
	        callback();
	        done && done();
	      }), Animit(this._mask).wait(this.delay).queue({
	        display: 'block'
	      }).queue({
	        opacity: '1'
	      }, {
	        duration: this.duration,
	        timing: 'linear'
	      }));
	    }
	
	    /**
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'close',
	    value: function close(done) {
	
	      Animit.runAll(Animit(this._side).wait(this.delay).queue({
	        transform: 'translate3d(0px, 0px, 0px)'
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (callback) {
	        done && done();
	        callback();
	      }), Animit(this._mask).wait(this.delay).queue({
	        opacity: '0'
	      }, {
	        duration: this.duration,
	        timing: 'linear'
	      }).queue({
	        display: 'none'
	      }));
	    }
	  }]);
	  return OverlaySplitterAnimator;
	}(SplitterAnimator$1);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var PushSplitterAnimator = function (_SplitterAnimator) {
	  inherits(PushSplitterAnimator, _SplitterAnimator);
	
	  function PushSplitterAnimator() {
	    classCallCheck(this, PushSplitterAnimator);
	    return possibleConstructorReturn(this, (PushSplitterAnimator.__proto__ || Object.getPrototypeOf(PushSplitterAnimator)).apply(this, arguments));
	  }
	
	  createClass(PushSplitterAnimator, [{
	    key: '_getSlidingElements',
	    value: function _getSlidingElements() {
	      var slidingElements = [this._side, this._content];
	      if (this._oppositeSide && this._oppositeSide.mode === 'split') {
	        slidingElements.push(this._oppositeSide);
	      }
	
	      return slidingElements;
	    }
	  }, {
	    key: 'translate',
	    value: function translate(distance) {
	      if (!this._slidingElements) {
	        this._slidingElements = this._getSlidingElements();
	      }
	
	      Animit(this._slidingElements).queue({
	        transform: 'translate3d(' + (this.minus + distance) + 'px, 0px, 0px)'
	      }).play();
	    }
	
	    /**
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'open',
	    value: function open(done) {
	      var _this2 = this;
	
	      var max = this._side.offsetWidth;
	      this._slidingElements = this._getSlidingElements();
	
	      Animit.runAll(Animit(this._slidingElements).wait(this.delay).queue({
	        transform: 'translate3d(' + (this.minus + max) + 'px, 0px, 0px)'
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (callback) {
	        _this2._slidingElements = null;
	        callback();
	        done && done();
	      }), Animit(this._mask).wait(this.delay).queue({
	        display: 'block'
	      }));
	    }
	
	    /**
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'close',
	    value: function close(done) {
	      var _this3 = this;
	
	      this._slidingElements = this._getSlidingElements();
	
	      Animit.runAll(Animit(this._slidingElements).wait(this.delay).queue({
	        transform: 'translate3d(0px, 0px, 0px)'
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (callback) {
	        _this3._slidingElements = null;
	        get$1(PushSplitterAnimator.prototype.__proto__ || Object.getPrototypeOf(PushSplitterAnimator.prototype), 'clearTransition', _this3).call(_this3);
	        done && done();
	        callback();
	      }), Animit(this._mask).wait(this.delay).queue({
	        display: 'none'
	      }));
	    }
	  }]);
	  return PushSplitterAnimator;
	}(SplitterAnimator$1);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var RevealSplitterAnimator = function (_SplitterAnimator) {
	  inherits(RevealSplitterAnimator, _SplitterAnimator);
	
	  function RevealSplitterAnimator() {
	    classCallCheck(this, RevealSplitterAnimator);
	    return possibleConstructorReturn(this, (RevealSplitterAnimator.__proto__ || Object.getPrototypeOf(RevealSplitterAnimator)).apply(this, arguments));
	  }
	
	  createClass(RevealSplitterAnimator, [{
	    key: '_getSlidingElements',
	    value: function _getSlidingElements() {
	      var slidingElements = [this._content, this._mask];
	      if (this._oppositeSide && this._oppositeSide.mode === 'split') {
	        slidingElements.push(this._oppositeSide);
	      }
	
	      return slidingElements;
	    }
	  }, {
	    key: 'activate',
	    value: function activate(sideElement) {
	      get$1(RevealSplitterAnimator.prototype.__proto__ || Object.getPrototypeOf(RevealSplitterAnimator.prototype), 'activate', this).call(this, sideElement);
	      this.maxWidth = sideElement.offsetWidth;
	      if (sideElement.mode === 'collapse') {
	        this._setStyles(sideElement);
	      }
	    }
	  }, {
	    key: 'deactivate',
	    value: function deactivate() {
	      this._unsetStyles(this._side);
	      get$1(RevealSplitterAnimator.prototype.__proto__ || Object.getPrototypeOf(RevealSplitterAnimator.prototype), 'deactivate', this).call(this);
	    }
	  }, {
	    key: '_setStyles',
	    value: function _setStyles(sideElement) {
	      sideElement.style.left = sideElement.side === 'right' ? 'auto' : 0;
	      sideElement.style.right = sideElement.side === 'right' ? 0 : 'auto';
	      sideElement.style.zIndex = 0;
	      sideElement.style.opacity = 0.9;
	      sideElement.style.visibility = 'hidden';
	
	      sideElement.parentElement.style.backgroundColor = 'black';
	      contentReady(sideElement.parentElement, function () {
	        sideElement.parentElement.content.style.boxShadow = '0 0 12px 0 rgba(0, 0, 0, 0.2)';
	      });
	    }
	  }, {
	    key: '_unsetStyles',
	    value: function _unsetStyles(sideElement) {
	      sideElement.style.left = sideElement.style.right = sideElement.style.zIndex = sideElement.style.opacity = sideElement.style.visibility = '';
	
	      // Check if the other side needs the common styles
	      if (!this._oppositeSide || this._oppositeSide.mode === 'split' || !this._oppositeSide.isOpen) {
	        sideElement.parentElement.style.backgroundColor = '';
	        sideElement.parentElement.content.style.boxShadow = '';
	      }
	    }
	  }, {
	    key: '_generateBehindPageStyle',
	    value: function _generateBehindPageStyle(distance) {
	      var max = this.maxWidth;
	
	      var behindDistance = (distance - max) / max * 10;
	      behindDistance = isNaN(behindDistance) ? 0 : Math.max(Math.min(behindDistance, 0), -10);
	
	      var behindTransform = 'translate3d(' + (this.minus ? -1 : 1) * behindDistance + '%, 0, 0)';
	      var opacity = 1 + behindDistance / 100;
	
	      return {
	        transform: behindTransform,
	        opacity: opacity
	      };
	    }
	  }, {
	    key: 'translate',
	    value: function translate(distance) {
	      var max = this.maxWidth;
	      var menuStyle = this._generateBehindPageStyle(Math.min(distance, max));
	      this._side.style.visibility = 'visible';
	
	      if (!this._slidingElements) {
	        this._slidingElements = this._getSlidingElements();
	      }
	
	      Animit.runAll(Animit(this._slidingElements).queue({
	        transform: 'translate3d(' + (this.minus + distance) + 'px, 0px, 0px)'
	      }), Animit(this._side).queue(menuStyle));
	    }
	
	    /**
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'open',
	    value: function open(done) {
	      var _this2 = this;
	
	      var max = this.maxWidth;
	      var menuStyle = this._generateBehindPageStyle(max);
	      this._slidingElements = this._getSlidingElements();
	      this._side.style.visibility = 'visible';
	
	      Animit.runAll(Animit(this._slidingElements).wait(this.delay).queue({
	        transform: 'translate3d(' + (this.minus + max) + 'px, 0px, 0px)'
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(this._mask).wait(this.delay).queue({
	        display: 'block'
	      }), Animit(this._side).wait(this.delay).queue(menuStyle, {
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (callback) {
	        _this2._slidingElements = null;
	        callback();
	        done && done();
	      }));
	    }
	
	    /**
	     * @param {Function} done
	     */
	
	  }, {
	    key: 'close',
	    value: function close(done) {
	      var _this3 = this;
	
	      var menuStyle = this._generateBehindPageStyle(0);
	      this._slidingElements = this._getSlidingElements();
	      this._side.style.visibility = 'visible';
	
	      Animit.runAll(Animit(this._slidingElements).wait(this.delay).queue({
	        transform: 'translate3d(0px, 0px, 0px)'
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }), Animit(this._mask).wait(this.delay).queue({
	        display: 'none'
	      }), Animit(this._side).wait(this.delay).queue(menuStyle, {
	        duration: this.duration,
	        timing: this.timing
	      }).queue(function (callback) {
	        _this3._slidingElements = null;
	        _this3._side.style.visibility = 'hidden';
	        get$1(RevealSplitterAnimator.prototype.__proto__ || Object.getPrototypeOf(RevealSplitterAnimator.prototype), 'clearTransition', _this3).call(_this3);
	        done && done();
	        callback();
	      }));
	    }
	  }]);
	  return RevealSplitterAnimator;
	}(SplitterAnimator$1);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var _animatorDict$5 = {
	  default: OverlaySplitterAnimator,
	  overlay: OverlaySplitterAnimator,
	  push: PushSplitterAnimator,
	  reveal: RevealSplitterAnimator
	};
	
	/**
	 * @element ons-splitter
	 * @category menu
	 * @description
	 *  [en]
	 *    A component that enables responsive layout by implementing both a two-column layout and a sliding menu layout.
	 *
	 *    It can be configured to automatically expand into a column layout on large screens and collapse the menu on smaller screens. When the menu is collapsed the user can open it by swiping.
	 *  [/en]
	 *  [ja][/ja]
	 * @codepen rOQOML
	 * @tutorial vanilla/Reference/splitter
	 * @guide multiple-page-navigation
	 *  [en]Managing multiple pages.[/en]
	 *  [ja]Managing multiple pages[/ja]
	 * @seealso ons-splitter-content
	 *  [en]The `<ons-splitter-content>` component contains the main content of the page.[/en]
	 *  [ja]ons-splitter-contentコンポーネント[/ja]
	 * @seealso ons-splitter-side
	 *  [en]The `<ons-splitter-side>` component contains the menu.[/en]
	 *  [ja]ons-splitter-sideコンポーネント[/ja]
	 * @example
	 * <ons-splitter id="splitter">
	 *   <ons-splitter-content>
	 *     ...
	 *   </ons-splitter-content>
	 *
	 *   <ons-splitter-side side="left" width="80%" collapse swipeable>
	 *     ...
	 *   </ons-splitter-side>
	 * </ons-splitter>
	 *
	 * <script>
	 *   var splitter = document.getElementById('splitter');
	 *   splitter.left.open();
	 * </script>
	 */
	
	var SplitterElement = function (_BaseElement) {
	  inherits(SplitterElement, _BaseElement);
	
	  function SplitterElement() {
	    classCallCheck(this, SplitterElement);
	    return possibleConstructorReturn(this, (SplitterElement.__proto__ || Object.getPrototypeOf(SplitterElement)).apply(this, arguments));
	  }
	
	  createClass(SplitterElement, [{
	    key: '_getSide',
	    value: function _getSide(side) {
	      var element = util.findChild(this, function (e) {
	        return util.match(e, 'ons-splitter-side') && e.getAttribute('side') === side;
	      });
	      return element;
	    }
	
	    /**
	     * @property left
	     * @readonly
	     * @type {HTMLElement}
	     * @description
	     *   [en]Left `<ons-splitter-side>` element.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: '_onDeviceBackButton',
	    value: function _onDeviceBackButton(event) {
	      this._sides.some(function (s) {
	        return s.isOpen ? s.close() : false;
	      }) || event.callParentHandler();
	    }
	  }, {
	    key: '_onModeChange',
	    value: function _onModeChange(e) {
	      var _this2 = this;
	
	      if (e.target.parentNode) {
	        contentReady(this, function () {
	          _this2._layout();
	        });
	      }
	    }
	  }, {
	    key: '_layout',
	    value: function _layout() {
	      var _this3 = this;
	
	      this._sides.forEach(function (side) {
	        _this3.content.style[side.side] = side.mode === 'split' ? side._width : 0;
	      });
	    }
	  }, {
	    key: 'init',
	    value: function init() {
	      var _this4 = this;
	
	      this._boundOnModeChange = this._onModeChange.bind(this);
	
	      contentReady(this, function () {
	        _this4._compile();
	        _this4._layout();
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      if (!this.mask) {
	        this.appendChild(document.createElement('ons-splitter-mask'));
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this.onDeviceBackButton = this._onDeviceBackButton.bind(this);
	      this.addEventListener('modechange', this._boundOnModeChange, false);
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this._backButtonHandler.destroy();
	      this._backButtonHandler = null;
	      this.removeEventListener('modechange', this._boundOnModeChange, false);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {}
	  }, {
	    key: '_show',
	    value: function _show() {
	      util.propagateAction(this, '_show');
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      util.propagateAction(this, '_hide');
	    }
	  }, {
	    key: '_destroy',
	    value: function _destroy() {
	      util.propagateAction(this, '_destroy');
	      this.remove();
	    }
	  }, {
	    key: 'left',
	    get: function get() {
	      return this._getSide('left');
	    }
	    /**
	     * @property right
	     * @readonly
	     * @type {HTMLElement}
	     * @description
	     *   [en]Right `<ons-splitter-side>` element.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'right',
	    get: function get() {
	      return this._getSide('right');
	    }
	
	    /**
	     * @property side
	     * @readonly
	     * @type {HTMLElement}
	     * @description
	     *   [en]First `<ons-splitter-side>` element regardless the actual side.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'side',
	    get: function get() {
	      return util.findChild(this, 'ons-splitter-side');
	    }
	  }, {
	    key: '_sides',
	    get: function get() {
	      return [this.left, this.right].filter(function (e) {
	        return e;
	      });
	    }
	    /**
	     * @property content
	     * @readonly
	     * @type {HTMLElement}
	     * @description
	     *   [en]The `<ons-splitter-content>` element.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'content',
	    get: function get() {
	      return util.findChild(this, 'ons-splitter-content');
	    }
	  }, {
	    key: 'topPage',
	    get: function get() {
	      return this.content._content;
	    }
	  }, {
	    key: 'mask',
	    get: function get() {
	      return util.findChild(this, 'ons-splitter-mask');
	    }
	
	    /**
	     * @property onDeviceBackButton
	     * @type {Object}
	     * @description
	     *   [en]Back-button handler.[/en]
	     *   [ja]バックボタンハンドラ。[/ja]
	     */
	
	  }, {
	    key: 'onDeviceBackButton',
	    get: function get() {
	      return this._backButtonHandler;
	    },
	    set: function set(callback) {
	      if (this._backButtonHandler) {
	        this._backButtonHandler.destroy();
	      }
	
	      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);
	    }
	  }], [{
	    key: 'registerAnimator',
	    value: function registerAnimator(name, Animator) {
	      if (!(Animator instanceof SplitterAnimator)) {
	        throw new Error('Animator parameter must be an instance of SplitterAnimator.');
	      }
	      _animatorDict$5[name] = Animator;
	    }
	  }, {
	    key: 'SplitterAnimator',
	    get: function get() {
	      return SplitterAnimator;
	    }
	  }, {
	    key: 'animators',
	    get: function get() {
	      return _animatorDict$5;
	    }
	  }]);
	  return SplitterElement;
	}(BaseElement);
	
	customElements.define('ons-splitter', SplitterElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var SPLIT_MODE = 'split';
	var COLLAPSE_MODE = 'collapse';
	var CLOSED_STATE = 'closed';
	var OPEN_STATE = 'open';
	var CHANGING_STATE = 'changing';
	
	var WATCHED_ATTRIBUTES = ['animation', 'width', 'side', 'collapse', 'swipeable', 'swipe-target-width', 'animation-options', 'open-threshold'];
	
	var rewritables$2 = {
	  /**
	   * @param {Element} splitterSideElement
	   * @param {Function} callback
	   */
	  ready: function ready(splitterSideElement, callback) {
	    setImmediate(callback);
	  }
	};
	
	var CollapseDetection = function () {
	  function CollapseDetection(element, target) {
	    classCallCheck(this, CollapseDetection);
	
	    this._element = element;
	    this._boundOnChange = this._onChange.bind(this);
	    target && this.changeTarget(target);
	  }
	
	  createClass(CollapseDetection, [{
	    key: 'changeTarget',
	    value: function changeTarget(target) {
	      this.disable();
	      this._target = target;
	      if (target) {
	        this._orientation = ['portrait', 'landscape'].indexOf(target) !== -1;
	        this.activate();
	      }
	    }
	  }, {
	    key: '_match',
	    value: function _match(value) {
	      if (this._orientation) {
	        return this._target === (value.isPortrait ? 'portrait' : 'landscape');
	      }
	      return value.matches;
	    }
	  }, {
	    key: '_onChange',
	    value: function _onChange(value) {
	      this._element._updateMode(this._match(value) ? COLLAPSE_MODE : SPLIT_MODE);
	    }
	  }, {
	    key: 'activate',
	    value: function activate() {
	      if (this._orientation) {
	        orientation.on('change', this._boundOnChange);
	        this._onChange({ isPortrait: orientation.isPortrait() });
	      } else {
	        this._queryResult = window.matchMedia(this._target);
	        this._queryResult.addListener(this._boundOnChange);
	        this._onChange(this._queryResult);
	      }
	    }
	  }, {
	    key: 'disable',
	    value: function disable() {
	      if (this._orientation) {
	        orientation.off('change', this._boundOnChange);
	      } else if (this._queryResult) {
	        this._queryResult.removeListener(this._boundOnChange);
	        this._queryResult = null;
	      }
	    }
	  }]);
	  return CollapseDetection;
	}();
	
	var widthToPx = function widthToPx(width, parent) {
	  var _ref = [parseInt(width, 10), /px/.test(width)],
	      value = _ref[0],
	      px = _ref[1];
	
	  return px ? value : Math.round(parent.offsetWidth * value / 100);
	};
	
	var CollapseMode = function () {
	  createClass(CollapseMode, [{
	    key: '_animator',
	    get: function get() {
	      return this._element._animator;
	    }
	  }]);
	
	  function CollapseMode(element) {
	    classCallCheck(this, CollapseMode);
	
	    this._active = false;
	    this._state = CLOSED_STATE;
	    this._element = element;
	    this._lock = new DoorLock();
	  }
	
	  createClass(CollapseMode, [{
	    key: 'isOpen',
	    value: function isOpen() {
	      return this._active && this._state !== CLOSED_STATE;
	    }
	  }, {
	    key: 'handleGesture',
	    value: function handleGesture(e) {
	      if (!this._active || this._lock.isLocked() || this._isOpenOtherSideMenu()) {
	        return;
	      }
	      if (e.type === 'dragstart') {
	        this._onDragStart(e);
	      } else if (!this._ignoreDrag) {
	        e.type === 'dragend' ? this._onDragEnd(e) : this._onDrag(e);
	      }
	    }
	  }, {
	    key: '_onDragStart',
	    value: function _onDragStart(event) {
	      var scrolling = !/left|right/.test(event.gesture.direction);
	      var distance = this._element._side === 'left' ? event.gesture.center.clientX : window.innerWidth - event.gesture.center.clientX;
	      var area = this._element._swipeTargetWidth;
	      var isOpen = this.isOpen();
	      this._ignoreDrag = scrolling || area && distance > area && !isOpen;
	
	      this._width = widthToPx(this._element._width, this._element.parentNode);
	      this._startDistance = this._distance = isOpen ? this._width : 0;
	    }
	  }, {
	    key: '_onDrag',
	    value: function _onDrag(event) {
	      event.gesture.preventDefault();
	      var delta = this._element._side === 'left' ? event.gesture.deltaX : -event.gesture.deltaX;
	      var distance = Math.max(0, Math.min(this._width, this._startDistance + delta));
	      if (distance !== this._distance) {
	        this._animator.translate(distance);
	        this._distance = distance;
	        this._state = CHANGING_STATE;
	      }
	    }
	  }, {
	    key: '_onDragEnd',
	    value: function _onDragEnd(event) {
	      var distance = this._distance,
	          width = this._width,
	          el = this._element;
	
	      var direction = event.gesture.interimDirection;
	      var shouldOpen = el._side !== direction && distance > width * el._threshold;
	      this.executeAction(shouldOpen ? 'open' : 'close');
	      this._ignoreDrag = true;
	    }
	  }, {
	    key: 'layout',
	    value: function layout() {
	      if (this._active && this._state === OPEN_STATE) {
	        this._animator.open();
	      }
	    }
	
	    // enter collapse mode
	
	  }, {
	    key: 'enterMode',
	    value: function enterMode() {
	      if (!this._active) {
	        this._active = true;
	        this._animator && this._animator.activate(this._element);
	        this.layout();
	      }
	    }
	
	    // exit collapse mode
	
	  }, {
	    key: 'exitMode',
	    value: function exitMode() {
	      this._animator && this._animator.deactivate();
	      this._state = CLOSED_STATE;
	      this._active = false;
	    }
	  }, {
	    key: '_isOpenOtherSideMenu',
	    value: function _isOpenOtherSideMenu() {
	      var _this = this;
	
	      return util.arrayFrom(this._element.parentElement.children).some(function (e) {
	        return util.match(e, 'ons-splitter-side') && e !== _this._element && e.isOpen;
	      });
	    }
	
	    /**
	     * @param {String} name - 'open' or 'close'
	     * @param {Object} [options]
	     * @param {Function} [options.callback]
	     * @param {Boolean} [options.withoutAnimation]
	     * @return {Promise} Resolves to the splitter side element or false if not in collapse mode
	     */
	
	  }, {
	    key: 'executeAction',
	    value: function executeAction(name) {
	      var _this2 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var FINAL_STATE = name === 'open' ? OPEN_STATE : CLOSED_STATE;
	
	      if (!this._active) {
	        return Promise.resolve(false);
	      }
	
	      if (this._state === FINAL_STATE) {
	        return Promise.resolve(this._element);
	      }
	      if (this._lock.isLocked()) {
	        return Promise.reject('Splitter side is locked.');
	      }
	      if (name === 'open' && this._isOpenOtherSideMenu()) {
	        return Promise.reject('Another menu is already open.');
	      }
	      if (this._element._emitEvent('pre' + name)) {
	        return Promise.reject('Canceled in pre' + name + ' event.');
	      }
	
	      var callback = options.callback;
	      var unlock = this._lock.lock();
	      var done = function done() {
	        _this2._state = FINAL_STATE;
	        _this2.layout();
	        unlock();
	        _this2._element._emitEvent('post' + name);
	        callback && callback();
	      };
	
	      if (options.withoutAnimation) {
	        done();
	        return Promise.resolve(this._element);
	      }
	      this._state = CHANGING_STATE;
	      return new Promise(function (resolve) {
	        _this2._animator[name](function () {
	          done();
	          resolve(_this2._element);
	        });
	      });
	    }
	  }]);
	  return CollapseMode;
	}();
	
	/**
	 * @element ons-splitter-side
	 * @category menu
	 * @description
	 *  [en]
	 *    The `<ons-splitter-side>` element is used as a child element of `<ons-splitter>`.
	 *
	 *    It will be displayed on either the left or right side of the `<ons-splitter-content>` element.
	 *
	 *    It supports two modes: collapsed and split. When it's in collapsed mode it will be hidden from view and can be displayed when the user swipes the screen or taps a button. In split mode the element is always shown. It can be configured to automatically switch between the two modes depending on the screen size.
	 *  [/en]
	 *  [ja]ons-splitter-side要素は、ons-splitter要素の子要素として利用します。[/ja]
	 * @codepen rOQOML
	 * @tutorial vanilla/Reference/splitter
	 * @guide multiple-page-navigation
	 *  [en]Managing multiple pages.[/en]
	 *  [ja]Managing multiple pages[/ja]
	 * @seealso ons-splitter
	 *  [en]The `<ons-splitter>` is the parent component.[/en]
	 *  [ja]ons-splitterコンポーネント[/ja]
	 * @seealso ons-splitter-content
	 *  [en]The `<ons-splitter-content>` component contains the main content of the page.[/en]
	 *  [ja]ons-splitter-contentコンポーネント[/ja]
	 * @example
	 * <ons-splitter>
	 *   <ons-splitter-content>
	 *     ...
	 *   </ons-splitter-content>
	 *
	 *   <ons-splitter-side side="left" width="80%" collapse>
	 *     ...
	 *   </ons-splitter-side>
	 * </ons-splitter>
	 */
	
	
	var SplitterSideElement = function (_BaseElement) {
	  inherits(SplitterSideElement, _BaseElement);
	
	  function SplitterSideElement() {
	    classCallCheck(this, SplitterSideElement);
	    return possibleConstructorReturn(this, (SplitterSideElement.__proto__ || Object.getPrototypeOf(SplitterSideElement)).apply(this, arguments));
	  }
	
	  createClass(SplitterSideElement, [{
	    key: 'init',
	
	
	    /**
	     * @event modechange
	     * @description
	     *   [en]Fired just after the component's mode changes.[/en]
	     *   [ja]この要素のモードが変化した際に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Object} event.side
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {String} event.mode
	     *   [en]Returns the current mode. Can be either `"collapse"` or `"split"`.[/en]
	     *   [ja]現在のモードを返します。[/ja]
	     */
	
	    /**
	     * @event preopen
	     * @description
	     *   [en]Fired just before the sliding menu is opened.[/en]
	     *   [ja]スライディングメニューが開く前に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Call to cancel opening sliding menu.[/en]
	     *   [ja]スライディングメニューが開くのをキャンセルします。[/ja]
	     * @param {Object} event.side
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     */
	
	    /**
	     * @event postopen
	     * @description
	     *   [en]Fired just after the sliding menu is opened.[/en]
	     *   [ja]スライディングメニューが開いた後に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Object} event.side
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     */
	
	    /**
	     * @event preclose
	     * @description
	     *   [en]Fired just before the sliding menu is closed.[/en]
	     *   [ja]スライディングメニューが閉じる前に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Object} event.side
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Call to cancel opening sliding-menu.[/en]
	     *   [ja]スライディングメニューが閉じるのをキャンセルします。[/ja]
	     */
	
	    /**
	     * @event postclose
	     * @description
	     *   [en]Fired just after the sliding menu is closed.[/en]
	     *   [ja]スライディングメニューが閉じた後に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクトです。[/ja]
	     * @param {Object} event.side
	     *   [en]Component object.[/en]
	     *   [ja]コンポーネントのオブジェクト。[/ja]
	     */
	
	    /**
	     * @attribute animation
	     * @type {String}
	     * @default  default
	     * @description
	     *  [en]Specify the animation. Use one of `overlay`, `push`, `reveal` or  `default`.[/en]
	     *  [ja]アニメーションを指定します。"overlay", "push", "reveal", "default"のいずれかを指定できます。[/ja]
	     */
	
	    /**
	     * @attribute animation-options
	     * @type {Expression}
	     * @description
	     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]
	     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]
	     */
	
	    /**
	     * @attribute open-threshold
	     * @type {Number}
	     * @default  0.3
	     * @description
	     *  [en]Specify how much the menu needs to be swiped before opening. A value between `0` and `1`.[/en]
	     *  [ja]どのくらいスワイプすればスライディングメニューを開くかどうかの割合を指定します。0から1の間の数値を指定します。スワイプの距離がここで指定した数値掛けるこの要素の幅よりも大きければ、スワイプが終わった時にこの要素を開きます。デフォルトは0.3です。[/ja]
	     */
	
	    /**
	     * @attribute collapse
	     * @type {String}
	     * @description
	     *   [en]
	     *     Specify the collapse behavior. Valid values are `"portrait"`, `"landscape"` or a media query.
	     *     The strings `"portrait"` and `"landscape"` means the view will collapse when device is in landscape or portrait orientation.
	     *     If the value is a media query, the view will collapse when the media query resolves to `true`.
	     *     If the value is not defined, the view always be in `"collapse"` mode.
	     *   [/en]
	     *   [ja]
	     *     左側のページを非表示にする条件を指定します。portrait, landscape、width #pxもしくはメディアクエリの指定が可能です。
	     *     portraitもしくはlandscapeを指定すると、デバイスの画面が縦向きもしくは横向きになった時に適用されます。
	     *     メディアクエリを指定すると、指定したクエリに適合している場合に適用されます。
	     *     値に何も指定しない場合には、常にcollapseモードになります。
	     *   [/ja]
	     */
	
	    /**
	     * @attribute swipe-target-width
	     * @type {String}
	     * @description
	     *   [en]The width of swipeable area calculated from the edge (in pixels). Use this to enable swipe only when the finger touch on the screen edge.[/en]
	     *   [ja]スワイプの判定領域をピクセル単位で指定します。画面の端から指定した距離に達するとページが表示されます。[/ja]
	     */
	
	    /**
	     * @attribute width
	     * @type {String}
	     * @description
	     *   [en]Can be specified in either pixels or as a percentage, e.g. `90%` or `200px`.[/en]
	     *   [ja]この要素の横幅を指定します。pxと%での指定が可能です。eg. 90%, 200px[/ja]
	     */
	
	    /**
	     * @attribute side
	     * @type {String}
	     * @default left
	     * @description
	     *   [en]Specify which side of the screen the `<ons-splitter-side>` element is located. Possible values are `"left"` and `"right"`.[/en]
	     *   [ja]この要素が左か右かを指定します。指定できる値は"left"か"right"のみです。[/ja]
	     */
	
	    /**
	     * @attribute mode
	     * @type {String}
	     * @description
	     *   [en]Current mode. Possible values are `"collapse"` or `"split"`. This attribute is read only.[/en]
	     *   [ja]現在のモードが設定されます。"collapse"もしくは"split"が指定されます。この属性は読み込み専用です。[/ja]
	     */
	
	    /**
	     * @attribute page
	     * @initonly
	     * @type {String}
	     * @description
	     *   [en]The URL of the menu page.[/en]
	     *   [ja]ons-splitter-side要素に表示するページのURLを指定します。[/ja]
	     */
	
	    /**
	     * @attribute swipeable
	     * @type {Boolean}
	     * @description
	     *   [en]Whether to enable swipe interaction on collapse mode.[/en]
	     *   [ja]collapseモード時にスワイプ操作を有効にする場合に指定します。[/ja]
	     */
	
	    value: function init() {
	      var _this4 = this;
	
	      this._page = null;
	      this._pageLoader = defaultPageLoader;
	      this._collapseMode = new CollapseMode(this);
	      this._collapseDetection = new CollapseDetection(this);
	
	      this._animatorFactory = new AnimatorFactory({
	        animators: SplitterElement.animators,
	        baseClass: SplitterAnimator$1,
	        baseClassName: 'SplitterAnimator',
	        defaultAnimation: this.getAttribute('animation')
	      });
	      this._boundHandleGesture = function (e) {
	        return _this4._collapseMode.handleGesture(e);
	      };
	      this._watchedAttributes = WATCHED_ATTRIBUTES;
	      contentReady(this, function () {
	        rewritables$2.ready(_this4, function () {
	          var page = _this4._getPageTarget();
	
	          if (page) {
	            _this4.load(page);
	          }
	        });
	      });
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this5 = this;
	
	      if (!util.match(this.parentNode, 'ons-splitter')) {
	        throw new Error('Parent must be an ons-splitter element.');
	      }
	
	      this._gestureDetector = new GestureDetector(this.parentElement, { dragMinDistance: 1 });
	
	      contentReady(this, function () {
	        _this5._watchedAttributes.forEach(function (e) {
	          return _this5._update(e);
	        });
	      });
	
	      if (!this.hasAttribute('side')) {
	        this.setAttribute('side', 'left');
	      }
	    }
	  }, {
	    key: '_getPageTarget',
	    value: function _getPageTarget() {
	      return this._page || this.getAttribute('page');
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this._collapseDetection.disable();
	      this._gestureDetector.dispose();
	      this._gestureDetector = null;
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      this._update(name, current);
	    }
	  }, {
	    key: '_update',
	    value: function _update(name, value) {
	      name = '_update' + name.split('-').map(function (e) {
	        return e[0].toUpperCase() + e.slice(1);
	      }).join('');
	      return this[name](value);
	    }
	  }, {
	    key: '_emitEvent',
	    value: function _emitEvent(name) {
	      if (name.slice(0, 3) !== 'pre') {
	        return util.triggerElementEvent(this, name, { side: this });
	      }
	      var isCanceled = false;
	
	      util.triggerElementEvent(this, name, {
	        side: this,
	        cancel: function cancel() {
	          return isCanceled = true;
	        }
	      });
	
	      return isCanceled;
	    }
	  }, {
	    key: '_updateCollapse',
	    value: function _updateCollapse() {
	      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('collapse');
	
	      if (value === null || value === 'split') {
	        this._collapseDetection.disable();
	        return this._updateMode(SPLIT_MODE);
	      }
	      if (value === '' || value === 'collapse') {
	        this._collapseDetection.disable();
	        return this._updateMode(COLLAPSE_MODE);
	      }
	
	      this._collapseDetection.changeTarget(value);
	    }
	
	    // readonly attribute for the users
	
	  }, {
	    key: '_updateMode',
	    value: function _updateMode(mode) {
	      if (mode !== this._mode) {
	        this._mode = mode;
	        this._collapseMode[mode === COLLAPSE_MODE ? 'enterMode' : 'exitMode']();
	        this.setAttribute('mode', mode);
	
	        util.triggerElementEvent(this, 'modechange', { side: this, mode: mode });
	      }
	    }
	  }, {
	    key: '_updateOpenThreshold',
	    value: function _updateOpenThreshold() {
	      var threshold = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('open-threshold');
	
	      this._threshold = Math.max(0, Math.min(1, parseFloat(threshold) || 0.3));
	    }
	  }, {
	    key: '_updateSwipeable',
	    value: function _updateSwipeable() {
	      var swipeable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('swipeable');
	
	      var action = swipeable === null ? 'off' : 'on';
	
	      if (this._gestureDetector) {
	        this._gestureDetector[action]('dragstart dragleft dragright dragend', this._boundHandleGesture);
	      }
	    }
	  }, {
	    key: '_updateSwipeTargetWidth',
	    value: function _updateSwipeTargetWidth() {
	      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('swipe-target-width');
	
	      this._swipeTargetWidth = Math.max(0, parseInt(value) || 0);
	    }
	  }, {
	    key: '_updateWidth',
	    value: function _updateWidth() {
	      this.style.width = this._width;
	    }
	  }, {
	    key: '_updateSide',
	    value: function _updateSide() {
	      var side = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('side');
	
	      this._side = side === 'right' ? side : 'left';
	    }
	  }, {
	    key: '_updateAnimation',
	    value: function _updateAnimation() {
	      var animation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('animation');
	
	      this._animator && this._animator.deactivate();
	      this._animator = this._animatorFactory.newAnimator({ animation: animation });
	      this._animator.activate(this);
	    }
	  }, {
	    key: '_updateAnimationOptions',
	    value: function _updateAnimationOptions() {
	      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('animation-options');
	
	      this._animator.updateOptions(AnimatorFactory.parseAnimationOptionsString(value));
	    }
	
	    /**
	     * @property page
	     * @type {*}
	     * @description
	     *   [en]Page location to load in the splitter side.[/en]
	     *   [ja]この要素内に表示するページを指定します。[/ja]
	     */
	
	  }, {
	    key: 'open',
	
	
	    /**
	     * @method open
	     * @signature open([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {Function} [options.callback]
	     *   [en]This function will be called after the menu has been opened.[/en]
	     *   [ja]メニューが開いた後に呼び出される関数オブジェクトを指定します。[/ja]
	     * @description
	     *   [en]Open menu in collapse mode.[/en]
	     *   [ja]collapseモードになっているons-splitter-side要素を開きます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]
	     *   [ja][/ja]
	     */
	    value: function open() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      return this._collapseMode.executeAction('open', options);
	    }
	
	    /**
	     * @method close
	     * @signature close([options])
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {Function} [options.callback]
	     *   [en]This function will be called after the menu has been closed.[/en]
	     *   [ja]メニューが閉じた後に呼び出される関数オブジェクトを指定します。[/ja]
	     * @description
	     *   [en]Close menu in collapse mode.[/en]
	     *   [ja]collapseモードになっているons-splitter-side要素を閉じます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'close',
	    value: function close() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      return this._collapseMode.executeAction('close', options);
	    }
	
	    /**
	     * @method toggle
	     * @signature toggle([options])
	     * @param {Object} [options]
	     * @description
	     *   [en]Opens if it's closed. Closes if it's open.[/en]
	     *   [ja]開けている場合は要素を閉じますそして開けている場合は要素を開きます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'toggle',
	    value: function toggle() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	      return this.isOpen ? this.close(options) : this.open(options);
	    }
	
	    /**
	     * @method load
	     * @signature load(page, [options])
	     * @param {String} page
	     *   [en]Page URL. Can be either an HTML document or an <ons-template>.[/en]
	     *   [ja]pageのURLか、ons-templateで宣言したテンプレートのid属性の値を指定します。[/ja]
	     * @param {Object} [options]
	     * @param {Function} [options.callback]
	     * @description
	     *   [en]Show the page specified in pageUrl in the right section[/en]
	     *   [ja]指定したURLをメインページを読み込みます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the new page element[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'load',
	    value: function load(page) {
	      var _this6 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      this._page = page;
	      var callback = options.callback || function () {};
	
	      return new Promise(function (resolve) {
	        var oldContent = _this6._content || null;
	
	        _this6._pageLoader.load({ page: page, parent: _this6 }, function (pageElement) {
	          if (oldContent) {
	            _this6._pageLoader.unload(oldContent);
	            oldContent = null;
	          }
	
	          setImmediate(function () {
	            return _this6._show();
	          });
	
	          callback(pageElement);
	          resolve(pageElement);
	        });
	      });
	    }
	  }, {
	    key: '_show',
	    value: function _show() {
	      if (this._content) {
	        this._content._show();
	      }
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      if (this._content) {
	        this._content._hide();
	      }
	    }
	  }, {
	    key: '_destroy',
	    value: function _destroy() {
	      if (this._content) {
	        this._pageLoader.unload(this._content);
	      }
	      this.remove();
	    }
	  }, {
	    key: 'side',
	    get: function get() {
	      return this.getAttribute('side') === 'right' ? 'right' : 'left';
	    }
	  }, {
	    key: '_width',
	    get: function get() {
	      var width = this.getAttribute('width');
	      return (/^\d+(px|%)$/.test(width) ? width : '80%'
	      );
	    },
	    set: function set(value) {
	      this.setAttribute('width', value);
	    }
	  }, {
	    key: 'page',
	    get: function get() {
	      return this._page;
	    }
	
	    /**
	     * @param {*} page
	     */
	    ,
	    set: function set(page) {
	      this._page = page;
	    }
	  }, {
	    key: '_content',
	    get: function get() {
	      return this.children[0];
	    }
	
	    /**
	     * @property pageLoader
	     * @description
	     *   [en][/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'pageLoader',
	    get: function get() {
	      return this._pageLoader;
	    },
	    set: function set(loader) {
	      if (!(loader instanceof PageLoader)) {
	        throw Error('First parameter must be an instance of PageLoader.');
	      }
	      this._pageLoader = loader;
	    }
	
	    /**
	     * @property mode
	     * @readonly
	     * @type {String}
	     * @description
	     *   [en]Current mode. Possible values are "split", "collapse", "closed", "open" or "changing".[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'mode',
	    get: function get() {
	      return this._mode;
	    }
	
	    /**
	     * @property isOpen
	     * @type {Boolean}
	     * @readonly
	     * @description
	     *   [en]This value is `true` when the menu is open..[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'isOpen',
	    get: function get() {
	      return this._collapseMode.isOpen();
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return WATCHED_ATTRIBUTES;
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['preopen', 'postopen', 'preclose', 'postclose', 'modechange'];
	    }
	  }, {
	    key: 'rewritables',
	    get: function get() {
	      return rewritables$2;
	    }
	  }]);
	  return SplitterSideElement;
	}(BaseElement);
	
	customElements.define('ons-splitter-side', SplitterSideElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$15 = 'switch';
	
	var scheme$21 = {
	  '': 'switch--*',
	  '.switch__input': 'switch--*__input',
	  '.switch__handle': 'switch--*__handle',
	  '.switch__toggle': 'switch--*__toggle'
	};
	
	var template$2 = util.createFragment('\n  <input type="checkbox" class="switch__input">\n  <div class="switch__toggle">\n    <div class="switch__handle">\n      <div class="switch__touch"></div>\n    </div>\n  </div>\n');
	
	var locations = {
	  ios: [1, 21],
	  material: [0, 16]
	};
	
	/**
	 * @element ons-switch
	 * @category form
	 * @description
	 *   [en]
	 *     Switch component. The switch can be toggled both by dragging and tapping.
	 *
	 *     Will automatically displays a Material Design switch on Android devices.
	 *   [/en]
	 *   [ja]スイッチを表示するコンポーネントです。[/ja]
	 * @modifier material
	 *   [en]Material Design switch[/en]
	 *   [ja][/ja]
	 * @codepen LpXZQQ
	 * @tutorial vanilla/Reference/switch
	 * @guide adding-page-content
	 *   [en]Using form components[/en]
	 *   [ja]フォームを使う[/ja]
	 * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]
	 * @example
	 * <ons-switch checked></ons-switch>
	 * <ons-switch disabled></ons-switch>
	 * <ons-switch modifier="material"></ons-switch>
	 */
	
	var SwitchElement = function (_BaseElement) {
	  inherits(SwitchElement, _BaseElement);
	
	  function SwitchElement() {
	    classCallCheck(this, SwitchElement);
	    return possibleConstructorReturn(this, (SwitchElement.__proto__ || Object.getPrototypeOf(SwitchElement)).apply(this, arguments));
	  }
	
	  createClass(SwitchElement, [{
	    key: 'init',
	    value: function init() {
	      var _this2 = this;
	
	      this._checked = false;
	      this._disabled = false;
	
	      this._boundOnChange = this._onChange.bind(this);
	
	      contentReady(this, function () {
	        _this2._compile();
	        ['checked', 'disabled', 'modifier', 'name', 'value', 'input-id'].forEach(function (e) {
	          _this2.attributeChangedCallback(e, null, _this2.getAttribute(e));
	        });
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      this.classList.add(defaultClassName$15);
	
	      if (!(util.findChild(this, '.switch__input') && util.findChild(this, '.switch__toggle'))) {
	        this.appendChild(template$2.cloneNode(true));
	      }
	
	      ModifierUtil.initModifier(this, scheme$21);
	
	      this._checkbox = this.querySelector('.switch__input');
	      this._handle = this.querySelector('.switch__handle');
	
	      this._checkbox.checked = this._checked;
	      this._checkbox.disabled = this._disabled;
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      var _this3 = this;
	
	      contentReady(this, function () {
	        _this3._checkbox.removeEventListener('change', _this3._boundOnChange);
	        _this3.removeEventListener('dragstart', _this3._onDragStart);
	        _this3.removeEventListener('hold', _this3._onHold);
	        _this3.removeEventListener('tap', _this3.click);
	        _this3.removeEventListener('click', _this3._onClick);
	        if (_this3._gestureDetector) {
	          _this3._gestureDetector.dispose();
	        }
	      });
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this4 = this;
	
	      contentReady(this, function () {
	        _this4._checkbox.addEventListener('change', _this4._boundOnChange);
	        _this4.addEventListener('dragstart', _this4._onDragStart);
	        _this4.addEventListener('hold', _this4._onHold);
	        _this4.addEventListener('tap', _this4.click);
	        _this4.addEventListener('click', _this4._onClick);
	        _this4._gestureDetector = new GestureDetector(_this4, { dragMinDistance: 1, holdTimeout: 251 });
	        _this4._boundOnRelease = _this4._onRelease.bind(_this4);
	      });
	    }
	  }, {
	    key: '_onChange',
	    value: function _onChange(event) {
	      if (event && event.stopPropagation) {
	        event.stopPropagation();
	      }
	      this.click();
	    }
	  }, {
	    key: '_onClick',
	    value: function _onClick(ev) {
	      if (ev.target.classList.contains('switch__touch')) {
	        ev.preventDefault();
	      }
	    }
	  }, {
	    key: 'click',
	    value: function click() {
	      if (!this._disabled) {
	        this.checked = !this.checked;
	
	        util.triggerElementEvent(this, 'change', {
	          value: this.checked,
	          switch: this,
	          isInteractive: true
	        });
	      }
	    }
	  }, {
	    key: '_getPosition',
	    value: function _getPosition(e) {
	      var l = this._locations;
	      return Math.min(l[1], Math.max(l[0], this._startX + e.gesture.deltaX));
	    }
	  }, {
	    key: '_onHold',
	    value: function _onHold(e) {
	      if (!this.disabled) {
	        ModifierUtil.addModifier(this, 'active');
	        document.addEventListener('release', this._boundOnRelease);
	      }
	    }
	  }, {
	    key: '_onDragStart',
	    value: function _onDragStart(e) {
	      if (this.disabled || ['left', 'right'].indexOf(e.gesture.direction) === -1) {
	        ModifierUtil.removeModifier(this, 'active');
	        return;
	      }
	
	      e.stopPropagation();
	
	      ModifierUtil.addModifier(this, 'active');
	      this._startX = this._locations[this.checked ? 1 : 0]; // - e.gesture.deltaX;
	
	      this.addEventListener('drag', this._onDrag);
	      document.addEventListener('release', this._boundOnRelease);
	    }
	  }, {
	    key: '_onDrag',
	    value: function _onDrag(e) {
	      e.gesture.srcEvent.preventDefault();
	      this._handle.style.left = this._getPosition(e) + 'px';
	    }
	  }, {
	    key: '_onRelease',
	    value: function _onRelease(e) {
	      var l = this._locations;
	      var position = this._getPosition(e);
	      var previousValue = this.checked;
	
	      this.checked = position >= (l[0] + l[1]) / 2;
	
	      if (this.checked !== previousValue) {
	        util.triggerElementEvent(this, 'change', {
	          value: this.checked,
	          switch: this,
	          isInteractive: true
	        });
	      }
	
	      this.removeEventListener('drag', this._onDrag);
	      document.removeEventListener('release', this._boundOnRelease);
	
	      this._handle.style.left = '';
	      ModifierUtil.removeModifier(this, 'active');
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      var _this5 = this;
	
	      contentReady(this, function () {
	        switch (name) {
	          case 'class':
	            if (!_this5.classList.contains(defaultClassName$15)) {
	              _this5.className = defaultClassName$15 + ' ' + current;
	            }
	            break;
	
	          case 'modifier':
	            _this5._isMaterial = (current || '').indexOf('material') !== -1;
	            _this5._locations = locations[_this5._isMaterial ? 'material' : 'ios'];
	            ModifierUtil.onModifierChanged(last, current, _this5, scheme$21);
	            break;
	
	          case 'input-id':
	            _this5._checkbox.id = current;
	            break;
	
	          case 'checked':
	            _this5._checked = current !== null;
	            _this5._checkbox.checked = current !== null;
	            util.toggleAttribute(_this5._checkbox, name, current !== null);
	            break;
	
	          case 'disabled':
	            _this5._disabled = current !== null;
	            _this5._checkbox.disabled = current !== null;
	            util.toggleAttribute(_this5._checkbox, name, current !== null);
	            break;
	
	          default:
	            if (current !== null) {
	              _this5._checkbox.setAttribute(name, current);
	            } else {
	              _this5._checkbox.removeAttribute(name);
	            }
	        }
	      });
	    }
	  }, {
	    key: 'checked',
	
	
	    /**
	     * @event change
	     * @description
	     *   [en]Fired when the switch is toggled.[/en]
	     *   [ja]ON/OFFが変わった時に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクト。[/ja]
	     * @param {Object} event.switch
	     *   [en]Switch object.[/en]
	     *   [ja]イベントが発火したSwitchオブジェクトを返します。[/ja]
	     * @param {Boolean} event.value
	     *   [en]Current value.[/en]
	     *   [ja]現在の値を返します。[/ja]
	     * @param {Boolean} event.isInteractive
	     *   [en]True if the change was triggered by the user clicking on the switch.[/en]
	     *   [ja]タップやクリックなどのユーザの操作によって変わった場合にはtrueを返します。[/ja]
	     */
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *  [en]The appearance of the switch.[/en]
	     *  [ja]スイッチの表現を指定します。[/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *   [en]Whether the switch is be disabled.[/en]
	     *   [ja]スイッチを無効の状態にする場合に指定します。[/ja]
	     */
	
	    /**
	     * @attribute checked
	     * @description
	     *   [en]Whether the switch is checked.[/en]
	     *   [ja]スイッチがONの状態にするときに指定します。[/ja]
	     */
	
	    /**
	     * @attribute input-id
	     * @type {String}
	     * @description
	     *   [en]Specify the `id` attribute of the inner `<input>` element. This is useful when using `<label for="...">` elements.[/en]
	     *   [ja][/ja]
	     */
	
	    /**
	     * @property checked
	     * @type {Boolean}
	     * @description
	     *   [en]This value is `true` if the switch is checked.[/en]
	     *   [ja]スイッチがONの場合に`true`。[/ja]
	     */
	
	    get: function get() {
	      return this._checked;
	    },
	    set: function set(value) {
	      this._checked = !!value;
	      util.toggleAttribute(this, 'checked', this._checked);
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'disabled',
	    get: function get() {
	      return this._disabled;
	    },
	    set: function set(value) {
	      var _this6 = this;
	
	      contentReady(this, function () {
	        _this6._disabled = !!value;
	        util.toggleAttribute(_this6, 'disabled', _this6._disabled);
	        _this6._checkbox.disabled = _this6._disabled;
	      });
	    }
	
	    /**
	     * @property checkbox
	     * @readonly
	     * @type {HTMLElement}
	     * @description
	     *   [en]The underlying checkbox element.[/en]
	     *   [ja]コンポーネント内部のcheckbox要素になります。[/ja]
	     */
	
	  }, {
	    key: 'checkbox',
	    get: function get() {
	      return this._checkbox;
	    }
	  }, {
	    key: 'value',
	
	
	    /**
	     * @property value
	     * @type {String}
	     * @description
	     *   [en]The current value of the input.[/en]
	     *   [ja][/ja]
	     */
	    get: function get() {
	      return !this.hasOwnProperty('_checkbox') ? this.getAttribute('value') : this._checkbox.value;
	    },
	    set: function set(val) {
	      var _this7 = this;
	
	      contentReady(this, function () {
	        _this7._checkbox.value = val;
	      });
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'input-id', 'checked', 'value', 'disabled', 'class'];
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['change'];
	    }
	  }]);
	  return SwitchElement;
	}(BaseElement);
	
	customElements.define('ons-switch', SwitchElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	var TabbarAnimator = function (_BaseAnimator) {
	  inherits(TabbarAnimator, _BaseAnimator);
	
	  /**
	   * @param {Object} options
	   * @param {String} options.timing
	   * @param {Number} options.duration
	   * @param {Number} options.delay
	   */
	  function TabbarAnimator() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$timing = _ref.timing,
	        timing = _ref$timing === undefined ? 'linear' : _ref$timing,
	        _ref$duration = _ref.duration,
	        duration = _ref$duration === undefined ? 0.4 : _ref$duration,
	        _ref$delay = _ref.delay,
	        delay = _ref$delay === undefined ? 0 : _ref$delay;
	
	    classCallCheck(this, TabbarAnimator);
	    return possibleConstructorReturn(this, (TabbarAnimator.__proto__ || Object.getPrototypeOf(TabbarAnimator)).call(this, { timing: timing, duration: duration, delay: delay }));
	  }
	
	  /**
	   * @param {Element} enterPage ons-page element
	   * @param {Element} leavePage ons-page element
	   * @param {Number} enterPageIndex
	   * @param {Number} leavePageIndex
	   * @param {Function} done
	   */
	
	
	  createClass(TabbarAnimator, [{
	    key: 'apply',
	    value: function apply(enterPage, leavePage, enterPageIndex, leavePageIndex, done) {
	      throw new Error('This method must be implemented.');
	    }
	  }]);
	  return TabbarAnimator;
	}(BaseAnimator);
	
	var TabbarNoneAnimator = function (_TabbarAnimator) {
	  inherits(TabbarNoneAnimator, _TabbarAnimator);
	
	  function TabbarNoneAnimator() {
	    classCallCheck(this, TabbarNoneAnimator);
	    return possibleConstructorReturn(this, (TabbarNoneAnimator.__proto__ || Object.getPrototypeOf(TabbarNoneAnimator)).apply(this, arguments));
	  }
	
	  createClass(TabbarNoneAnimator, [{
	    key: 'apply',
	    value: function apply(enterPage, leavePage, enterIndex, leaveIndex, done) {
	      setTimeout(done, 1000 / 60);
	    }
	  }]);
	  return TabbarNoneAnimator;
	}(TabbarAnimator);
	
	var TabbarFadeAnimator = function (_TabbarAnimator2) {
	  inherits(TabbarFadeAnimator, _TabbarAnimator2);
	
	  function TabbarFadeAnimator() {
	    classCallCheck(this, TabbarFadeAnimator);
	    return possibleConstructorReturn(this, (TabbarFadeAnimator.__proto__ || Object.getPrototypeOf(TabbarFadeAnimator)).apply(this, arguments));
	  }
	
	  createClass(TabbarFadeAnimator, [{
	    key: 'apply',
	    value: function apply(enterPage, leavePage, enterPageIndex, leavePageIndex, done) {
	      Animit.runAll(Animit(enterPage).saveStyle().queue({
	        transform: 'translate3D(0, 0, 0)',
	        opacity: 0
	      }).wait(this.delay).queue({
	        transform: 'translate3D(0, 0, 0)',
	        opacity: 1
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (callback) {
	        done();
	        callback();
	      }), Animit(leavePage).queue({
	        transform: 'translate3D(0, 0, 0)',
	        opacity: 1
	      }).wait(this.delay).queue({
	        transform: 'translate3D(0, 0, 0)',
	        opacity: 0
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }));
	    }
	  }]);
	  return TabbarFadeAnimator;
	}(TabbarAnimator);
	
	var TabbarSlideAnimator = function (_TabbarAnimator3) {
	  inherits(TabbarSlideAnimator, _TabbarAnimator3);
	
	  function TabbarSlideAnimator() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref2$timing = _ref2.timing,
	        timing = _ref2$timing === undefined ? 'ease-in' : _ref2$timing,
	        _ref2$duration = _ref2.duration,
	        duration = _ref2$duration === undefined ? 0.15 : _ref2$duration,
	        _ref2$delay = _ref2.delay,
	        delay = _ref2$delay === undefined ? 0 : _ref2$delay;
	
	    classCallCheck(this, TabbarSlideAnimator);
	    return possibleConstructorReturn(this, (TabbarSlideAnimator.__proto__ || Object.getPrototypeOf(TabbarSlideAnimator)).call(this, { timing: timing, duration: duration, delay: delay }));
	  }
	
	  /**
	   * @param {jqLite} enterPage
	   * @param {jqLite} leavePage
	   */
	
	
	  createClass(TabbarSlideAnimator, [{
	    key: 'apply',
	    value: function apply(enterPage, leavePage, enterIndex, leaveIndex, done) {
	      var sgn = enterIndex > leaveIndex;
	
	      Animit.runAll(Animit(enterPage).saveStyle().queue({
	        transform: 'translate3D(' + (sgn ? '' : '-') + '100%, 0, 0)'
	      }).wait(this.delay).queue({
	        transform: 'translate3D(0, 0, 0)'
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }).restoreStyle().queue(function (callback) {
	        done();
	        callback();
	      }), Animit(leavePage).queue({
	        transform: 'translate3D(0, 0, 0)'
	      }).wait(this.delay).queue({
	        transform: 'translate3D(' + (sgn ? '-' : '') + '100%, 0, 0)'
	      }, {
	        duration: this.duration,
	        timing: this.timing
	      }));
	    }
	  }]);
	  return TabbarSlideAnimator;
	}(TabbarAnimator);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var scheme$23 = {
	  '.tabbar__content': 'tabbar--*__content',
	  '.tabbar': 'tabbar--*'
	};
	
	var _animatorDict$6 = {
	  'default': TabbarNoneAnimator,
	  'fade': TabbarFadeAnimator,
	  'slide': TabbarSlideAnimator,
	  'none': TabbarNoneAnimator
	};
	
	var rewritables$3 = {
	  /**
	   * @param {Element} tabbarElement
	   * @param {Function} callback
	   */
	  ready: function ready(tabbarElement, callback) {
	    callback();
	  }
	};
	
	var generateId$1 = function () {
	  var i = 0;
	  return function () {
	    return 'ons-tabbar-gen-' + i++;
	  };
	}();
	
	/**
	 * @element ons-tabbar
	 * @category tabbar
	 * @description
	 *   [en]A component to display a tab bar on the bottom of a page. Used with `<ons-tab>` to manage pages using tabs.[/en]
	 *   [ja]タブバーをページ下部に表示するためのコンポーネントです。ons-tabと組み合わせて使うことで、ページを管理できます。[/ja]
	 * @codepen pGuDL
	 * @tutorial vanilla/Reference/tabbar
	 * @guide multiple-page-navigation
	 *  [en]Managing multiple pages.[/en]
	 *  [ja]Managing multiple pages[/ja]
	 * @guide templates
	 *   [en]Defining multiple pages in single html[/en]
	 *   [ja]複数のページを1つのHTMLに記述する[/ja]
	 * @seealso ons-tab
	 *   [en]The `<ons-tab>` component.[/en]
	 *   [ja]ons-tabコンポーネント[/ja]
	 * @seealso ons-page
	 *   [en]The `<ons-page>` component.[/en]
	 *   [ja]ons-pageコンポーネント[/ja]
	 * @example
	 * <ons-tabbar>
	 *   <ons-tab
	 *     page="home.html"
	 *     label="Home"
	 *     active>
	 *   </ons-tab>
	 *   <ons-tab
	 *     page="settings.html"
	 *     label="Settings"
	 *     active>
	 *   </ons-tab>
	 * </ons-tabbar>
	 *
	 * <ons-template id="home.html">
	 *   ...
	 * </ons-template>
	 *
	 * <ons-template id="settings.html">
	 *   ...
	 * </ons-template>
	 */
	
	var TabbarElement = function (_BaseElement) {
	  inherits(TabbarElement, _BaseElement);
	
	  function TabbarElement() {
	    classCallCheck(this, TabbarElement);
	    return possibleConstructorReturn(this, (TabbarElement.__proto__ || Object.getPrototypeOf(TabbarElement)).apply(this, arguments));
	  }
	
	  createClass(TabbarElement, [{
	    key: 'init',
	
	
	    /**
	     * @event prechange
	     * @description
	     *   [en]Fires just before the tab is changed.[/en]
	     *   [ja]アクティブなタブが変わる前に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクト。[/ja]
	     * @param {Number} event.index
	     *   [en]Current index.[/en]
	     *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]
	     * @param {Object} event.tabItem
	     *   [en]Tab item object.[/en]
	     *   [ja]tabItemオブジェクト。[/ja]
	     * @param {Function} event.cancel
	     *   [en]Call this function to cancel the change event.[/en]
	     *   [ja]この関数を呼び出すと、アクティブなタブの変更がキャンセルされます。[/ja]
	     */
	
	    /**
	     * @event postchange
	     * @description
	     *   [en]Fires just after the tab is changed.[/en]
	     *   [ja]アクティブなタブが変わった後に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクト。[/ja]
	     * @param {Number} event.index
	     *   [en]Current index.[/en]
	     *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]
	     * @param {Object} event.tabItem
	     *   [en]Tab item object.[/en]
	     *   [ja]tabItemオブジェクト。[/ja]
	     */
	
	    /**
	     * @event reactive
	     * @description
	     *   [en]Fires if the already open tab is tapped again.[/en]
	     *   [ja]すでにアクティブになっているタブがもう一度タップやクリックされた場合に発火します。[/ja]
	     * @param {Object} event
	     *   [en]Event object.[/en]
	     *   [ja]イベントオブジェクト。[/ja]
	     * @param {Number} event.index
	     *   [en]Current index.[/en]
	     *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]
	     * @param {Object} event.tabItem
	     *   [en]Tab item object.[/en]
	     *   [ja]tabItemオブジェクト。[/ja]
	     */
	
	    /**
	     * @attribute animation
	     * @type {String}
	     * @default none
	     * @description
	     *   [en]Animation name. Available values are `"none"`, `"slide"` and `"fade"`. Default is `"none"`.[/en]
	     *   [ja]ページ読み込み時のアニメーションを指定します。"none"、"fade"、"slide"のいずれかを選択できます。デフォルトは"none"です。[/ja]
	     */
	
	    /**
	     * @attribute animation-options
	     * @type {Expression}
	     * @description
	     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]
	     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]
	     */
	
	    /**
	     * @attribute position
	     * @initonly
	     * @type {String}
	     * @default bottom
	     * @description
	     *   [en]Tabbar's position. Available values are `"bottom"` and `"top"`. Use `"auto"` to choose position depending on platform (iOS bottom, Android top).[/en]
	     *   [ja]タブバーの位置を指定します。"bottom"もしくは"top"を選択できます。デフォルトは"bottom"です。[/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      this._tabbarId = generateId$1();
	
	      contentReady(this, function () {
	        _this2._compile();
	
	        var content = _this2._contentElement;
	        for (var i = 0; i < content.children.length; i++) {
	          content.children[i].style.display = 'none';
	        }
	
	        var activeIndex = _this2.getAttribute('activeIndex');
	
	        var tabbar = _this2._tabbarElement;
	        if (activeIndex && tabbar.children.length > activeIndex) {
	          tabbar.children[activeIndex].setAttribute('active', 'true');
	        }
	
	        autoStyle.prepare(_this2);
	        ModifierUtil.initModifier(_this2, scheme$23);
	
	        _this2._animatorFactory = new AnimatorFactory({
	          animators: _animatorDict$6,
	          baseClass: TabbarAnimator,
	          baseClassName: 'TabbarAnimator',
	          defaultAnimation: _this2.getAttribute('animation')
	        });
	      });
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this3 = this;
	
	      contentReady(this, function () {
	        return _this3._updatePosition();
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      if (this._contentElement && this._tabbarElement) {
	        var content = util.findChild(this, '.tabbar__content');
	        var bar = util.findChild(this, '.tabbar');
	
	        content.classList.add('ons-tabbar__content');
	        bar.classList.add('ons-tabbar__footer');
	      } else {
	
	        var _content = util.create('.ons-tabbar__content.tabbar__content');
	        var tabbar = util.create('.tabbar.ons-tabbar__footer');
	
	        while (this.firstChild) {
	          tabbar.appendChild(this.firstChild);
	        }
	
	        this.appendChild(_content);
	        this.appendChild(tabbar);
	      }
	    }
	  }, {
	    key: '_updatePosition',
	    value: function _updatePosition() {
	      var _this4 = this;
	
	      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('position');
	
	      var top = this._top = position === 'top' || position === 'auto' && platform.isAndroid();
	      var action = top ? util.addModifier : util.removeModifier;
	
	      action(this, 'top');
	
	      var page = util.findParent(this, 'ons-page');
	      if (page) {
	        contentReady(page, function () {
	          _this4.style.top = top ? window.getComputedStyle(page._getContentElement(), null).getPropertyValue('padding-top') : '';
	
	          if (util.match(page.firstChild, 'ons-toolbar')) {
	            action(page.firstChild, 'noshadow');
	          }
	        });
	      }
	
	      internal$1.autoStatusBarFill(function () {
	        var filled = util.findParent(_this4, function (e) {
	          return e.hasAttribute('status-bar-fill');
	        });
	        util.toggleAttribute(_this4, 'status-bar-fill', top && !filled);
	      });
	    }
	  }, {
	    key: '_getTabbarElement',
	    value: function _getTabbarElement() {
	      return util.findChild(this, '.tabbar');
	    }
	
	    /**
	     * @return {String}
	     */
	
	  }, {
	    key: 'getTabbarId',
	    value: function getTabbarId() {
	      return this._tabbarId;
	    }
	
	    /**
	     * @return {Element/null}
	     */
	
	  }, {
	    key: '_getCurrentPageElement',
	    value: function _getCurrentPageElement() {
	      var pages = this._contentElement.children;
	      var page = null;
	      for (var i = 0; i < pages.length; i++) {
	        if (pages[i].style.display !== 'none') {
	          page = pages[i];
	          break;
	        }
	      }
	
	      if (page && page.nodeName.toLowerCase() !== 'ons-page') {
	        throw new Error('Invalid state: page element must be a "ons-page" element.');
	      }
	
	      return page;
	    }
	  }, {
	    key: '_switchPage',
	
	
	    /**
	     * @param {Element} element
	     * @param {Object} options
	     * @param {String} [options.animation]
	     * @param {Function} [options.callback]
	     * @param {Object} [options.animationOptions]
	     * @param {Number} options.selectedTabIndex
	     * @param {Number} options.previousTabIndex
	     * @return {Promise} Resolves to the new page element.
	     */
	    value: function _switchPage(element, options) {
	      var oldPageElement = this._oldPageElement || internal$1.nullElement;
	      this._oldPageElement = element;
	      var animator = this._animatorFactory.newAnimator(options);
	
	      return new Promise(function (resolve) {
	        if (oldPageElement !== internal$1.nullElement) {
	          oldPageElement._hide();
	        }
	
	        animator.apply(element, oldPageElement, options.selectedTabIndex, options.previousTabIndex, function () {
	          if (oldPageElement !== internal$1.nullElement) {
	            oldPageElement.style.display = 'none';
	          }
	
	          element.style.display = 'block';
	          element._show();
	
	          if (options.callback instanceof Function) {
	            options.callback();
	          }
	
	          resolve(element);
	        });
	      });
	    }
	
	    /**
	     * @method setActiveTab
	     * @signature setActiveTab(index, [options])
	     * @param {Number} index
	     *   [en]Tab index.[/en]
	     *   [ja]タブのインデックスを指定します。[/ja]
	     * @param {Object} [options]
	     *   [en]Parameter object.[/en]
	     *   [ja]オプションを指定するオブジェクト。[/ja]
	     * @param {Boolean} [options.keepPage]
	     *   [en]If true the page will not be changed.[/en]
	     *   [ja]タブバーが現在表示しているpageを変えない場合にはtrueを指定します。[/ja]
	     * @param {String} [options.animation]
	     *   [en]Animation name. Available animations are `"fade"`, `"slide"` and `"none"`.[/en]
	     *   [ja]アニメーション名を指定します。`"fade"`、`"slide"`、`"none"`のいずれかを指定できます。[/ja]
	     * @param {String} [options.animationOptions]
	     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]
	     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]
	     * @description
	     *   [en]Show specified tab page. Animations and other options can be specified by the second parameter.[/en]
	     *   [ja]指定したインデックスのタブを表示します。アニメーションなどのオプションを指定できます。[/ja]
	     * @return {Promise}
	     *   [en]Resolves to the new page element.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'setActiveTab',
	    value: function setActiveTab(index) {
	      var _this5 = this;
	
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      if (options && (typeof options === 'undefined' ? 'undefined' : _typeof(options)) != 'object') {
	        throw new Error('options must be an object. You supplied ' + options);
	      }
	
	      options.animationOptions = util.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));
	
	      if (!options.animation && this.hasAttribute('animation')) {
	        options.animation = this.getAttribute('animation');
	      }
	
	      var previousTab = this._getActiveTabElement(),
	          selectedTab = this._getTabElement(index),
	          previousTabIndex = this.getActiveTabIndex(),
	          selectedTabIndex = index,
	          previousPageElement = this._getCurrentPageElement();
	
	      if (!selectedTab) {
	        return Promise.reject('Specified index does not match any tab.');
	      }
	
	      if (selectedTabIndex === previousTabIndex) {
	        util.triggerElementEvent(this, 'reactive', {
	          index: selectedTabIndex,
	          tabItem: selectedTab
	        });
	
	        return Promise.resolve(previousPageElement);
	      }
	
	      var canceled = false;
	
	      util.triggerElementEvent(this, 'prechange', {
	        index: selectedTabIndex,
	        tabItem: selectedTab,
	        cancel: function cancel() {
	          return canceled = true;
	        }
	      });
	
	      if (canceled) {
	        selectedTab.setInactive();
	        if (previousTab) {
	          previousTab.setActive();
	        }
	        return Promise.reject('Canceled in prechange event.');
	      }
	
	      selectedTab.setActive();
	
	      var params = _extends({}, options, {
	        previousTabIndex: previousTabIndex,
	        selectedTabIndex: selectedTabIndex
	      });
	
	      if (previousTab) {
	        previousTab.setInactive();
	      } else {
	        params.animation = 'none';
	      }
	
	      return new Promise(function (resolve) {
	        selectedTab._loadPageElement(_this5._contentElement, function (pageElement) {
	          pageElement.removeAttribute('style');
	
	          _this5._switchPage(pageElement, params).then(function (page) {
	            util.triggerElementEvent(_this5, 'postchange', {
	              index: selectedTabIndex,
	              tabItem: selectedTab
	            });
	
	            return resolve(page);
	          });
	        });
	      });
	    }
	
	    /**
	     * @method setTabbarVisibility
	     * @signature setTabbarVisibility(visible)
	     * @param {Boolean} visible
	     * @description
	     *   [en]Used to hide or show the tab bar.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'setTabbarVisibility',
	    value: function setTabbarVisibility(visible) {
	      this._contentElement.style[this._top ? 'top' : 'bottom'] = visible ? '' : '0px';
	      this._getTabbarElement().style.display = visible ? '' : 'none';
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this.setTabbarVisibility(true);
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this.setTabbarVisibility(false);
	    }
	
	    /**
	     * @property visible
	     * @readonly
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the tabbar is visible or not.[/en]
	     *   [ja]タブバーが見える場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'getActiveTabIndex',
	
	
	    /**
	     * @method getActiveTabIndex
	     * @signature getActiveTabIndex()
	     * @return {Number}
	     *   [en]The index of the currently active tab.[/en]
	     *   [ja]現在アクティブになっているタブのインデックスを返します。[/ja]
	     * @description
	     *   [en]Returns tab index on current active tab. If active tab is not found, returns -1.[/en]
	     *   [ja]現在アクティブになっているタブのインデックスを返します。現在アクティブなタブがない場合には-1を返します。[/ja]
	     */
	    value: function getActiveTabIndex() {
	      var tabs = this._getTabbarElement().children;
	
	      for (var i = 0; i < tabs.length; i++) {
	        if (tabs[i] instanceof TabElement && tabs[i].isActive && tabs[i].isActive()) {
	          return i;
	        }
	      }
	
	      return -1;
	    }
	
	    /**
	     * @return {Number} When active tab is not found, returns -1.
	     */
	
	  }, {
	    key: '_getActiveTabElement',
	    value: function _getActiveTabElement() {
	      return this._getTabElement(this.getActiveTabIndex());
	    }
	
	    /**
	     * @return {Element}
	     */
	
	  }, {
	    key: '_getTabElement',
	    value: function _getTabElement(index) {
	      return this._getTabbarElement().children[index];
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {}
	  }, {
	    key: '_show',
	    value: function _show() {
	      var currentPageElement = this._getCurrentPageElement();
	      if (currentPageElement) {
	        currentPageElement._show();
	      }
	    }
	  }, {
	    key: '_hide',
	    value: function _hide() {
	      var currentPageElement = this._getCurrentPageElement();
	      if (currentPageElement) {
	        currentPageElement._hide();
	      }
	    }
	  }, {
	    key: '_destroy',
	    value: function _destroy() {
	      var tabs = this._getTabbarElement().children;
	      for (var i = tabs.length - 1; i >= 0; i--) {
	        tabs[i].remove();
	      }
	      this.remove();
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      if (name === 'modifier') {
	        return ModifierUtil.onModifierChanged(last, current, this, scheme$23);
	      }
	    }
	  }, {
	    key: '_contentElement',
	    get: function get() {
	      return util.findChild(this, '.tabbar__content');
	    }
	  }, {
	    key: '_tabbarElement',
	    get: function get() {
	      return util.findChild(this, '.tabbar');
	    }
	  }, {
	    key: 'topPage',
	    get: function get() {
	      return this._getCurrentPageElement();
	    }
	  }, {
	    key: 'pages',
	    get: function get() {
	      return util.arrayFrom(this._contentElement.children);
	    }
	  }, {
	    key: 'visible',
	    get: function get() {
	      return this._getTabbarElement().style.display !== 'none';
	    }
	  }], [{
	    key: 'registerAnimator',
	
	
	    /**
	     * @param {String} name
	     * @param {Function} Animator
	     */
	    value: function registerAnimator(name, Animator) {
	      if (!(Animator.prototype instanceof TabbarAnimator)) {
	        throw new Error('"Animator" param must inherit TabbarElement.TabbarAnimator');
	      }
	      _animatorDict$6[name] = Animator;
	    }
	  }, {
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier'];
	    }
	  }, {
	    key: 'rewritables',
	    get: function get() {
	      return rewritables$3;
	    }
	  }, {
	    key: 'TabbarAnimator',
	    get: function get() {
	      return TabbarAnimator;
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['prechange', 'postchange', 'reactive'];
	    }
	  }, {
	    key: 'animators',
	    get: function get() {
	      return _animatorDict$6;
	    }
	  }]);
	  return TabbarElement;
	}(BaseElement);
	
	customElements.define('ons-tabbar', TabbarElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$16 = 'tabbar__item';
	
	var scheme$22 = {
	  '': 'tabbar--*__item',
	  '.tabbar__button': 'tabbar--*__button'
	};
	
	var templateSource$1 = util.createElement('\n  <div>\n    <input type="radio" style="display: none">\n    <button class="tabbar__button"></button>\n  </div>\n');
	
	var defaultInnerTemplateSource = util.createElement('\n  <div>\n    <div class="tabbar__icon">\n      <ons-icon icon="ion-cloud"></ons-icon>\n    </div>\n    <div class="tabbar__label">label</div>\n    <div class="tabbar__badge notification">1</div>\n  </div>\n');
	
	/**
	 * @element ons-tab
	 * @category tabbar
	 * @description
	 *   [en]Represents a tab inside tab bar. Each `<ons-tab>` represents a page.[/en]
	 *   [ja]
	 *     タブバーに配置される各アイテムのコンポーネントです。それぞれのons-tabはページを表します。
	 *     ons-tab要素の中には、タブに表示されるコンテンツを直接記述することが出来ます。
	 *   [/ja]
	 * @codepen pGuDL
	 * @tutorial vanilla/Reference/tabbar
	 * @guide multiple-page-navigation
	 *   [en]Managing multiple pages.[/en]
	 *   [ja]Managing multiple pages[/ja]]
	 * @guide templates
	 *   [en]Defining multiple pages in single html[/en]
	 *   [ja]複数のページを1つのHTMLに記述する[/ja]
	 * @seealso ons-tabbar
	 *   [en]ons-tabbar component[/en]
	 *   [ja]ons-tabbarコンポーネント[/ja]
	 * @seealso ons-page
	 *   [en]ons-page component[/en]
	 *   [ja]ons-pageコンポーネント[/ja]
	 * @seealso ons-icon
	 *   [en]ons-icon component[/en]
	 *   [ja]ons-iconコンポーネント[/ja]
	 * @example
	 * <ons-tabbar>
	 *   <ons-tab
	 *     page="home.html"
	 *     label="Home"
	 *     active>
	 *   </ons-tab>
	 *   <ons-tab
	 *     page="settings.html"
	 *     label="Settings"
	 *     active>
	 *   </ons-tab>
	 * </ons-tabbar>
	 *
	 * <ons-template id="home.html">
	 *   ...
	 * </ons-template>
	 *
	 * <ons-template id="settings.html">
	 *   ...
	 * </ons-template>
	
	 */
	
	var TabElement = function (_BaseElement) {
	  inherits(TabElement, _BaseElement);
	
	  function TabElement() {
	    classCallCheck(this, TabElement);
	    return possibleConstructorReturn(this, (TabElement.__proto__ || Object.getPrototypeOf(TabElement)).apply(this, arguments));
	  }
	
	  createClass(TabElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute page
	     * @initonly
	     * @type {String}
	     * @description
	     *   [en]The page that is displayed when the tab is tapped.[/en]
	     *   [ja]ons-tabが参照するページへのURLを指定します。[/ja]
	     */
	
	    /**
	     * @attribute icon
	     * @type {String}
	     * @description
	     *   [en]
	     *     The icon name for the tab. Can specify the same icon name as `<ons-icon>`.
	     *     If you need to use your own icon, create a CSS class with `background-image` or any CSS properties and specify the name of your CSS class here.
	     *   [/en]
	     *   [ja]
	     *     アイコン名を指定します。ons-iconと同じアイコン名を指定できます。
	     *     個別にアイコンをカスタマイズする場合は、background-imageなどのCSSスタイルを用いて指定できます。
	     *   [/ja]
	     */
	
	    /**
	     * @attribute active-icon
	     * @type {String}
	     * @description
	     *   [en]The name of the icon when the tab is active.[/en]
	     *   [ja]アクティブの際のアイコン名を指定します。[/ja]
	     */
	
	    /**
	     * @attribute label
	     * @type {String}
	     * @description
	     *   [en]The label of the tab item.[/en]
	     *   [ja]アイコン下に表示されるラベルを指定します。[/ja]
	     */
	
	    /**
	     * @attribute badge
	     * @type {String}
	     * @description
	     *   [en]Display a notification badge on top of the tab.[/en]
	     *   [ja]バッジに表示する内容を指定します。[/ja]
	     */
	
	    /**
	     * @attribute active
	     * @description
	     *   [en]This attribute should be set to the tab that is active by default.[/en]
	     *   [ja][/ja]
	     */
	
	    value: function init() {
	      var _this2 = this;
	
	      this._pageLoader = defaultPageLoader;
	      this._page = null;
	
	      if (this.hasAttribute('label') || this.hasAttribute('icon') || this.hasAttribute('badge')) {
	        this._compile();
	      } else {
	        contentReady(this, function () {
	          _this2._compile();
	        });
	      }
	
	      this._boundOnClick = this._onClick.bind(this);
	    }
	  }, {
	    key: '_getPageTarget',
	    value: function _getPageTarget() {
	      return this.page || this.getAttribute('page');
	    }
	  }, {
	    key: '_templateLoaded',
	    value: function _templateLoaded() {
	      if (this.children.length == 0) {
	        return false;
	      }
	
	      var hasInput = this._input.getAttribute('type') === 'radio';
	      var hasButton = this._button;
	
	      return !!(hasInput && hasButton);
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      this.classList.add(defaultClassName$16);
	
	      if (!this._templateLoaded()) {
	        var fragment = document.createDocumentFragment();
	        var hasChildren = false;
	
	        while (this.childNodes[0]) {
	          var node = this.childNodes[0];
	          this.removeChild(node);
	          fragment.appendChild(node);
	
	          if (node.nodeType == Node.ELEMENT_NODE) {
	            hasChildren = true;
	          }
	        }
	
	        var template = templateSource$1.cloneNode(true);
	        while (template.children[0]) {
	          this.appendChild(template.children[0]);
	        }
	
	        if (hasChildren) {
	          this._button.appendChild(fragment);
	          this._hasDefaultTemplate = false;
	        } else {
	          this._hasDefaultTemplate = true;
	          this._updateDefaultTemplate();
	        }
	      }
	
	      ModifierUtil.initModifier(this, scheme$22);
	      this._updateRipple();
	    }
	  }, {
	    key: '_updateRipple',
	    value: function _updateRipple() {
	      util.updateRipple(this.querySelector('.tabbar__button'), this.hasAttribute('ripple'));
	    }
	  }, {
	    key: '_updateDefaultTemplate',
	    value: function _updateDefaultTemplate() {
	      if (!this._hasDefaultTemplate) {
	        return;
	      }
	
	      var button = this._button;
	      var template = defaultInnerTemplateSource.cloneNode(true);
	      if (button.children.length === 0) {
	        while (template.children[0]) {
	          button.appendChild(template.children[0]);
	        }
	      }
	
	      if (!button.querySelector('.tabbar__icon')) {
	        button.insertBefore(template.querySelector('.tabbar__icon'), button.firstChild);
	      }
	
	      if (!button.querySelector('.tabbar__label')) {
	        button.appendChild(template.querySelector('.tabbar__label'));
	      }
	
	      if (!button.querySelector('.tabbar__badge')) {
	        button.appendChild(template.querySelector('.tabbar__badge'));
	      }
	
	      var icon = this.getAttribute('icon');
	      var label = this.getAttribute('label');
	      var badge = this.getAttribute('badge');
	
	      var iconElement = button.querySelector('.tabbar__icon').children[0];
	      var labelElement = button.querySelector('.tabbar__label');
	      var badgeElement = button.querySelector('.tabbar__badge');
	
	      if (iconElement) {
	        if (typeof icon === 'string') {
	          var last = iconElement.getAttribute('icon');
	          iconElement.setAttribute('icon', icon);
	          // dirty fix for https://github.com/OnsenUI/OnsenUI/issues/1654
	          iconElement.attributeChangedCallback('icon', last, icon);
	        } else {
	          iconElement.parentElement.remove();
	        }
	      }
	
	      if (labelElement) {
	        if (typeof label === 'string') {
	          labelElement.textContent = label;
	        } else {
	          labelElement.remove();
	        }
	      }
	
	      if (badgeElement) {
	        if (typeof badge === 'string') {
	          badgeElement.textContent = badge;
	        } else {
	          badgeElement.remove();
	        }
	      }
	    }
	  }, {
	    key: '_onClick',
	    value: function _onClick() {
	      if (this.onClick instanceof Function) {
	        this.onClick();
	      } else {
	        var tabbar = this._findTabbarElement();
	        if (tabbar) {
	          tabbar.setActiveTab(this._findTabIndex());
	        }
	      }
	    }
	  }, {
	    key: 'setActive',
	    value: function setActive() {
	      this._input.checked = true;
	      this.classList.add('active');
	      this.setAttribute('active', '');
	
	      if (this.hasAttribute('icon') && this.hasAttribute('active-icon')) {
	        var icon = this.getAttribute('active-icon');
	        var iconElement = this._button.querySelector('.tabbar__icon').children[0];
	        iconElement.setAttribute('icon', icon);
	      }
	
	      util.arrayFrom(this.querySelectorAll('[ons-tab-inactive], ons-tab-inactive')).forEach(function (element) {
	        return element.style.display = 'none';
	      });
	      util.arrayFrom(this.querySelectorAll('[ons-tab-active], ons-tab-active')).forEach(function (element) {
	        return element.style.display = 'inherit';
	      });
	    }
	  }, {
	    key: 'setInactive',
	    value: function setInactive() {
	      this._input.checked = false;
	      this.classList.remove('active');
	      this.removeAttribute('active');
	
	      if (this.hasAttribute('icon')) {
	        var icon = this.getAttribute('icon');
	        var iconElement = this._button.querySelector('.tabbar__icon').children[0];
	        iconElement.setAttribute('icon', icon);
	      }
	
	      util.arrayFrom(this.querySelectorAll('[ons-tab-inactive], ons-tab-inactive')).forEach(function (element) {
	        return element.style.display = 'inherit';
	      });
	      util.arrayFrom(this.querySelectorAll('[ons-tab-active], ons-tab-active')).forEach(function (element) {
	        return element.style.display = 'none';
	      });
	    }
	
	    /**
	     * @param {Element} parent
	     * @param {Function} callback
	     */
	
	  }, {
	    key: '_loadPageElement',
	    value: function _loadPageElement(parent, callback) {
	      var _this3 = this;
	
	      if (!this._loadedPage && !this._getPageTarget()) {
	        var pages = this._findTabbarElement().pages;
	        var index = this._findTabIndex();
	        if (!pages[index]) {
	          throw Error('Page was not provided to <ons-tab> index ' + index);
	        }
	        callback(pages[index]);
	      } else if (this._loadingPage) {
	        this._loadingPage.then(function (pageElement) {
	          callback(pageElement);
	        });
	      } else if (!this._loadedPage) {
	        var deferred = util.defer();
	        this._loadingPage = deferred.promise;
	
	        this._pageLoader.load({ page: this._getPageTarget(), parent: parent }, function (pageElement) {
	          _this3._loadedPage = pageElement;
	          deferred.resolve(pageElement);
	          delete _this3._loadingPage;
	
	          callback(pageElement);
	        });
	      } else {
	        callback(this._loadedPage);
	      }
	    }
	  }, {
	    key: 'isActive',
	
	
	    /**
	     * @return {Boolean}
	     */
	    value: function isActive() {
	      return this.classList.contains('active');
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this.removeEventListener('click', this._boundOnClick, false);
	      if (this._loadedPage) {
	        this._pageLoader.unload(this._loadedPage);
	        this._loadedPage = null;
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this4 = this;
	
	      contentReady(this, function () {
	        _this4._ensureElementPosition();
	
	        var tabbar = _this4._findTabbarElement();
	
	        if (tabbar.hasAttribute('modifier')) {
	          var prefix = _this4.hasAttribute('modifier') ? _this4.getAttribute('modifier') + ' ' : '';
	          _this4.setAttribute('modifier', prefix + tabbar.getAttribute('modifier'));
	        }
	
	        var onReady = function onReady() {
	          if (_this4._getPageTarget() && !_this4.hasLoaded) {
	            _this4.hasLoaded = true;
	            _this4._loadPageElement(tabbar._contentElement, function (pageElement) {
	              pageElement.style.display = 'none';
	              tabbar._contentElement.appendChild(pageElement);
	            });
	          }
	
	          if (_this4.hasAttribute('active')) {
	            tabbar.setActiveTab(_this4._findTabIndex());
	          }
	        };
	
	        TabbarElement.rewritables.ready(tabbar, onReady);
	
	        _this4.addEventListener('click', _this4._boundOnClick, false);
	      });
	    }
	  }, {
	    key: '_findTabbarElement',
	    value: function _findTabbarElement() {
	      if (this.parentNode && this.parentNode.nodeName.toLowerCase() === 'ons-tabbar') {
	        return this.parentNode;
	      }
	
	      if (this.parentNode.parentNode && this.parentNode.parentNode.nodeName.toLowerCase() === 'ons-tabbar') {
	        return this.parentNode.parentNode;
	      }
	
	      return null;
	    }
	  }, {
	    key: '_findTabIndex',
	    value: function _findTabIndex() {
	      var elements = this.parentNode.children;
	      for (var i = 0; i < elements.length; i++) {
	        if (this === elements[i]) {
	          return i;
	        }
	      }
	    }
	  }, {
	    key: '_ensureElementPosition',
	    value: function _ensureElementPosition() {
	      if (!this._findTabbarElement()) {
	        throw new Error('This ons-tab element is must be child of ons-tabbar element.');
	      }
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      var _this5 = this;
	
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$16)) {
	            this.className = defaultClassName$16 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          contentReady(this, function () {
	            return ModifierUtil.onModifierChanged(last, current, _this5, scheme$22);
	          });
	          break;
	        case 'ripple':
	          this._templateLoaded() && contentReady(this, function () {
	            return _this5._updateRipple();
	          });
	          break;
	        case 'icon':
	        case 'label':
	        case 'badge':
	          contentReady(this, function () {
	            return _this5._updateDefaultTemplate();
	          });
	          break;
	        case 'page':
	          if (typeof current === 'string') {
	            this._page = current;
	          }
	          break;
	      }
	    }
	  }, {
	    key: 'page',
	    set: function set(page) {
	      this._page = page;
	    },
	    get: function get() {
	      return this._page;
	    }
	  }, {
	    key: 'pageLoader',
	    set: function set(loader) {
	      if (!(loader instanceof PageLoader)) {
	        throw Error('First parameter must be an instance of PageLoader.');
	      }
	      this._pageLoader = loader;
	    },
	    get: function get() {
	      return this._pageLoader;
	    }
	  }, {
	    key: '_input',
	    get: function get() {
	      return this.children[0];
	    }
	  }, {
	    key: '_button',
	    get: function get() {
	      return util.findChild(this, '.tabbar__button');
	    }
	  }, {
	    key: 'pageElement',
	    get: function get() {
	      if (this._loadedPage) {
	        return this._loadedPage;
	      }
	
	      var tabbar = this._findTabbarElement();
	      var index = this._findTabIndex();
	
	      return tabbar._contentElement.children[index];
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'ripple', 'icon', 'label', 'page', 'badge', 'class'];
	    }
	  }]);
	  return TabElement;
	}(BaseElement);
	
	customElements.define('ons-tab', TabElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	
	*/
	
	var defaultClassName$17 = 'toolbar-button';
	
	var scheme$24 = { '': 'toolbar-button--*' };
	
	/**
	 * @element ons-toolbar-button
	 * @category page
	 * @modifier material
	 *   [en]Material Design toolbar button.[/en]
	 *   [ja][/ja]
	 * @modifier outline
	 *   [en]A button with an outline.[/en]
	 *   [ja]アウトラインをもったボタンを表示します。[/ja]
	 * @description
	 *   [en]Button component for ons-toolbar and ons-bottom-toolbar.[/en]
	 *   [ja]ons-toolbarあるいはons-bottom-toolbarに設置できるボタン用コンポーネントです。[/ja]
	 * @codepen aHmGL
	 * @tutorial vanilla/Reference/page
	 * @guide adding-a-toolbar
	 *   [en]Adding a toolbar[/en]
	 *   [ja]ツールバーの追加[/ja]
	 * @seealso ons-toolbar
	 *   [en]The `<ons-toolbar>` component displays a navigation bar at the top of a page.[/en]
	 *   [ja]ons-toolbarコンポーネント[/ja]
	 * @seealso ons-back-button
	 *   [en]The `<ons-back-button>` displays a back button in the navigation bar.[/en]
	 *   [ja]ons-back-buttonコンポーネント[/ja]
	 * @example
	 * <ons-toolbar>
	 *   <div class="left">
	 *     <ons-toolbar-button>
	 *       Button
	 *     </ons-toolbar-button>
	 *   </div>
	 *   <div class="center">
	 *     Title
	 *   </div>
	 *   <div class="right">
	 *     <ons-toolbar-button>
	 *       <ons-icon icon="ion-navicon" size="28px"></ons-icon>
	 *     </ons-toolbar-button>
	 *   </div>
	 * </ons-toolbar>
	 */
	
	var ToolbarButtonElement = function (_BaseElement) {
	  inherits(ToolbarButtonElement, _BaseElement);
	
	  function ToolbarButtonElement() {
	    classCallCheck(this, ToolbarButtonElement);
	    return possibleConstructorReturn(this, (ToolbarButtonElement.__proto__ || Object.getPrototypeOf(ToolbarButtonElement)).apply(this, arguments));
	  }
	
	  createClass(ToolbarButtonElement, [{
	    key: 'init',
	
	
	    /**
	     * @attribute modifier
	     * @type {String}
	     * @description
	     *   [en]The appearance of the button.[/en]
	     *   [ja]ボタンの表現を指定します。[/ja]
	     */
	
	    /**
	     * @attribute disabled
	     * @description
	     *   [en]Specify if button should be disabled.[/en]
	     *   [ja]ボタンを無効化する場合は指定してください。[/ja]
	     */
	
	    value: function init() {
	      this._compile();
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      autoStyle.prepare(this);
	
	      this.classList.add(defaultClassName$17);
	
	      ModifierUtil.initModifier(this, scheme$24);
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      switch (name) {
	        case 'class':
	          if (!this.classList.contains(defaultClassName$17)) {
	            this.className = defaultClassName$17 + ' ' + current;
	          }
	          break;
	        case 'modifier':
	          ModifierUtil.onModifierChanged(last, current, this, scheme$24);
	          break;
	      }
	    }
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['modifier', 'class'];
	    }
	  }]);
	  return ToolbarButtonElement;
	}(BaseElement);
	
	customElements.define('ons-toolbar-button', ToolbarButtonElement);
	
	/*
	Copyright 2013-2015 ASIAL CORPORATION
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	   http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
	*/
	
	var defaultClassName$18 = 'range';
	
	var scheme$25 = {
	  '': 'range--*',
	  '.range__input': 'range--*__input'
	};
	
	var INPUT_ATTRIBUTES$2 = ['autofocus', 'disabled', 'inputmode', 'max', 'min', 'name', 'placeholder', 'readonly', 'size', 'step', 'validator', 'value'];
	
	/**
	 * @element ons-range
	 * @category form
	 * @modifier material
	 *   [en]Material Design slider[/en]
	 *   [ja][/ja]
	 * @description
	 *   [en]
	 *     Range input component. Used to display a draggable slider.
	 *
	 *     Works very similar to the `<input type="range">` element.
	 *   [/en]
	 *   [ja][/ja]
	 * @codepen xZQomM
	 * @tutorial vanilla/Reference/range
	 * @guide using-modifier [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]
	 * @seealso ons-input
	 *   [en]The `<ons-input>` component is used to display text inputs, radio buttons and checkboxes.[/en]
	 *   [ja][/ja]
	 * @example
	 * <ons-range value="20"></ons-range>
	 * <ons-range modifier="material" value="10"></range>
	 */
	
	/**
	 * @attribute disabled
	 * @description
	 *   [en]Whether the element is disabled or not.[/en]
	 *   [ja]無効化されている場合に`true`。[/ja]
	 */
	
	var RangeElement = function (_BaseElement) {
	  inherits(RangeElement, _BaseElement);
	
	  function RangeElement() {
	    classCallCheck(this, RangeElement);
	    return possibleConstructorReturn(this, (RangeElement.__proto__ || Object.getPrototypeOf(RangeElement)).apply(this, arguments));
	  }
	
	  createClass(RangeElement, [{
	    key: 'init',
	    value: function init() {
	      var _this2 = this;
	
	      contentReady(this, function () {
	        _this2._compile();
	        _this2._updateBoundAttributes();
	        _this2._onChange();
	      });
	    }
	  }, {
	    key: '_compile',
	    value: function _compile() {
	      this.classList.add(defaultClassName$18);
	
	      autoStyle.prepare(this);
	
	      if (!util.findChild(this, '.range__input')) {
	        var input = document.createElement('input');
	        input.setAttribute('type', 'range');
	        input.classList.add('range__input');
	        this.appendChild(input);
	      }
	
	      ModifierUtil.initModifier(this, scheme$25);
	
	      this._updateDisabled();
	    }
	  }, {
	    key: '_onChange',
	    value: function _onChange() {
	      this._input.style.backgroundSize = 100 * this._ratio + '% 2px';
	    }
	  }, {
	    key: '_onDragstart',
	    value: function _onDragstart(e) {
	      e.stopPropagation();
	      e.gesture.stopPropagation();
	    }
	  }, {
	    key: '_updateDisabled',
	    value: function _updateDisabled() {
	      if (this.hasAttribute('disabled')) {
	        ModifierUtil.addModifier(this, 'disabled');
	      } else {
	        ModifierUtil.removeModifier(this, 'disabled');
	      }
	    }
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, last, current) {
	      var _this3 = this;
	
	      if (name === 'modifier') {
	        ModifierUtil.onModifierChanged(last, current, this, scheme$25);
	      } else if (name === 'class') {
	        if (!this.classList.contains(defaultClassName$18)) {
	          this.className = defaultClassName$18 + ' ' + current;
	        }
	      } else if (name === 'disabled') {
	        this._updateDisabled();
	      }
	
	      if (INPUT_ATTRIBUTES$2.indexOf(name) >= 0) {
	        contentReady(this, function () {
	          _this3._updateBoundAttributes();
	
	          if (name === 'min' || name === 'max') {
	            _this3._onChange();
	          }
	        });
	      }
	    }
	  }, {
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      this.addEventListener('dragstart', this._onDragstart);
	      this.addEventListener('input', this._onChange);
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      this.removeEventListener('dragstart', this._onDragstart);
	      this.removeEventListener('input', this._onChange);
	    }
	  }, {
	    key: '_updateBoundAttributes',
	    value: function _updateBoundAttributes() {
	      var _this4 = this;
	
	      INPUT_ATTRIBUTES$2.forEach(function (attr) {
	        if (_this4.hasAttribute(attr)) {
	          _this4._input.setAttribute(attr, _this4.getAttribute(attr));
	        } else {
	          _this4._input.removeAttribute(attr);
	        }
	      });
	    }
	  }, {
	    key: '_ratio',
	    get: function get() {
	      // Returns the current ratio.
	      var min = this._input.min === '' ? 0 : parseInt(this._input.min);
	      var max = this._input.max === '' ? 100 : parseInt(this._input.max);
	
	      return (this.value - min) / (max - min);
	    }
	  }, {
	    key: '_input',
	    get: function get() {
	      return this.querySelector('input.range__input');
	    }
	
	    /**
	     * @property disabled
	     * @type {Boolean}
	     * @description
	     *   [en]Whether the element is disabled or not.[/en]
	     *   [ja]無効化されている場合に`true`。[/ja]
	     */
	
	  }, {
	    key: 'disabled',
	    set: function set(value) {
	      return util.toggleAttribute(this, 'disabled', value);
	    },
	    get: function get() {
	      return this.hasAttribute('disabled');
	    }
	
	    /**
	     * @property value
	     * @type {Number}
	     * @description
	     *   [en]Current value.[/en]
	     *   [ja][/ja]
	     */
	
	  }, {
	    key: 'value',
	    get: function get() {
	      return this._input === null ? this.getAttribute('value') : this._input.value;
	    },
	    set: function set(val) {
	      var _this5 = this;
	
	      contentReady(this, function () {
	        _this5._input.value = val;
	        _this5._onChange();
	      });
	    }
	  }], [{
	    key: 'observedAttributes',
	    get: function get() {
	      return ['class', 'modifier'].concat(INPUT_ATTRIBUTES$2);
	    }
	  }, {
	    key: 'events',
	    get: function get() {
	      return ['input', 'change'];
	    }
	  }]);
	  return RangeElement;
	}(BaseElement);
	
	customElements.define('ons-range', RangeElement);
	
	ons$1.TemplateElement = TemplateElement;
	ons$1.IfElement = IfElement;
	ons$1.AlertDialogElement = AlertDialogElement;
	ons$1.BackButtonElement = BackButtonElement;
	ons$1.BottomToolbarElement = BottomToolbarElement;
	ons$1.ButtonElement = ButtonElement;
	ons$1.CarouselItemElement = CarouselItemElement;
	ons$1.CarouselElement = CarouselElement;
	ons$1.ColElement = ColElement;
	ons$1.DialogElement = DialogElement;
	ons$1.FabElement = FabElement;
	ons$1.GestureDetectorElement = GestureDetectorElement;
	ons$1.IconElement = IconElement;
	ons$1.LazyRepeatElement = LazyRepeatElement;
	ons$1.ListHeaderElement = ListHeaderElement;
	ons$1.ListTitleElement = ListTitleElement;
	ons$1.ListItemElement = ListItemElement;
	ons$1.ListElement = ListElement;
	ons$1.InputElement = InputElement;
	ons$1.ModalElement = ModalElement;
	ons$1.NavigatorElement = NavigatorElement;
	ons$1.PageElement = PageElement;
	ons$1.PopoverElement = PopoverElement;
	ons$1.ProgressBarElement = ProgressBarElement;
	ons$1.ProgressCircularElement = ProgressCircularElement;
	ons$1.PullHookElement = PullHookElement;
	ons$1.RippleElement = RippleElement;
	ons$1.RowElement = RowElement;
	ons$1.SelectElement = SelectElement;
	ons$1.SpeedDialItemElement = SpeedDialItemElement;
	ons$1.SpeedDialElement = SpeedDialElement;
	ons$1.SplitterContentElement = SplitterContentElement;
	ons$1.SplitterMaskElement = SplitterMaskElement;
	ons$1.SplitterSideElement = SplitterSideElement;
	ons$1.SplitterElement = SplitterElement;
	ons$1.SwitchElement = SwitchElement;
	ons$1.TabElement = TabElement;
	ons$1.TabbarElement = TabbarElement;
	ons$1.ToolbarButtonElement = ToolbarButtonElement;
	ons$1.ToolbarElement = ToolbarElement;
	ons$1.RangeElement = RangeElement;
	
	// fastclick
	window.addEventListener('load', function () {
	  ons$1.fastClick = FastClick.attach(document.body);
	}, false);
	
	// ons._defaultDeviceBackButtonHandler
	window.addEventListener('DOMContentLoaded', function () {
	  ons$1._deviceBackButtonDispatcher.enable();
	  ons$1._defaultDeviceBackButtonHandler = ons$1._deviceBackButtonDispatcher.createHandler(window.document.body, function () {
	    navigator.app.exitApp();
	  });
	  document.body._gestureDetector = new ons$1.GestureDetector(document.body);
	}, false);
	
	// setup loading placeholder
	ons$1.ready(function () {
	  ons$1._setupLoadingPlaceHolders();
	});
	
	// viewport.js
	new Viewport().setup();
	
	return ons$1;
	
	})));
	
	//# sourceMappingURL=data:application/json;charset=utf8;base64,
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(193)(module), __webpack_require__(218).setImmediate, __webpack_require__(218).clearImmediate, __webpack_require__(113)))

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = Function.prototype.apply;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) {
	  if (timeout) {
	    timeout.close();
	  }
	};
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// setimmediate attaches itself to the global object
	__webpack_require__(219);
	exports.setImmediate = setImmediate;
	exports.clearImmediate = clearImmediate;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
	    "use strict";
	
	    if (global.setImmediate) {
	        return;
	    }
	
	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var registerImmediate;
	
	    function setImmediate(callback) {
	      // Callback can either be a function or a string
	      if (typeof callback !== "function") {
	        callback = new Function("" + callback);
	      }
	      // Copy function arguments
	      var args = new Array(arguments.length - 1);
	      for (var i = 0; i < args.length; i++) {
	          args[i] = arguments[i + 1];
	      }
	      // Store and register the task
	      var task = { callback: callback, args: args };
	      tasksByHandle[nextHandle] = task;
	      registerImmediate(nextHandle);
	      return nextHandle++;
	    }
	
	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }
	
	    function run(task) {
	        var callback = task.callback;
	        var args = task.args;
	        switch (args.length) {
	        case 0:
	            callback();
	            break;
	        case 1:
	            callback(args[0]);
	            break;
	        case 2:
	            callback(args[0], args[1]);
	            break;
	        case 3:
	            callback(args[0], args[1], args[2]);
	            break;
	        default:
	            callback.apply(undefined, args);
	            break;
	        }
	    }
	
	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(runIfPresent, 0, handle);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    run(task);
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }
	
	    function installNextTickImplementation() {
	        registerImmediate = function(handle) {
	            process.nextTick(function () { runIfPresent(handle); });
	        };
	    }
	
	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }
	
	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
	
	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };
	
	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }
	
	        registerImmediate = function(handle) {
	            global.postMessage(messagePrefix + handle, "*");
	        };
	    }
	
	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };
	
	        registerImmediate = function(handle) {
	            channel.port2.postMessage(handle);
	        };
	    }
	
	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        registerImmediate = function(handle) {
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	        };
	    }
	
	    function installSetTimeoutImplementation() {
	        registerImmediate = function(handle) {
	            setTimeout(runIfPresent, 0, handle);
	        };
	    }
	
	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;
	
	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();
	
	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();
	
	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();
	
	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();
	
	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }
	
	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(113)))

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(221);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(238)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../css-loader/index.js!../../postcss-loader/index.js!./onsenui.css", function() {
				var newContent = require("!!../../css-loader/index.js!../../postcss-loader/index.js!./onsenui.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(222)();
	// imports
	exports.i(__webpack_require__(223), "");
	exports.i(__webpack_require__(228), "");
	exports.i(__webpack_require__(232), "");
	
	// module
	exports.push([module.id, "/*! onsenui - v2.2.5 - 2017-04-25 */\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n */\n\n/* custom elements */\nons-page, ons-navigator,\nons-split-view, ons-sliding-menu, ons-tabbar,\nons-gesture-detector {\n  display: block;\n}\n\nons-navigator,\nons-tabbar,\nons-dialog,\nons-alert-dialog {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  overflow: hidden;\n}\n\nons-tab {\n  -webkit-transform: translate3d(0, 0, 0);\n          transform: translate3d(0, 0, 0);\n}\n\nons-page, ons-navigator, ons-tabbar, ons-sliding-menu, ons-split-view, ons-dialog, ons-alert-dialog {\n  z-index: 2;\n}\n\nons-fab, ons-speed-dial {\n  z-index: 10001;\n}\n\n* {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0) !important;\n}\n\ninput, textarea {\n  -webkit-user-select: auto;\n  -moz-user-select: text;\n}\n\nons-toolbar:not([inline]), ons-bottom-toolbar {\n  position: absolute;\n  left: 0;\n  right: 0;\n  z-index: 10000;\n}\nons-toolbar:not([inline]) {\n  top: 0;\n}\nons-bottom-toolbar {\n  bottom: 0;\n}\n\n.page, .page__content {\n  background-color: transparent !important;\n  background: transparent !important;\n}\n\n.page__content {\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  z-index: 0;\n  -ms-touch-action: pan-y;\n}\n\n.toolbar + .page__background + .page__content {\n  margin-top: -1px;\n  top: 44px;\n}\n\n.toolbar--material + .page__background + .page__content {\n  top: 56px;\n}\n\n.page[status-bar-fill] > .page__content {\n  top: 20px;\n}\n\n.page[status-bar-fill] > .toolbar {\n  padding-top: 20px;\n  box-sizing: content-box;\n}\n\n.page[status-bar-fill] > .toolbar + .page__background + .page__content {\n  top: 64px;\n}\n\n.page[status-bar-fill] > .toolbar--material + .page__background + .page__content {\n  top: 76px;\n}\n\nons-tabbar[status-bar-fill] > .tabbar--top__content {\n  top: 71px;\n}\n\nons-tabbar[status-bar-fill] > .tabbar--top {\n  padding-top: 22px;\n}\n\nons-tabbar[position=\"top\"] .page[status-bar-fill] > .page__content {\n  top: 0px;\n}\n\n.toolbar + .page__background + .page__content ons-tabbar[status-bar-fill] > .tabbar--top {\n  top: 0px;\n}\n\n.toolbar + .page__background + .page__content ons-tabbar[status-bar-fill] > .tabbar--top__content {\n  top: 49px;\n}\n\n.page-with-bottom-toolbar > .page__content {\n  bottom: 44px;\n}\n\nons-dialog[disabled] > .dialog,\nons-alert-dialog[disabled],\nons-popover[disabled] {\n  pointer-events: none;\n  opacity: 0.75;\n}\n\nons-list-item[disabled] {\n   pointer-events: none;\n}\n\nons-pull-hook {\n  position: relative;\n  display: block;\n  margin: auto;\n  text-align: center;\n  z-index: 20002;\n}\n\nons-splitter {\n  overflow: hidden;\n}\n\nons-splitter, ons-splitter-mask, ons-splitter-content, ons-splitter-side {\n  display: block;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  box-sizing: border-box;\n  z-index: 0;\n}\n\nons-splitter-mask {\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.1);\n  display: none;\n  opacity: 0;\n}\n\nons-splitter-content {\n  z-index: 1;\n}\n\nons-splitter-side {\n  right: auto;\n  z-index: 1;\n}\n\nons-splitter-side[side=\"right\"] {\n  right: 0;\n  left: auto;\n}\n\nons-splitter-side[mode=\"collapse\"] {\n  z-index: 3;\n  left: auto;\n  right: 100%;\n}\n\nons-splitter-side[side=\"right\"][mode=\"collapse\"] {\n  right: auto;\n  left: 100%;\n}\n\nons-splitter-side[mode=\"split\"] {\n  z-index: 2;\n}\n\nons-toolbar-button > ons-icon[icon*=\"ion-\"] {\n  font-size: 26px;\n}\n\nons-range, ons-select {\n  display: inline-block;\n}\n\nons-range > input {\n  min-width: 50px;\n  width: 100%;\n}\n\nons-select > select {\n  width: 100%;\n}\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n */\n\nons-carousel {\n  display: block;\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n}\n\nons-carousel-item {\n  display: block;\n  height: 100%;\n  visibility: hidden;\n}\n\nons-carousel[fullscreen] {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  left: 0px;\n  bottom: 0px;\n  box-sizing: border-box;\n}\n\nons-carousel[disabled] {\n  pointer-events: none;\n  opacity: 0.75;\n}\n\nons-row {\n  display: -webkit-box;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  width: 100%;\n  box-sizing: border-box;\n}\n\nons-row[vertical-align=\"top\"], ons-row[align=\"top\"] {\n  -webkit-box-align: start;\n  box-align: start;\n  -ms-flex-align: start;\n  -moz-align-items: flex-start;\n  align-items: flex-start;\n}\n\nons-row[vertical-align=\"bottom\"], ons-row[align=\"bottom\"] {\n  -webkit-box-align: end;\n  box-align: end;\n  -ms-flex-align: end;\n  -moz-align-items: flex-end;\n  align-items: flex-end;\n}\n\nons-row[vertical-align=\"center\"], ons-row[align=\"center\"] {\n  -webkit-box-align: center;\n  box-align: center;\n  -ms-flex-align: center;\n  -moz-align-items: center;\n  align-items: center;\n  text-align: inherit;\n}\n\nons-row + ons-row {\n  padding-top: 0;\n}\n\nons-col {\n  -webkit-box-flex: 1;\n  -moz-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n}\n\nons-col[vertical-align=\"top\"], ons-col[align=\"top\"] {\n  -webkit-align-self: flex-start;\n  -ms-flex-item-align: start;\n  align-self: flex-start;\n}\n\nons-col[vertical-align=\"bottom\"], ons-col[align=\"bottom\"] {\n  -webkit-align-self: flex-end;\n  -ms-flex-item-align: end;\n  align-self: flex-end; }\n\nons-col[vertical-align=\"center\"], ons-col[align=\"center\"] {\n  -webkit-align-self: center;\n  -moz-align-self: center;\n  -ms-flex-item-align: center;\n  text-align: inherit;\n}\n\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n */\n\n.ons-icon {\n  display: inline-block;\n  line-height: inherit;\n  font-style: normal;\n  font-weight: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n:not(ons-toolbar-button) > .ons-icon--ion {\n  line-height: 0.75em;\n  vertical-align: -25%;\n}\n\nons-icon[spin] {\n  -webkit-animation: ons-icon-spin 2s infinite linear;\n  animation: ons-icon-spin 2s infinite linear;\n}\n\n@-webkit-keyframes ons-icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n  }\n}\n\n@keyframes ons-icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n\n.ons-icon[rotate=\"90\"] {\n  -webkit-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n\n.ons-icon[rotate=\"180\"] {\n  -webkit-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n\n.ons-icon[rotate=\"270\"] {\n  -webkit-transform: rotate(270deg);\n  transform: rotate(270deg);\n}\n\nons-icon[fixed-width] {\n  width: 1.28571429em;\n  text-align: center;\n}\n\n.ons-icon--lg {\n  font-size: 1.33333333em;\n  line-height: 0.75em;\n  vertical-align: -15%;\n}\n\n.ons-icon--2x {\n  font-size: 2em;\n}\n\n.ons-icon--3x {\n  font-size: 3em;\n}\n\n.ons-icon--4x {\n  font-size: 4em;\n}\n\n.ons-icon--5x {\n  font-size: 5em;\n}\n\nons-input {\n  display: inline-block;\n  position: relative;\n}\n\nons-input .text-input__container {\n  width: 100%;\n  display: inline-block;\n}\n\nons-input .text-input__label:not(.text-input--material__label) {\n  display: none;\n}\n\nons-input:not([float]) .text-input--material__label--active {\n  display: none;\n}\n\nons-input[disabled] {\n  opacity: 0.5;\n  pointer-events: none;\n}\n\nons-input input.text-input--material::-webkit-input-placeholder {\n  color: transparent;\n}\n\nons-input input.text-input--material::-moz-placeholder {\n  color: transparent;\n}\n\nons-input input.text-input--material:-ms-input-placeholder {\n  color: transparent;\n}\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n */\n\nons-progress-bar {\n  display: block;\n}\n\nons-progress-circular {\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n}\n\nons-progress-circular > svg.progress-circular {\n  width: 100%;\n  height: 100%;\n}\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n */\n.ripple {\n  display: block;\n  position: absolute;\n  overflow: hidden;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n}\n\nons-list-item .ripple__wave, ons-list-item .ripple__background,\n.button--material--flat .ripple__wave, .button--material--flat .ripple__background{\n  background: rgba(189, 189, 189, 0.3);\n}\n\n.ripple__background {\n  background: rgba(255, 255, 255, 0.2);\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  opacity: 0;\n  pointer-events: none;\n}\n\n.ripple__wave {\n  background: rgba(255, 255, 255, 0.2);\n  width: 0;\n  height: 0;\n  border-radius: 50%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 0;\n  pointer-events: none;\n}\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nons-sliding-menu {\n  position: absolute;\n  left: 0px;\n  right: 0px;\n  top: 0px;\n  bottom: 0px;\n  z-index: 0;\n  overflow-x: hidden;\n}\n\n.onsen-sliding-menu__menu,\n.onsen-sliding-menu__main {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  bottom: 0px;\n  right: 0px;\n  z-index: 0;\n  margin: 0;\n  padding: 0;\n}\n\n.onsen-sliding-menu__menu {\n  opacity: 0;\n}\n\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nons-split-view {\n  position: absolute;\n  left: 0px;\n  right: 0px;\n  top: 0px;\n  bottom: 0px;\n  z-index: 0;\n  overflow: hidden;\n}\n\n.onsen-split-view__secondary {\n  opacity: 0;\n  width: 100%;\n}\n\n.onsen-split-view__secondary,\n.onsen-split-view__main {\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  bottom: 0px;\n  right: 0px;\n  z-index: 0;\n  overflow-x: hidden; \n}\n", ""]);
	
	// exports


/***/ }),
/* 222 */
/***/ (function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(222)();
	// imports
	
	
	// module
	exports.push([module.id, "@charset \"UTF-8\";/*!\n  Ionicons, v2.0.1\n  Created by Ben Sperry for the Ionic Framework, http://ionicons.com/\n  https://twitter.com/benjsperry  https://twitter.com/ionicframework\n  MIT License: https://github.com/driftyco/ionicons\n\n  Android-style icons originally built by Google’s\n  Material Design Icons: https://github.com/google/material-design-icons\n  used under CC BY http://creativecommons.org/licenses/by/4.0/\n  Modified icons to fit ionicon’s grid from original.\n*/@font-face{font-family:\"Ionicons\";src:url(" + __webpack_require__(224) + ");src:url(" + __webpack_require__(224) + ") format(\"embedded-opentype\"),url(" + __webpack_require__(225) + ") format(\"truetype\"),url(" + __webpack_require__(226) + ") format(\"woff\"),url(" + __webpack_require__(227) + ") format(\"svg\");font-weight:normal;font-style:normal}.ion,.ionicons,.ion-alert:before,.ion-alert-circled:before,.ion-android-add:before,.ion-android-add-circle:before,.ion-android-alarm-clock:before,.ion-android-alert:before,.ion-android-apps:before,.ion-android-archive:before,.ion-android-arrow-back:before,.ion-android-arrow-down:before,.ion-android-arrow-dropdown:before,.ion-android-arrow-dropdown-circle:before,.ion-android-arrow-dropleft:before,.ion-android-arrow-dropleft-circle:before,.ion-android-arrow-dropright:before,.ion-android-arrow-dropright-circle:before,.ion-android-arrow-dropup:before,.ion-android-arrow-dropup-circle:before,.ion-android-arrow-forward:before,.ion-android-arrow-up:before,.ion-android-attach:before,.ion-android-bar:before,.ion-android-bicycle:before,.ion-android-boat:before,.ion-android-bookmark:before,.ion-android-bulb:before,.ion-android-bus:before,.ion-android-calendar:before,.ion-android-call:before,.ion-android-camera:before,.ion-android-cancel:before,.ion-android-car:before,.ion-android-cart:before,.ion-android-chat:before,.ion-android-checkbox:before,.ion-android-checkbox-blank:before,.ion-android-checkbox-outline:before,.ion-android-checkbox-outline-blank:before,.ion-android-checkmark-circle:before,.ion-android-clipboard:before,.ion-android-close:before,.ion-android-cloud:before,.ion-android-cloud-circle:before,.ion-android-cloud-done:before,.ion-android-cloud-outline:before,.ion-android-color-palette:before,.ion-android-compass:before,.ion-android-contact:before,.ion-android-contacts:before,.ion-android-contract:before,.ion-android-create:before,.ion-android-delete:before,.ion-android-desktop:before,.ion-android-document:before,.ion-android-done:before,.ion-android-done-all:before,.ion-android-download:before,.ion-android-drafts:before,.ion-android-exit:before,.ion-android-expand:before,.ion-android-favorite:before,.ion-android-favorite-outline:before,.ion-android-film:before,.ion-android-folder:before,.ion-android-folder-open:before,.ion-android-funnel:before,.ion-android-globe:before,.ion-android-hand:before,.ion-android-hangout:before,.ion-android-happy:before,.ion-android-home:before,.ion-android-image:before,.ion-android-laptop:before,.ion-android-list:before,.ion-android-locate:before,.ion-android-lock:before,.ion-android-mail:before,.ion-android-map:before,.ion-android-menu:before,.ion-android-microphone:before,.ion-android-microphone-off:before,.ion-android-more-horizontal:before,.ion-android-more-vertical:before,.ion-android-navigate:before,.ion-android-notifications:before,.ion-android-notifications-none:before,.ion-android-notifications-off:before,.ion-android-open:before,.ion-android-options:before,.ion-android-people:before,.ion-android-person:before,.ion-android-person-add:before,.ion-android-phone-landscape:before,.ion-android-phone-portrait:before,.ion-android-pin:before,.ion-android-plane:before,.ion-android-playstore:before,.ion-android-print:before,.ion-android-radio-button-off:before,.ion-android-radio-button-on:before,.ion-android-refresh:before,.ion-android-remove:before,.ion-android-remove-circle:before,.ion-android-restaurant:before,.ion-android-sad:before,.ion-android-search:before,.ion-android-send:before,.ion-android-settings:before,.ion-android-share:before,.ion-android-share-alt:before,.ion-android-star:before,.ion-android-star-half:before,.ion-android-star-outline:before,.ion-android-stopwatch:before,.ion-android-subway:before,.ion-android-sunny:before,.ion-android-sync:before,.ion-android-textsms:before,.ion-android-time:before,.ion-android-train:before,.ion-android-unlock:before,.ion-android-upload:before,.ion-android-volume-down:before,.ion-android-volume-mute:before,.ion-android-volume-off:before,.ion-android-volume-up:before,.ion-android-walk:before,.ion-android-warning:before,.ion-android-watch:before,.ion-android-wifi:before,.ion-aperture:before,.ion-archive:before,.ion-arrow-down-a:before,.ion-arrow-down-b:before,.ion-arrow-down-c:before,.ion-arrow-expand:before,.ion-arrow-graph-down-left:before,.ion-arrow-graph-down-right:before,.ion-arrow-graph-up-left:before,.ion-arrow-graph-up-right:before,.ion-arrow-left-a:before,.ion-arrow-left-b:before,.ion-arrow-left-c:before,.ion-arrow-move:before,.ion-arrow-resize:before,.ion-arrow-return-left:before,.ion-arrow-return-right:before,.ion-arrow-right-a:before,.ion-arrow-right-b:before,.ion-arrow-right-c:before,.ion-arrow-shrink:before,.ion-arrow-swap:before,.ion-arrow-up-a:before,.ion-arrow-up-b:before,.ion-arrow-up-c:before,.ion-asterisk:before,.ion-at:before,.ion-backspace:before,.ion-backspace-outline:before,.ion-bag:before,.ion-battery-charging:before,.ion-battery-empty:before,.ion-battery-full:before,.ion-battery-half:before,.ion-battery-low:before,.ion-beaker:before,.ion-beer:before,.ion-bluetooth:before,.ion-bonfire:before,.ion-bookmark:before,.ion-bowtie:before,.ion-briefcase:before,.ion-bug:before,.ion-calculator:before,.ion-calendar:before,.ion-camera:before,.ion-card:before,.ion-cash:before,.ion-chatbox:before,.ion-chatbox-working:before,.ion-chatboxes:before,.ion-chatbubble:before,.ion-chatbubble-working:before,.ion-chatbubbles:before,.ion-checkmark:before,.ion-checkmark-circled:before,.ion-checkmark-round:before,.ion-chevron-down:before,.ion-chevron-left:before,.ion-chevron-right:before,.ion-chevron-up:before,.ion-clipboard:before,.ion-clock:before,.ion-close:before,.ion-close-circled:before,.ion-close-round:before,.ion-closed-captioning:before,.ion-cloud:before,.ion-code:before,.ion-code-download:before,.ion-code-working:before,.ion-coffee:before,.ion-compass:before,.ion-compose:before,.ion-connection-bars:before,.ion-contrast:before,.ion-crop:before,.ion-cube:before,.ion-disc:before,.ion-document:before,.ion-document-text:before,.ion-drag:before,.ion-earth:before,.ion-easel:before,.ion-edit:before,.ion-egg:before,.ion-eject:before,.ion-email:before,.ion-email-unread:before,.ion-erlenmeyer-flask:before,.ion-erlenmeyer-flask-bubbles:before,.ion-eye:before,.ion-eye-disabled:before,.ion-female:before,.ion-filing:before,.ion-film-marker:before,.ion-fireball:before,.ion-flag:before,.ion-flame:before,.ion-flash:before,.ion-flash-off:before,.ion-folder:before,.ion-fork:before,.ion-fork-repo:before,.ion-forward:before,.ion-funnel:before,.ion-gear-a:before,.ion-gear-b:before,.ion-grid:before,.ion-hammer:before,.ion-happy:before,.ion-happy-outline:before,.ion-headphone:before,.ion-heart:before,.ion-heart-broken:before,.ion-help:before,.ion-help-buoy:before,.ion-help-circled:before,.ion-home:before,.ion-icecream:before,.ion-image:before,.ion-images:before,.ion-information:before,.ion-information-circled:before,.ion-ionic:before,.ion-ios-alarm:before,.ion-ios-alarm-outline:before,.ion-ios-albums:before,.ion-ios-albums-outline:before,.ion-ios-americanfootball:before,.ion-ios-americanfootball-outline:before,.ion-ios-analytics:before,.ion-ios-analytics-outline:before,.ion-ios-arrow-back:before,.ion-ios-arrow-down:before,.ion-ios-arrow-forward:before,.ion-ios-arrow-left:before,.ion-ios-arrow-right:before,.ion-ios-arrow-thin-down:before,.ion-ios-arrow-thin-left:before,.ion-ios-arrow-thin-right:before,.ion-ios-arrow-thin-up:before,.ion-ios-arrow-up:before,.ion-ios-at:before,.ion-ios-at-outline:before,.ion-ios-barcode:before,.ion-ios-barcode-outline:before,.ion-ios-baseball:before,.ion-ios-baseball-outline:before,.ion-ios-basketball:before,.ion-ios-basketball-outline:before,.ion-ios-bell:before,.ion-ios-bell-outline:before,.ion-ios-body:before,.ion-ios-body-outline:before,.ion-ios-bolt:before,.ion-ios-bolt-outline:before,.ion-ios-book:before,.ion-ios-book-outline:before,.ion-ios-bookmarks:before,.ion-ios-bookmarks-outline:before,.ion-ios-box:before,.ion-ios-box-outline:before,.ion-ios-briefcase:before,.ion-ios-briefcase-outline:before,.ion-ios-browsers:before,.ion-ios-browsers-outline:before,.ion-ios-calculator:before,.ion-ios-calculator-outline:before,.ion-ios-calendar:before,.ion-ios-calendar-outline:before,.ion-ios-camera:before,.ion-ios-camera-outline:before,.ion-ios-cart:before,.ion-ios-cart-outline:before,.ion-ios-chatboxes:before,.ion-ios-chatboxes-outline:before,.ion-ios-chatbubble:before,.ion-ios-chatbubble-outline:before,.ion-ios-checkmark:before,.ion-ios-checkmark-empty:before,.ion-ios-checkmark-outline:before,.ion-ios-circle-filled:before,.ion-ios-circle-outline:before,.ion-ios-clock:before,.ion-ios-clock-outline:before,.ion-ios-close:before,.ion-ios-close-empty:before,.ion-ios-close-outline:before,.ion-ios-cloud:before,.ion-ios-cloud-download:before,.ion-ios-cloud-download-outline:before,.ion-ios-cloud-outline:before,.ion-ios-cloud-upload:before,.ion-ios-cloud-upload-outline:before,.ion-ios-cloudy:before,.ion-ios-cloudy-night:before,.ion-ios-cloudy-night-outline:before,.ion-ios-cloudy-outline:before,.ion-ios-cog:before,.ion-ios-cog-outline:before,.ion-ios-color-filter:before,.ion-ios-color-filter-outline:before,.ion-ios-color-wand:before,.ion-ios-color-wand-outline:before,.ion-ios-compose:before,.ion-ios-compose-outline:before,.ion-ios-contact:before,.ion-ios-contact-outline:before,.ion-ios-copy:before,.ion-ios-copy-outline:before,.ion-ios-crop:before,.ion-ios-crop-strong:before,.ion-ios-download:before,.ion-ios-download-outline:before,.ion-ios-drag:before,.ion-ios-email:before,.ion-ios-email-outline:before,.ion-ios-eye:before,.ion-ios-eye-outline:before,.ion-ios-fastforward:before,.ion-ios-fastforward-outline:before,.ion-ios-filing:before,.ion-ios-filing-outline:before,.ion-ios-film:before,.ion-ios-film-outline:before,.ion-ios-flag:before,.ion-ios-flag-outline:before,.ion-ios-flame:before,.ion-ios-flame-outline:before,.ion-ios-flask:before,.ion-ios-flask-outline:before,.ion-ios-flower:before,.ion-ios-flower-outline:before,.ion-ios-folder:before,.ion-ios-folder-outline:before,.ion-ios-football:before,.ion-ios-football-outline:before,.ion-ios-game-controller-a:before,.ion-ios-game-controller-a-outline:before,.ion-ios-game-controller-b:before,.ion-ios-game-controller-b-outline:before,.ion-ios-gear:before,.ion-ios-gear-outline:before,.ion-ios-glasses:before,.ion-ios-glasses-outline:before,.ion-ios-grid-view:before,.ion-ios-grid-view-outline:before,.ion-ios-heart:before,.ion-ios-heart-outline:before,.ion-ios-help:before,.ion-ios-help-empty:before,.ion-ios-help-outline:before,.ion-ios-home:before,.ion-ios-home-outline:before,.ion-ios-infinite:before,.ion-ios-infinite-outline:before,.ion-ios-information:before,.ion-ios-information-empty:before,.ion-ios-information-outline:before,.ion-ios-ionic-outline:before,.ion-ios-keypad:before,.ion-ios-keypad-outline:before,.ion-ios-lightbulb:before,.ion-ios-lightbulb-outline:before,.ion-ios-list:before,.ion-ios-list-outline:before,.ion-ios-location:before,.ion-ios-location-outline:before,.ion-ios-locked:before,.ion-ios-locked-outline:before,.ion-ios-loop:before,.ion-ios-loop-strong:before,.ion-ios-medical:before,.ion-ios-medical-outline:before,.ion-ios-medkit:before,.ion-ios-medkit-outline:before,.ion-ios-mic:before,.ion-ios-mic-off:before,.ion-ios-mic-outline:before,.ion-ios-minus:before,.ion-ios-minus-empty:before,.ion-ios-minus-outline:before,.ion-ios-monitor:before,.ion-ios-monitor-outline:before,.ion-ios-moon:before,.ion-ios-moon-outline:before,.ion-ios-more:before,.ion-ios-more-outline:before,.ion-ios-musical-note:before,.ion-ios-musical-notes:before,.ion-ios-navigate:before,.ion-ios-navigate-outline:before,.ion-ios-nutrition:before,.ion-ios-nutrition-outline:before,.ion-ios-paper:before,.ion-ios-paper-outline:before,.ion-ios-paperplane:before,.ion-ios-paperplane-outline:before,.ion-ios-partlysunny:before,.ion-ios-partlysunny-outline:before,.ion-ios-pause:before,.ion-ios-pause-outline:before,.ion-ios-paw:before,.ion-ios-paw-outline:before,.ion-ios-people:before,.ion-ios-people-outline:before,.ion-ios-person:before,.ion-ios-person-outline:before,.ion-ios-personadd:before,.ion-ios-personadd-outline:before,.ion-ios-photos:before,.ion-ios-photos-outline:before,.ion-ios-pie:before,.ion-ios-pie-outline:before,.ion-ios-pint:before,.ion-ios-pint-outline:before,.ion-ios-play:before,.ion-ios-play-outline:before,.ion-ios-plus:before,.ion-ios-plus-empty:before,.ion-ios-plus-outline:before,.ion-ios-pricetag:before,.ion-ios-pricetag-outline:before,.ion-ios-pricetags:before,.ion-ios-pricetags-outline:before,.ion-ios-printer:before,.ion-ios-printer-outline:before,.ion-ios-pulse:before,.ion-ios-pulse-strong:before,.ion-ios-rainy:before,.ion-ios-rainy-outline:before,.ion-ios-recording:before,.ion-ios-recording-outline:before,.ion-ios-redo:before,.ion-ios-redo-outline:before,.ion-ios-refresh:before,.ion-ios-refresh-empty:before,.ion-ios-refresh-outline:before,.ion-ios-reload:before,.ion-ios-reverse-camera:before,.ion-ios-reverse-camera-outline:before,.ion-ios-rewind:before,.ion-ios-rewind-outline:before,.ion-ios-rose:before,.ion-ios-rose-outline:before,.ion-ios-search:before,.ion-ios-search-strong:before,.ion-ios-settings:before,.ion-ios-settings-strong:before,.ion-ios-shuffle:before,.ion-ios-shuffle-strong:before,.ion-ios-skipbackward:before,.ion-ios-skipbackward-outline:before,.ion-ios-skipforward:before,.ion-ios-skipforward-outline:before,.ion-ios-snowy:before,.ion-ios-speedometer:before,.ion-ios-speedometer-outline:before,.ion-ios-star:before,.ion-ios-star-half:before,.ion-ios-star-outline:before,.ion-ios-stopwatch:before,.ion-ios-stopwatch-outline:before,.ion-ios-sunny:before,.ion-ios-sunny-outline:before,.ion-ios-telephone:before,.ion-ios-telephone-outline:before,.ion-ios-tennisball:before,.ion-ios-tennisball-outline:before,.ion-ios-thunderstorm:before,.ion-ios-thunderstorm-outline:before,.ion-ios-time:before,.ion-ios-time-outline:before,.ion-ios-timer:before,.ion-ios-timer-outline:before,.ion-ios-toggle:before,.ion-ios-toggle-outline:before,.ion-ios-trash:before,.ion-ios-trash-outline:before,.ion-ios-undo:before,.ion-ios-undo-outline:before,.ion-ios-unlocked:before,.ion-ios-unlocked-outline:before,.ion-ios-upload:before,.ion-ios-upload-outline:before,.ion-ios-videocam:before,.ion-ios-videocam-outline:before,.ion-ios-volume-high:before,.ion-ios-volume-low:before,.ion-ios-wineglass:before,.ion-ios-wineglass-outline:before,.ion-ios-world:before,.ion-ios-world-outline:before,.ion-ipad:before,.ion-iphone:before,.ion-ipod:before,.ion-jet:before,.ion-key:before,.ion-knife:before,.ion-laptop:before,.ion-leaf:before,.ion-levels:before,.ion-lightbulb:before,.ion-link:before,.ion-load-a:before,.ion-load-b:before,.ion-load-c:before,.ion-load-d:before,.ion-location:before,.ion-lock-combination:before,.ion-locked:before,.ion-log-in:before,.ion-log-out:before,.ion-loop:before,.ion-magnet:before,.ion-male:before,.ion-man:before,.ion-map:before,.ion-medkit:before,.ion-merge:before,.ion-mic-a:before,.ion-mic-b:before,.ion-mic-c:before,.ion-minus:before,.ion-minus-circled:before,.ion-minus-round:before,.ion-model-s:before,.ion-monitor:before,.ion-more:before,.ion-mouse:before,.ion-music-note:before,.ion-navicon:before,.ion-navicon-round:before,.ion-navigate:before,.ion-network:before,.ion-no-smoking:before,.ion-nuclear:before,.ion-outlet:before,.ion-paintbrush:before,.ion-paintbucket:before,.ion-paper-airplane:before,.ion-paperclip:before,.ion-pause:before,.ion-person:before,.ion-person-add:before,.ion-person-stalker:before,.ion-pie-graph:before,.ion-pin:before,.ion-pinpoint:before,.ion-pizza:before,.ion-plane:before,.ion-planet:before,.ion-play:before,.ion-playstation:before,.ion-plus:before,.ion-plus-circled:before,.ion-plus-round:before,.ion-podium:before,.ion-pound:before,.ion-power:before,.ion-pricetag:before,.ion-pricetags:before,.ion-printer:before,.ion-pull-request:before,.ion-qr-scanner:before,.ion-quote:before,.ion-radio-waves:before,.ion-record:before,.ion-refresh:before,.ion-reply:before,.ion-reply-all:before,.ion-ribbon-a:before,.ion-ribbon-b:before,.ion-sad:before,.ion-sad-outline:before,.ion-scissors:before,.ion-search:before,.ion-settings:before,.ion-share:before,.ion-shuffle:before,.ion-skip-backward:before,.ion-skip-forward:before,.ion-social-android:before,.ion-social-android-outline:before,.ion-social-angular:before,.ion-social-angular-outline:before,.ion-social-apple:before,.ion-social-apple-outline:before,.ion-social-bitcoin:before,.ion-social-bitcoin-outline:before,.ion-social-buffer:before,.ion-social-buffer-outline:before,.ion-social-chrome:before,.ion-social-chrome-outline:before,.ion-social-codepen:before,.ion-social-codepen-outline:before,.ion-social-css3:before,.ion-social-css3-outline:before,.ion-social-designernews:before,.ion-social-designernews-outline:before,.ion-social-dribbble:before,.ion-social-dribbble-outline:before,.ion-social-dropbox:before,.ion-social-dropbox-outline:before,.ion-social-euro:before,.ion-social-euro-outline:before,.ion-social-facebook:before,.ion-social-facebook-outline:before,.ion-social-foursquare:before,.ion-social-foursquare-outline:before,.ion-social-freebsd-devil:before,.ion-social-github:before,.ion-social-github-outline:before,.ion-social-google:before,.ion-social-google-outline:before,.ion-social-googleplus:before,.ion-social-googleplus-outline:before,.ion-social-hackernews:before,.ion-social-hackernews-outline:before,.ion-social-html5:before,.ion-social-html5-outline:before,.ion-social-instagram:before,.ion-social-instagram-outline:before,.ion-social-javascript:before,.ion-social-javascript-outline:before,.ion-social-linkedin:before,.ion-social-linkedin-outline:before,.ion-social-markdown:before,.ion-social-nodejs:before,.ion-social-octocat:before,.ion-social-pinterest:before,.ion-social-pinterest-outline:before,.ion-social-python:before,.ion-social-reddit:before,.ion-social-reddit-outline:before,.ion-social-rss:before,.ion-social-rss-outline:before,.ion-social-sass:before,.ion-social-skype:before,.ion-social-skype-outline:before,.ion-social-snapchat:before,.ion-social-snapchat-outline:before,.ion-social-tumblr:before,.ion-social-tumblr-outline:before,.ion-social-tux:before,.ion-social-twitch:before,.ion-social-twitch-outline:before,.ion-social-twitter:before,.ion-social-twitter-outline:before,.ion-social-usd:before,.ion-social-usd-outline:before,.ion-social-vimeo:before,.ion-social-vimeo-outline:before,.ion-social-whatsapp:before,.ion-social-whatsapp-outline:before,.ion-social-windows:before,.ion-social-windows-outline:before,.ion-social-wordpress:before,.ion-social-wordpress-outline:before,.ion-social-yahoo:before,.ion-social-yahoo-outline:before,.ion-social-yen:before,.ion-social-yen-outline:before,.ion-social-youtube:before,.ion-social-youtube-outline:before,.ion-soup-can:before,.ion-soup-can-outline:before,.ion-speakerphone:before,.ion-speedometer:before,.ion-spoon:before,.ion-star:before,.ion-stats-bars:before,.ion-steam:before,.ion-stop:before,.ion-thermometer:before,.ion-thumbsdown:before,.ion-thumbsup:before,.ion-toggle:before,.ion-toggle-filled:before,.ion-transgender:before,.ion-trash-a:before,.ion-trash-b:before,.ion-trophy:before,.ion-tshirt:before,.ion-tshirt-outline:before,.ion-umbrella:before,.ion-university:before,.ion-unlocked:before,.ion-upload:before,.ion-usb:before,.ion-videocamera:before,.ion-volume-high:before,.ion-volume-low:before,.ion-volume-medium:before,.ion-volume-mute:before,.ion-wand:before,.ion-waterdrop:before,.ion-wifi:before,.ion-wineglass:before,.ion-woman:before,.ion-wrench:before,.ion-xbox:before{display:inline-block;font-family:\"Ionicons\";speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;text-rendering:auto;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.ion-alert:before{content:\"\\F101\"}.ion-alert-circled:before{content:\"\\F100\"}.ion-android-add:before{content:\"\\F2C7\"}.ion-android-add-circle:before{content:\"\\F359\"}.ion-android-alarm-clock:before{content:\"\\F35A\"}.ion-android-alert:before{content:\"\\F35B\"}.ion-android-apps:before{content:\"\\F35C\"}.ion-android-archive:before{content:\"\\F2C9\"}.ion-android-arrow-back:before{content:\"\\F2CA\"}.ion-android-arrow-down:before{content:\"\\F35D\"}.ion-android-arrow-dropdown:before{content:\"\\F35F\"}.ion-android-arrow-dropdown-circle:before{content:\"\\F35E\"}.ion-android-arrow-dropleft:before{content:\"\\F361\"}.ion-android-arrow-dropleft-circle:before{content:\"\\F360\"}.ion-android-arrow-dropright:before{content:\"\\F363\"}.ion-android-arrow-dropright-circle:before{content:\"\\F362\"}.ion-android-arrow-dropup:before{content:\"\\F365\"}.ion-android-arrow-dropup-circle:before{content:\"\\F364\"}.ion-android-arrow-forward:before{content:\"\\F30F\"}.ion-android-arrow-up:before{content:\"\\F366\"}.ion-android-attach:before{content:\"\\F367\"}.ion-android-bar:before{content:\"\\F368\"}.ion-android-bicycle:before{content:\"\\F369\"}.ion-android-boat:before{content:\"\\F36A\"}.ion-android-bookmark:before{content:\"\\F36B\"}.ion-android-bulb:before{content:\"\\F36C\"}.ion-android-bus:before{content:\"\\F36D\"}.ion-android-calendar:before{content:\"\\F2D1\"}.ion-android-call:before{content:\"\\F2D2\"}.ion-android-camera:before{content:\"\\F2D3\"}.ion-android-cancel:before{content:\"\\F36E\"}.ion-android-car:before{content:\"\\F36F\"}.ion-android-cart:before{content:\"\\F370\"}.ion-android-chat:before{content:\"\\F2D4\"}.ion-android-checkbox:before{content:\"\\F374\"}.ion-android-checkbox-blank:before{content:\"\\F371\"}.ion-android-checkbox-outline:before{content:\"\\F373\"}.ion-android-checkbox-outline-blank:before{content:\"\\F372\"}.ion-android-checkmark-circle:before{content:\"\\F375\"}.ion-android-clipboard:before{content:\"\\F376\"}.ion-android-close:before{content:\"\\F2D7\"}.ion-android-cloud:before{content:\"\\F37A\"}.ion-android-cloud-circle:before{content:\"\\F377\"}.ion-android-cloud-done:before{content:\"\\F378\"}.ion-android-cloud-outline:before{content:\"\\F379\"}.ion-android-color-palette:before{content:\"\\F37B\"}.ion-android-compass:before{content:\"\\F37C\"}.ion-android-contact:before{content:\"\\F2D8\"}.ion-android-contacts:before{content:\"\\F2D9\"}.ion-android-contract:before{content:\"\\F37D\"}.ion-android-create:before{content:\"\\F37E\"}.ion-android-delete:before{content:\"\\F37F\"}.ion-android-desktop:before{content:\"\\F380\"}.ion-android-document:before{content:\"\\F381\"}.ion-android-done:before{content:\"\\F383\"}.ion-android-done-all:before{content:\"\\F382\"}.ion-android-download:before{content:\"\\F2DD\"}.ion-android-drafts:before{content:\"\\F384\"}.ion-android-exit:before{content:\"\\F385\"}.ion-android-expand:before{content:\"\\F386\"}.ion-android-favorite:before{content:\"\\F388\"}.ion-android-favorite-outline:before{content:\"\\F387\"}.ion-android-film:before{content:\"\\F389\"}.ion-android-folder:before{content:\"\\F2E0\"}.ion-android-folder-open:before{content:\"\\F38A\"}.ion-android-funnel:before{content:\"\\F38B\"}.ion-android-globe:before{content:\"\\F38C\"}.ion-android-hand:before{content:\"\\F2E3\"}.ion-android-hangout:before{content:\"\\F38D\"}.ion-android-happy:before{content:\"\\F38E\"}.ion-android-home:before{content:\"\\F38F\"}.ion-android-image:before{content:\"\\F2E4\"}.ion-android-laptop:before{content:\"\\F390\"}.ion-android-list:before{content:\"\\F391\"}.ion-android-locate:before{content:\"\\F2E9\"}.ion-android-lock:before{content:\"\\F392\"}.ion-android-mail:before{content:\"\\F2EB\"}.ion-android-map:before{content:\"\\F393\"}.ion-android-menu:before{content:\"\\F394\"}.ion-android-microphone:before{content:\"\\F2EC\"}.ion-android-microphone-off:before{content:\"\\F395\"}.ion-android-more-horizontal:before{content:\"\\F396\"}.ion-android-more-vertical:before{content:\"\\F397\"}.ion-android-navigate:before{content:\"\\F398\"}.ion-android-notifications:before{content:\"\\F39B\"}.ion-android-notifications-none:before{content:\"\\F399\"}.ion-android-notifications-off:before{content:\"\\F39A\"}.ion-android-open:before{content:\"\\F39C\"}.ion-android-options:before{content:\"\\F39D\"}.ion-android-people:before{content:\"\\F39E\"}.ion-android-person:before{content:\"\\F3A0\"}.ion-android-person-add:before{content:\"\\F39F\"}.ion-android-phone-landscape:before{content:\"\\F3A1\"}.ion-android-phone-portrait:before{content:\"\\F3A2\"}.ion-android-pin:before{content:\"\\F3A3\"}.ion-android-plane:before{content:\"\\F3A4\"}.ion-android-playstore:before{content:\"\\F2F0\"}.ion-android-print:before{content:\"\\F3A5\"}.ion-android-radio-button-off:before{content:\"\\F3A6\"}.ion-android-radio-button-on:before{content:\"\\F3A7\"}.ion-android-refresh:before{content:\"\\F3A8\"}.ion-android-remove:before{content:\"\\F2F4\"}.ion-android-remove-circle:before{content:\"\\F3A9\"}.ion-android-restaurant:before{content:\"\\F3AA\"}.ion-android-sad:before{content:\"\\F3AB\"}.ion-android-search:before{content:\"\\F2F5\"}.ion-android-send:before{content:\"\\F2F6\"}.ion-android-settings:before{content:\"\\F2F7\"}.ion-android-share:before{content:\"\\F2F8\"}.ion-android-share-alt:before{content:\"\\F3AC\"}.ion-android-star:before{content:\"\\F2FC\"}.ion-android-star-half:before{content:\"\\F3AD\"}.ion-android-star-outline:before{content:\"\\F3AE\"}.ion-android-stopwatch:before{content:\"\\F2FD\"}.ion-android-subway:before{content:\"\\F3AF\"}.ion-android-sunny:before{content:\"\\F3B0\"}.ion-android-sync:before{content:\"\\F3B1\"}.ion-android-textsms:before{content:\"\\F3B2\"}.ion-android-time:before{content:\"\\F3B3\"}.ion-android-train:before{content:\"\\F3B4\"}.ion-android-unlock:before{content:\"\\F3B5\"}.ion-android-upload:before{content:\"\\F3B6\"}.ion-android-volume-down:before{content:\"\\F3B7\"}.ion-android-volume-mute:before{content:\"\\F3B8\"}.ion-android-volume-off:before{content:\"\\F3B9\"}.ion-android-volume-up:before{content:\"\\F3BA\"}.ion-android-walk:before{content:\"\\F3BB\"}.ion-android-warning:before{content:\"\\F3BC\"}.ion-android-watch:before{content:\"\\F3BD\"}.ion-android-wifi:before{content:\"\\F305\"}.ion-aperture:before{content:\"\\F313\"}.ion-archive:before{content:\"\\F102\"}.ion-arrow-down-a:before{content:\"\\F103\"}.ion-arrow-down-b:before{content:\"\\F104\"}.ion-arrow-down-c:before{content:\"\\F105\"}.ion-arrow-expand:before{content:\"\\F25E\"}.ion-arrow-graph-down-left:before{content:\"\\F25F\"}.ion-arrow-graph-down-right:before{content:\"\\F260\"}.ion-arrow-graph-up-left:before{content:\"\\F261\"}.ion-arrow-graph-up-right:before{content:\"\\F262\"}.ion-arrow-left-a:before{content:\"\\F106\"}.ion-arrow-left-b:before{content:\"\\F107\"}.ion-arrow-left-c:before{content:\"\\F108\"}.ion-arrow-move:before{content:\"\\F263\"}.ion-arrow-resize:before{content:\"\\F264\"}.ion-arrow-return-left:before{content:\"\\F265\"}.ion-arrow-return-right:before{content:\"\\F266\"}.ion-arrow-right-a:before{content:\"\\F109\"}.ion-arrow-right-b:before{content:\"\\F10A\"}.ion-arrow-right-c:before{content:\"\\F10B\"}.ion-arrow-shrink:before{content:\"\\F267\"}.ion-arrow-swap:before{content:\"\\F268\"}.ion-arrow-up-a:before{content:\"\\F10C\"}.ion-arrow-up-b:before{content:\"\\F10D\"}.ion-arrow-up-c:before{content:\"\\F10E\"}.ion-asterisk:before{content:\"\\F314\"}.ion-at:before{content:\"\\F10F\"}.ion-backspace:before{content:\"\\F3BF\"}.ion-backspace-outline:before{content:\"\\F3BE\"}.ion-bag:before{content:\"\\F110\"}.ion-battery-charging:before{content:\"\\F111\"}.ion-battery-empty:before{content:\"\\F112\"}.ion-battery-full:before{content:\"\\F113\"}.ion-battery-half:before{content:\"\\F114\"}.ion-battery-low:before{content:\"\\F115\"}.ion-beaker:before{content:\"\\F269\"}.ion-beer:before{content:\"\\F26A\"}.ion-bluetooth:before{content:\"\\F116\"}.ion-bonfire:before{content:\"\\F315\"}.ion-bookmark:before{content:\"\\F26B\"}.ion-bowtie:before{content:\"\\F3C0\"}.ion-briefcase:before{content:\"\\F26C\"}.ion-bug:before{content:\"\\F2BE\"}.ion-calculator:before{content:\"\\F26D\"}.ion-calendar:before{content:\"\\F117\"}.ion-camera:before{content:\"\\F118\"}.ion-card:before{content:\"\\F119\"}.ion-cash:before{content:\"\\F316\"}.ion-chatbox:before{content:\"\\F11B\"}.ion-chatbox-working:before{content:\"\\F11A\"}.ion-chatboxes:before{content:\"\\F11C\"}.ion-chatbubble:before{content:\"\\F11E\"}.ion-chatbubble-working:before{content:\"\\F11D\"}.ion-chatbubbles:before{content:\"\\F11F\"}.ion-checkmark:before{content:\"\\F122\"}.ion-checkmark-circled:before{content:\"\\F120\"}.ion-checkmark-round:before{content:\"\\F121\"}.ion-chevron-down:before{content:\"\\F123\"}.ion-chevron-left:before{content:\"\\F124\"}.ion-chevron-right:before{content:\"\\F125\"}.ion-chevron-up:before{content:\"\\F126\"}.ion-clipboard:before{content:\"\\F127\"}.ion-clock:before{content:\"\\F26E\"}.ion-close:before{content:\"\\F12A\"}.ion-close-circled:before{content:\"\\F128\"}.ion-close-round:before{content:\"\\F129\"}.ion-closed-captioning:before{content:\"\\F317\"}.ion-cloud:before{content:\"\\F12B\"}.ion-code:before{content:\"\\F271\"}.ion-code-download:before{content:\"\\F26F\"}.ion-code-working:before{content:\"\\F270\"}.ion-coffee:before{content:\"\\F272\"}.ion-compass:before{content:\"\\F273\"}.ion-compose:before{content:\"\\F12C\"}.ion-connection-bars:before{content:\"\\F274\"}.ion-contrast:before{content:\"\\F275\"}.ion-crop:before{content:\"\\F3C1\"}.ion-cube:before{content:\"\\F318\"}.ion-disc:before{content:\"\\F12D\"}.ion-document:before{content:\"\\F12F\"}.ion-document-text:before{content:\"\\F12E\"}.ion-drag:before{content:\"\\F130\"}.ion-earth:before{content:\"\\F276\"}.ion-easel:before{content:\"\\F3C2\"}.ion-edit:before{content:\"\\F2BF\"}.ion-egg:before{content:\"\\F277\"}.ion-eject:before{content:\"\\F131\"}.ion-email:before{content:\"\\F132\"}.ion-email-unread:before{content:\"\\F3C3\"}.ion-erlenmeyer-flask:before{content:\"\\F3C5\"}.ion-erlenmeyer-flask-bubbles:before{content:\"\\F3C4\"}.ion-eye:before{content:\"\\F133\"}.ion-eye-disabled:before{content:\"\\F306\"}.ion-female:before{content:\"\\F278\"}.ion-filing:before{content:\"\\F134\"}.ion-film-marker:before{content:\"\\F135\"}.ion-fireball:before{content:\"\\F319\"}.ion-flag:before{content:\"\\F279\"}.ion-flame:before{content:\"\\F31A\"}.ion-flash:before{content:\"\\F137\"}.ion-flash-off:before{content:\"\\F136\"}.ion-folder:before{content:\"\\F139\"}.ion-fork:before{content:\"\\F27A\"}.ion-fork-repo:before{content:\"\\F2C0\"}.ion-forward:before{content:\"\\F13A\"}.ion-funnel:before{content:\"\\F31B\"}.ion-gear-a:before{content:\"\\F13D\"}.ion-gear-b:before{content:\"\\F13E\"}.ion-grid:before{content:\"\\F13F\"}.ion-hammer:before{content:\"\\F27B\"}.ion-happy:before{content:\"\\F31C\"}.ion-happy-outline:before{content:\"\\F3C6\"}.ion-headphone:before{content:\"\\F140\"}.ion-heart:before{content:\"\\F141\"}.ion-heart-broken:before{content:\"\\F31D\"}.ion-help:before{content:\"\\F143\"}.ion-help-buoy:before{content:\"\\F27C\"}.ion-help-circled:before{content:\"\\F142\"}.ion-home:before{content:\"\\F144\"}.ion-icecream:before{content:\"\\F27D\"}.ion-image:before{content:\"\\F147\"}.ion-images:before{content:\"\\F148\"}.ion-information:before{content:\"\\F14A\"}.ion-information-circled:before{content:\"\\F149\"}.ion-ionic:before{content:\"\\F14B\"}.ion-ios-alarm:before{content:\"\\F3C8\"}.ion-ios-alarm-outline:before{content:\"\\F3C7\"}.ion-ios-albums:before{content:\"\\F3CA\"}.ion-ios-albums-outline:before{content:\"\\F3C9\"}.ion-ios-americanfootball:before{content:\"\\F3CC\"}.ion-ios-americanfootball-outline:before{content:\"\\F3CB\"}.ion-ios-analytics:before{content:\"\\F3CE\"}.ion-ios-analytics-outline:before{content:\"\\F3CD\"}.ion-ios-arrow-back:before{content:\"\\F3CF\"}.ion-ios-arrow-down:before{content:\"\\F3D0\"}.ion-ios-arrow-forward:before{content:\"\\F3D1\"}.ion-ios-arrow-left:before{content:\"\\F3D2\"}.ion-ios-arrow-right:before{content:\"\\F3D3\"}.ion-ios-arrow-thin-down:before{content:\"\\F3D4\"}.ion-ios-arrow-thin-left:before{content:\"\\F3D5\"}.ion-ios-arrow-thin-right:before{content:\"\\F3D6\"}.ion-ios-arrow-thin-up:before{content:\"\\F3D7\"}.ion-ios-arrow-up:before{content:\"\\F3D8\"}.ion-ios-at:before{content:\"\\F3DA\"}.ion-ios-at-outline:before{content:\"\\F3D9\"}.ion-ios-barcode:before{content:\"\\F3DC\"}.ion-ios-barcode-outline:before{content:\"\\F3DB\"}.ion-ios-baseball:before{content:\"\\F3DE\"}.ion-ios-baseball-outline:before{content:\"\\F3DD\"}.ion-ios-basketball:before{content:\"\\F3E0\"}.ion-ios-basketball-outline:before{content:\"\\F3DF\"}.ion-ios-bell:before{content:\"\\F3E2\"}.ion-ios-bell-outline:before{content:\"\\F3E1\"}.ion-ios-body:before{content:\"\\F3E4\"}.ion-ios-body-outline:before{content:\"\\F3E3\"}.ion-ios-bolt:before{content:\"\\F3E6\"}.ion-ios-bolt-outline:before{content:\"\\F3E5\"}.ion-ios-book:before{content:\"\\F3E8\"}.ion-ios-book-outline:before{content:\"\\F3E7\"}.ion-ios-bookmarks:before{content:\"\\F3EA\"}.ion-ios-bookmarks-outline:before{content:\"\\F3E9\"}.ion-ios-box:before{content:\"\\F3EC\"}.ion-ios-box-outline:before{content:\"\\F3EB\"}.ion-ios-briefcase:before{content:\"\\F3EE\"}.ion-ios-briefcase-outline:before{content:\"\\F3ED\"}.ion-ios-browsers:before{content:\"\\F3F0\"}.ion-ios-browsers-outline:before{content:\"\\F3EF\"}.ion-ios-calculator:before{content:\"\\F3F2\"}.ion-ios-calculator-outline:before{content:\"\\F3F1\"}.ion-ios-calendar:before{content:\"\\F3F4\"}.ion-ios-calendar-outline:before{content:\"\\F3F3\"}.ion-ios-camera:before{content:\"\\F3F6\"}.ion-ios-camera-outline:before{content:\"\\F3F5\"}.ion-ios-cart:before{content:\"\\F3F8\"}.ion-ios-cart-outline:before{content:\"\\F3F7\"}.ion-ios-chatboxes:before{content:\"\\F3FA\"}.ion-ios-chatboxes-outline:before{content:\"\\F3F9\"}.ion-ios-chatbubble:before{content:\"\\F3FC\"}.ion-ios-chatbubble-outline:before{content:\"\\F3FB\"}.ion-ios-checkmark:before{content:\"\\F3FF\"}.ion-ios-checkmark-empty:before{content:\"\\F3FD\"}.ion-ios-checkmark-outline:before{content:\"\\F3FE\"}.ion-ios-circle-filled:before{content:\"\\F400\"}.ion-ios-circle-outline:before{content:\"\\F401\"}.ion-ios-clock:before{content:\"\\F403\"}.ion-ios-clock-outline:before{content:\"\\F402\"}.ion-ios-close:before{content:\"\\F406\"}.ion-ios-close-empty:before{content:\"\\F404\"}.ion-ios-close-outline:before{content:\"\\F405\"}.ion-ios-cloud:before{content:\"\\F40C\"}.ion-ios-cloud-download:before{content:\"\\F408\"}.ion-ios-cloud-download-outline:before{content:\"\\F407\"}.ion-ios-cloud-outline:before{content:\"\\F409\"}.ion-ios-cloud-upload:before{content:\"\\F40B\"}.ion-ios-cloud-upload-outline:before{content:\"\\F40A\"}.ion-ios-cloudy:before{content:\"\\F410\"}.ion-ios-cloudy-night:before{content:\"\\F40E\"}.ion-ios-cloudy-night-outline:before{content:\"\\F40D\"}.ion-ios-cloudy-outline:before{content:\"\\F40F\"}.ion-ios-cog:before{content:\"\\F412\"}.ion-ios-cog-outline:before{content:\"\\F411\"}.ion-ios-color-filter:before{content:\"\\F414\"}.ion-ios-color-filter-outline:before{content:\"\\F413\"}.ion-ios-color-wand:before{content:\"\\F416\"}.ion-ios-color-wand-outline:before{content:\"\\F415\"}.ion-ios-compose:before{content:\"\\F418\"}.ion-ios-compose-outline:before{content:\"\\F417\"}.ion-ios-contact:before{content:\"\\F41A\"}.ion-ios-contact-outline:before{content:\"\\F419\"}.ion-ios-copy:before{content:\"\\F41C\"}.ion-ios-copy-outline:before{content:\"\\F41B\"}.ion-ios-crop:before{content:\"\\F41E\"}.ion-ios-crop-strong:before{content:\"\\F41D\"}.ion-ios-download:before{content:\"\\F420\"}.ion-ios-download-outline:before{content:\"\\F41F\"}.ion-ios-drag:before{content:\"\\F421\"}.ion-ios-email:before{content:\"\\F423\"}.ion-ios-email-outline:before{content:\"\\F422\"}.ion-ios-eye:before{content:\"\\F425\"}.ion-ios-eye-outline:before{content:\"\\F424\"}.ion-ios-fastforward:before{content:\"\\F427\"}.ion-ios-fastforward-outline:before{content:\"\\F426\"}.ion-ios-filing:before{content:\"\\F429\"}.ion-ios-filing-outline:before{content:\"\\F428\"}.ion-ios-film:before{content:\"\\F42B\"}.ion-ios-film-outline:before{content:\"\\F42A\"}.ion-ios-flag:before{content:\"\\F42D\"}.ion-ios-flag-outline:before{content:\"\\F42C\"}.ion-ios-flame:before{content:\"\\F42F\"}.ion-ios-flame-outline:before{content:\"\\F42E\"}.ion-ios-flask:before{content:\"\\F431\"}.ion-ios-flask-outline:before{content:\"\\F430\"}.ion-ios-flower:before{content:\"\\F433\"}.ion-ios-flower-outline:before{content:\"\\F432\"}.ion-ios-folder:before{content:\"\\F435\"}.ion-ios-folder-outline:before{content:\"\\F434\"}.ion-ios-football:before{content:\"\\F437\"}.ion-ios-football-outline:before{content:\"\\F436\"}.ion-ios-game-controller-a:before{content:\"\\F439\"}.ion-ios-game-controller-a-outline:before{content:\"\\F438\"}.ion-ios-game-controller-b:before{content:\"\\F43B\"}.ion-ios-game-controller-b-outline:before{content:\"\\F43A\"}.ion-ios-gear:before{content:\"\\F43D\"}.ion-ios-gear-outline:before{content:\"\\F43C\"}.ion-ios-glasses:before{content:\"\\F43F\"}.ion-ios-glasses-outline:before{content:\"\\F43E\"}.ion-ios-grid-view:before{content:\"\\F441\"}.ion-ios-grid-view-outline:before{content:\"\\F440\"}.ion-ios-heart:before{content:\"\\F443\"}.ion-ios-heart-outline:before{content:\"\\F442\"}.ion-ios-help:before{content:\"\\F446\"}.ion-ios-help-empty:before{content:\"\\F444\"}.ion-ios-help-outline:before{content:\"\\F445\"}.ion-ios-home:before{content:\"\\F448\"}.ion-ios-home-outline:before{content:\"\\F447\"}.ion-ios-infinite:before{content:\"\\F44A\"}.ion-ios-infinite-outline:before{content:\"\\F449\"}.ion-ios-information:before{content:\"\\F44D\"}.ion-ios-information-empty:before{content:\"\\F44B\"}.ion-ios-information-outline:before{content:\"\\F44C\"}.ion-ios-ionic-outline:before{content:\"\\F44E\"}.ion-ios-keypad:before{content:\"\\F450\"}.ion-ios-keypad-outline:before{content:\"\\F44F\"}.ion-ios-lightbulb:before{content:\"\\F452\"}.ion-ios-lightbulb-outline:before{content:\"\\F451\"}.ion-ios-list:before{content:\"\\F454\"}.ion-ios-list-outline:before{content:\"\\F453\"}.ion-ios-location:before{content:\"\\F456\"}.ion-ios-location-outline:before{content:\"\\F455\"}.ion-ios-locked:before{content:\"\\F458\"}.ion-ios-locked-outline:before{content:\"\\F457\"}.ion-ios-loop:before{content:\"\\F45A\"}.ion-ios-loop-strong:before{content:\"\\F459\"}.ion-ios-medical:before{content:\"\\F45C\"}.ion-ios-medical-outline:before{content:\"\\F45B\"}.ion-ios-medkit:before{content:\"\\F45E\"}.ion-ios-medkit-outline:before{content:\"\\F45D\"}.ion-ios-mic:before{content:\"\\F461\"}.ion-ios-mic-off:before{content:\"\\F45F\"}.ion-ios-mic-outline:before{content:\"\\F460\"}.ion-ios-minus:before{content:\"\\F464\"}.ion-ios-minus-empty:before{content:\"\\F462\"}.ion-ios-minus-outline:before{content:\"\\F463\"}.ion-ios-monitor:before{content:\"\\F466\"}.ion-ios-monitor-outline:before{content:\"\\F465\"}.ion-ios-moon:before{content:\"\\F468\"}.ion-ios-moon-outline:before{content:\"\\F467\"}.ion-ios-more:before{content:\"\\F46A\"}.ion-ios-more-outline:before{content:\"\\F469\"}.ion-ios-musical-note:before{content:\"\\F46B\"}.ion-ios-musical-notes:before{content:\"\\F46C\"}.ion-ios-navigate:before{content:\"\\F46E\"}.ion-ios-navigate-outline:before{content:\"\\F46D\"}.ion-ios-nutrition:before{content:\"\\F470\"}.ion-ios-nutrition-outline:before{content:\"\\F46F\"}.ion-ios-paper:before{content:\"\\F472\"}.ion-ios-paper-outline:before{content:\"\\F471\"}.ion-ios-paperplane:before{content:\"\\F474\"}.ion-ios-paperplane-outline:before{content:\"\\F473\"}.ion-ios-partlysunny:before{content:\"\\F476\"}.ion-ios-partlysunny-outline:before{content:\"\\F475\"}.ion-ios-pause:before{content:\"\\F478\"}.ion-ios-pause-outline:before{content:\"\\F477\"}.ion-ios-paw:before{content:\"\\F47A\"}.ion-ios-paw-outline:before{content:\"\\F479\"}.ion-ios-people:before{content:\"\\F47C\"}.ion-ios-people-outline:before{content:\"\\F47B\"}.ion-ios-person:before{content:\"\\F47E\"}.ion-ios-person-outline:before{content:\"\\F47D\"}.ion-ios-personadd:before{content:\"\\F480\"}.ion-ios-personadd-outline:before{content:\"\\F47F\"}.ion-ios-photos:before{content:\"\\F482\"}.ion-ios-photos-outline:before{content:\"\\F481\"}.ion-ios-pie:before{content:\"\\F484\"}.ion-ios-pie-outline:before{content:\"\\F483\"}.ion-ios-pint:before{content:\"\\F486\"}.ion-ios-pint-outline:before{content:\"\\F485\"}.ion-ios-play:before{content:\"\\F488\"}.ion-ios-play-outline:before{content:\"\\F487\"}.ion-ios-plus:before{content:\"\\F48B\"}.ion-ios-plus-empty:before{content:\"\\F489\"}.ion-ios-plus-outline:before{content:\"\\F48A\"}.ion-ios-pricetag:before{content:\"\\F48D\"}.ion-ios-pricetag-outline:before{content:\"\\F48C\"}.ion-ios-pricetags:before{content:\"\\F48F\"}.ion-ios-pricetags-outline:before{content:\"\\F48E\"}.ion-ios-printer:before{content:\"\\F491\"}.ion-ios-printer-outline:before{content:\"\\F490\"}.ion-ios-pulse:before{content:\"\\F493\"}.ion-ios-pulse-strong:before{content:\"\\F492\"}.ion-ios-rainy:before{content:\"\\F495\"}.ion-ios-rainy-outline:before{content:\"\\F494\"}.ion-ios-recording:before{content:\"\\F497\"}.ion-ios-recording-outline:before{content:\"\\F496\"}.ion-ios-redo:before{content:\"\\F499\"}.ion-ios-redo-outline:before{content:\"\\F498\"}.ion-ios-refresh:before{content:\"\\F49C\"}.ion-ios-refresh-empty:before{content:\"\\F49A\"}.ion-ios-refresh-outline:before{content:\"\\F49B\"}.ion-ios-reload:before{content:\"\\F49D\"}.ion-ios-reverse-camera:before{content:\"\\F49F\"}.ion-ios-reverse-camera-outline:before{content:\"\\F49E\"}.ion-ios-rewind:before{content:\"\\F4A1\"}.ion-ios-rewind-outline:before{content:\"\\F4A0\"}.ion-ios-rose:before{content:\"\\F4A3\"}.ion-ios-rose-outline:before{content:\"\\F4A2\"}.ion-ios-search:before{content:\"\\F4A5\"}.ion-ios-search-strong:before{content:\"\\F4A4\"}.ion-ios-settings:before{content:\"\\F4A7\"}.ion-ios-settings-strong:before{content:\"\\F4A6\"}.ion-ios-shuffle:before{content:\"\\F4A9\"}.ion-ios-shuffle-strong:before{content:\"\\F4A8\"}.ion-ios-skipbackward:before{content:\"\\F4AB\"}.ion-ios-skipbackward-outline:before{content:\"\\F4AA\"}.ion-ios-skipforward:before{content:\"\\F4AD\"}.ion-ios-skipforward-outline:before{content:\"\\F4AC\"}.ion-ios-snowy:before{content:\"\\F4AE\"}.ion-ios-speedometer:before{content:\"\\F4B0\"}.ion-ios-speedometer-outline:before{content:\"\\F4AF\"}.ion-ios-star:before{content:\"\\F4B3\"}.ion-ios-star-half:before{content:\"\\F4B1\"}.ion-ios-star-outline:before{content:\"\\F4B2\"}.ion-ios-stopwatch:before{content:\"\\F4B5\"}.ion-ios-stopwatch-outline:before{content:\"\\F4B4\"}.ion-ios-sunny:before{content:\"\\F4B7\"}.ion-ios-sunny-outline:before{content:\"\\F4B6\"}.ion-ios-telephone:before{content:\"\\F4B9\"}.ion-ios-telephone-outline:before{content:\"\\F4B8\"}.ion-ios-tennisball:before{content:\"\\F4BB\"}.ion-ios-tennisball-outline:before{content:\"\\F4BA\"}.ion-ios-thunderstorm:before{content:\"\\F4BD\"}.ion-ios-thunderstorm-outline:before{content:\"\\F4BC\"}.ion-ios-time:before{content:\"\\F4BF\"}.ion-ios-time-outline:before{content:\"\\F4BE\"}.ion-ios-timer:before{content:\"\\F4C1\"}.ion-ios-timer-outline:before{content:\"\\F4C0\"}.ion-ios-toggle:before{content:\"\\F4C3\"}.ion-ios-toggle-outline:before{content:\"\\F4C2\"}.ion-ios-trash:before{content:\"\\F4C5\"}.ion-ios-trash-outline:before{content:\"\\F4C4\"}.ion-ios-undo:before{content:\"\\F4C7\"}.ion-ios-undo-outline:before{content:\"\\F4C6\"}.ion-ios-unlocked:before{content:\"\\F4C9\"}.ion-ios-unlocked-outline:before{content:\"\\F4C8\"}.ion-ios-upload:before{content:\"\\F4CB\"}.ion-ios-upload-outline:before{content:\"\\F4CA\"}.ion-ios-videocam:before{content:\"\\F4CD\"}.ion-ios-videocam-outline:before{content:\"\\F4CC\"}.ion-ios-volume-high:before{content:\"\\F4CE\"}.ion-ios-volume-low:before{content:\"\\F4CF\"}.ion-ios-wineglass:before{content:\"\\F4D1\"}.ion-ios-wineglass-outline:before{content:\"\\F4D0\"}.ion-ios-world:before{content:\"\\F4D3\"}.ion-ios-world-outline:before{content:\"\\F4D2\"}.ion-ipad:before{content:\"\\F1F9\"}.ion-iphone:before{content:\"\\F1FA\"}.ion-ipod:before{content:\"\\F1FB\"}.ion-jet:before{content:\"\\F295\"}.ion-key:before{content:\"\\F296\"}.ion-knife:before{content:\"\\F297\"}.ion-laptop:before{content:\"\\F1FC\"}.ion-leaf:before{content:\"\\F1FD\"}.ion-levels:before{content:\"\\F298\"}.ion-lightbulb:before{content:\"\\F299\"}.ion-link:before{content:\"\\F1FE\"}.ion-load-a:before{content:\"\\F29A\"}.ion-load-b:before{content:\"\\F29B\"}.ion-load-c:before{content:\"\\F29C\"}.ion-load-d:before{content:\"\\F29D\"}.ion-location:before{content:\"\\F1FF\"}.ion-lock-combination:before{content:\"\\F4D4\"}.ion-locked:before{content:\"\\F200\"}.ion-log-in:before{content:\"\\F29E\"}.ion-log-out:before{content:\"\\F29F\"}.ion-loop:before{content:\"\\F201\"}.ion-magnet:before{content:\"\\F2A0\"}.ion-male:before{content:\"\\F2A1\"}.ion-man:before{content:\"\\F202\"}.ion-map:before{content:\"\\F203\"}.ion-medkit:before{content:\"\\F2A2\"}.ion-merge:before{content:\"\\F33F\"}.ion-mic-a:before{content:\"\\F204\"}.ion-mic-b:before{content:\"\\F205\"}.ion-mic-c:before{content:\"\\F206\"}.ion-minus:before{content:\"\\F209\"}.ion-minus-circled:before{content:\"\\F207\"}.ion-minus-round:before{content:\"\\F208\"}.ion-model-s:before{content:\"\\F2C1\"}.ion-monitor:before{content:\"\\F20A\"}.ion-more:before{content:\"\\F20B\"}.ion-mouse:before{content:\"\\F340\"}.ion-music-note:before{content:\"\\F20C\"}.ion-navicon:before{content:\"\\F20E\"}.ion-navicon-round:before{content:\"\\F20D\"}.ion-navigate:before{content:\"\\F2A3\"}.ion-network:before{content:\"\\F341\"}.ion-no-smoking:before{content:\"\\F2C2\"}.ion-nuclear:before{content:\"\\F2A4\"}.ion-outlet:before{content:\"\\F342\"}.ion-paintbrush:before{content:\"\\F4D5\"}.ion-paintbucket:before{content:\"\\F4D6\"}.ion-paper-airplane:before{content:\"\\F2C3\"}.ion-paperclip:before{content:\"\\F20F\"}.ion-pause:before{content:\"\\F210\"}.ion-person:before{content:\"\\F213\"}.ion-person-add:before{content:\"\\F211\"}.ion-person-stalker:before{content:\"\\F212\"}.ion-pie-graph:before{content:\"\\F2A5\"}.ion-pin:before{content:\"\\F2A6\"}.ion-pinpoint:before{content:\"\\F2A7\"}.ion-pizza:before{content:\"\\F2A8\"}.ion-plane:before{content:\"\\F214\"}.ion-planet:before{content:\"\\F343\"}.ion-play:before{content:\"\\F215\"}.ion-playstation:before{content:\"\\F30A\"}.ion-plus:before{content:\"\\F218\"}.ion-plus-circled:before{content:\"\\F216\"}.ion-plus-round:before{content:\"\\F217\"}.ion-podium:before{content:\"\\F344\"}.ion-pound:before{content:\"\\F219\"}.ion-power:before{content:\"\\F2A9\"}.ion-pricetag:before{content:\"\\F2AA\"}.ion-pricetags:before{content:\"\\F2AB\"}.ion-printer:before{content:\"\\F21A\"}.ion-pull-request:before{content:\"\\F345\"}.ion-qr-scanner:before{content:\"\\F346\"}.ion-quote:before{content:\"\\F347\"}.ion-radio-waves:before{content:\"\\F2AC\"}.ion-record:before{content:\"\\F21B\"}.ion-refresh:before{content:\"\\F21C\"}.ion-reply:before{content:\"\\F21E\"}.ion-reply-all:before{content:\"\\F21D\"}.ion-ribbon-a:before{content:\"\\F348\"}.ion-ribbon-b:before{content:\"\\F349\"}.ion-sad:before{content:\"\\F34A\"}.ion-sad-outline:before{content:\"\\F4D7\"}.ion-scissors:before{content:\"\\F34B\"}.ion-search:before{content:\"\\F21F\"}.ion-settings:before{content:\"\\F2AD\"}.ion-share:before{content:\"\\F220\"}.ion-shuffle:before{content:\"\\F221\"}.ion-skip-backward:before{content:\"\\F222\"}.ion-skip-forward:before{content:\"\\F223\"}.ion-social-android:before{content:\"\\F225\"}.ion-social-android-outline:before{content:\"\\F224\"}.ion-social-angular:before{content:\"\\F4D9\"}.ion-social-angular-outline:before{content:\"\\F4D8\"}.ion-social-apple:before{content:\"\\F227\"}.ion-social-apple-outline:before{content:\"\\F226\"}.ion-social-bitcoin:before{content:\"\\F2AF\"}.ion-social-bitcoin-outline:before{content:\"\\F2AE\"}.ion-social-buffer:before{content:\"\\F229\"}.ion-social-buffer-outline:before{content:\"\\F228\"}.ion-social-chrome:before{content:\"\\F4DB\"}.ion-social-chrome-outline:before{content:\"\\F4DA\"}.ion-social-codepen:before{content:\"\\F4DD\"}.ion-social-codepen-outline:before{content:\"\\F4DC\"}.ion-social-css3:before{content:\"\\F4DF\"}.ion-social-css3-outline:before{content:\"\\F4DE\"}.ion-social-designernews:before{content:\"\\F22B\"}.ion-social-designernews-outline:before{content:\"\\F22A\"}.ion-social-dribbble:before{content:\"\\F22D\"}.ion-social-dribbble-outline:before{content:\"\\F22C\"}.ion-social-dropbox:before{content:\"\\F22F\"}.ion-social-dropbox-outline:before{content:\"\\F22E\"}.ion-social-euro:before{content:\"\\F4E1\"}.ion-social-euro-outline:before{content:\"\\F4E0\"}.ion-social-facebook:before{content:\"\\F231\"}.ion-social-facebook-outline:before{content:\"\\F230\"}.ion-social-foursquare:before{content:\"\\F34D\"}.ion-social-foursquare-outline:before{content:\"\\F34C\"}.ion-social-freebsd-devil:before{content:\"\\F2C4\"}.ion-social-github:before{content:\"\\F233\"}.ion-social-github-outline:before{content:\"\\F232\"}.ion-social-google:before{content:\"\\F34F\"}.ion-social-google-outline:before{content:\"\\F34E\"}.ion-social-googleplus:before{content:\"\\F235\"}.ion-social-googleplus-outline:before{content:\"\\F234\"}.ion-social-hackernews:before{content:\"\\F237\"}.ion-social-hackernews-outline:before{content:\"\\F236\"}.ion-social-html5:before{content:\"\\F4E3\"}.ion-social-html5-outline:before{content:\"\\F4E2\"}.ion-social-instagram:before{content:\"\\F351\"}.ion-social-instagram-outline:before{content:\"\\F350\"}.ion-social-javascript:before{content:\"\\F4E5\"}.ion-social-javascript-outline:before{content:\"\\F4E4\"}.ion-social-linkedin:before{content:\"\\F239\"}.ion-social-linkedin-outline:before{content:\"\\F238\"}.ion-social-markdown:before{content:\"\\F4E6\"}.ion-social-nodejs:before{content:\"\\F4E7\"}.ion-social-octocat:before{content:\"\\F4E8\"}.ion-social-pinterest:before{content:\"\\F2B1\"}.ion-social-pinterest-outline:before{content:\"\\F2B0\"}.ion-social-python:before{content:\"\\F4E9\"}.ion-social-reddit:before{content:\"\\F23B\"}.ion-social-reddit-outline:before{content:\"\\F23A\"}.ion-social-rss:before{content:\"\\F23D\"}.ion-social-rss-outline:before{content:\"\\F23C\"}.ion-social-sass:before{content:\"\\F4EA\"}.ion-social-skype:before{content:\"\\F23F\"}.ion-social-skype-outline:before{content:\"\\F23E\"}.ion-social-snapchat:before{content:\"\\F4EC\"}.ion-social-snapchat-outline:before{content:\"\\F4EB\"}.ion-social-tumblr:before{content:\"\\F241\"}.ion-social-tumblr-outline:before{content:\"\\F240\"}.ion-social-tux:before{content:\"\\F2C5\"}.ion-social-twitch:before{content:\"\\F4EE\"}.ion-social-twitch-outline:before{content:\"\\F4ED\"}.ion-social-twitter:before{content:\"\\F243\"}.ion-social-twitter-outline:before{content:\"\\F242\"}.ion-social-usd:before{content:\"\\F353\"}.ion-social-usd-outline:before{content:\"\\F352\"}.ion-social-vimeo:before{content:\"\\F245\"}.ion-social-vimeo-outline:before{content:\"\\F244\"}.ion-social-whatsapp:before{content:\"\\F4F0\"}.ion-social-whatsapp-outline:before{content:\"\\F4EF\"}.ion-social-windows:before{content:\"\\F247\"}.ion-social-windows-outline:before{content:\"\\F246\"}.ion-social-wordpress:before{content:\"\\F249\"}.ion-social-wordpress-outline:before{content:\"\\F248\"}.ion-social-yahoo:before{content:\"\\F24B\"}.ion-social-yahoo-outline:before{content:\"\\F24A\"}.ion-social-yen:before{content:\"\\F4F2\"}.ion-social-yen-outline:before{content:\"\\F4F1\"}.ion-social-youtube:before{content:\"\\F24D\"}.ion-social-youtube-outline:before{content:\"\\F24C\"}.ion-soup-can:before{content:\"\\F4F4\"}.ion-soup-can-outline:before{content:\"\\F4F3\"}.ion-speakerphone:before{content:\"\\F2B2\"}.ion-speedometer:before{content:\"\\F2B3\"}.ion-spoon:before{content:\"\\F2B4\"}.ion-star:before{content:\"\\F24E\"}.ion-stats-bars:before{content:\"\\F2B5\"}.ion-steam:before{content:\"\\F30B\"}.ion-stop:before{content:\"\\F24F\"}.ion-thermometer:before{content:\"\\F2B6\"}.ion-thumbsdown:before{content:\"\\F250\"}.ion-thumbsup:before{content:\"\\F251\"}.ion-toggle:before{content:\"\\F355\"}.ion-toggle-filled:before{content:\"\\F354\"}.ion-transgender:before{content:\"\\F4F5\"}.ion-trash-a:before{content:\"\\F252\"}.ion-trash-b:before{content:\"\\F253\"}.ion-trophy:before{content:\"\\F356\"}.ion-tshirt:before{content:\"\\F4F7\"}.ion-tshirt-outline:before{content:\"\\F4F6\"}.ion-umbrella:before{content:\"\\F2B7\"}.ion-university:before{content:\"\\F357\"}.ion-unlocked:before{content:\"\\F254\"}.ion-upload:before{content:\"\\F255\"}.ion-usb:before{content:\"\\F2B8\"}.ion-videocamera:before{content:\"\\F256\"}.ion-volume-high:before{content:\"\\F257\"}.ion-volume-low:before{content:\"\\F258\"}.ion-volume-medium:before{content:\"\\F259\"}.ion-volume-mute:before{content:\"\\F25A\"}.ion-wand:before{content:\"\\F358\"}.ion-waterdrop:before{content:\"\\F25B\"}.ion-wifi:before{content:\"\\F25C\"}.ion-wineglass:before{content:\"\\F2B9\"}.ion-woman:before{content:\"\\F25D\"}.ion-wrench:before{content:\"\\F2BA\"}.ion-xbox:before{content:\"\\F30C\"}", ""]);
	
	// exports


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "19e65b89cee273a249fba4c09b951b74.eot";

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "dd4781d1acc57ba4c4808d1b44301201.ttf";

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2c159d0d05473040b53ec79df8797d32.woff";

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "aff28a207631f39ee0272d5cdde43ee7.svg";

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(222)();
	// imports
	
	
	// module
	exports.push([module.id, "@font-face{font-family:Material-Design-Iconic-Font;src:url(" + __webpack_require__(229) + ") format('woff2'),url(" + __webpack_require__(230) + ") format('woff'),url(" + __webpack_require__(231) + ") format('truetype')}.zmdi{display:inline-block;font:normal normal normal 14px/1 'Material-Design-Iconic-Font';font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.zmdi-hc-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.zmdi-hc-2x{font-size:2em}.zmdi-hc-3x{font-size:3em}.zmdi-hc-4x{font-size:4em}.zmdi-hc-5x{font-size:5em}.zmdi-hc-fw{width:1.28571429em;text-align:center}.zmdi-hc-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.zmdi-hc-ul>li{position:relative}.zmdi-hc-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.zmdi-hc-li.zmdi-hc-lg{left:-1.85714286em}.zmdi-hc-border{padding:.1em .25em;border:solid .1em #9e9e9e;border-radius:2px}.zmdi-hc-border-circle{padding:.1em .25em;border:solid .1em #9e9e9e;border-radius:50%}.zmdi.pull-left{float:left;margin-right:.15em}.zmdi.pull-right{float:right;margin-left:.15em}.zmdi-hc-spin{-webkit-animation:zmdi-spin 1.5s infinite linear;animation:zmdi-spin 1.5s infinite linear}.zmdi-hc-spin-reverse{-webkit-animation:zmdi-spin-reverse 1.5s infinite linear;animation:zmdi-spin-reverse 1.5s infinite linear}@-webkit-keyframes zmdi-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes zmdi-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@-webkit-keyframes zmdi-spin-reverse{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(-359deg);transform:rotate(-359deg)}}@keyframes zmdi-spin-reverse{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(-359deg);transform:rotate(-359deg)}}.zmdi-hc-rotate-90{-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.zmdi-hc-rotate-180{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.zmdi-hc-rotate-270{-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.zmdi-hc-flip-horizontal{-webkit-transform:scale(-1,1);-ms-transform:scale(-1,1);transform:scale(-1,1)}.zmdi-hc-flip-vertical{-webkit-transform:scale(1,-1);-ms-transform:scale(1,-1);transform:scale(1,-1)}.zmdi-hc-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.zmdi-hc-stack-1x,.zmdi-hc-stack-2x{position:absolute;left:0;width:100%;text-align:center}.zmdi-hc-stack-1x{line-height:inherit}.zmdi-hc-stack-2x{font-size:2em}.zmdi-hc-inverse{color:#fff}.zmdi-3d-rotation:before{content:'\\F101'}.zmdi-airplane-off:before{content:'\\F102'}.zmdi-airplane:before{content:'\\F103'}.zmdi-album:before{content:'\\F104'}.zmdi-archive:before{content:'\\F105'}.zmdi-assignment-account:before{content:'\\F106'}.zmdi-assignment-alert:before{content:'\\F107'}.zmdi-assignment-check:before{content:'\\F108'}.zmdi-assignment-o:before{content:'\\F109'}.zmdi-assignment-return:before{content:'\\F10A'}.zmdi-assignment-returned:before{content:'\\F10B'}.zmdi-assignment:before{content:'\\F10C'}.zmdi-attachment-alt:before{content:'\\F10D'}.zmdi-attachment:before{content:'\\F10E'}.zmdi-audio:before{content:'\\F10F'}.zmdi-badge-check:before{content:'\\F110'}.zmdi-balance-wallet:before{content:'\\F111'}.zmdi-balance:before{content:'\\F112'}.zmdi-battery-alert:before{content:'\\F113'}.zmdi-battery-flash:before{content:'\\F114'}.zmdi-battery-unknown:before{content:'\\F115'}.zmdi-battery:before{content:'\\F116'}.zmdi-bike:before{content:'\\F117'}.zmdi-block-alt:before{content:'\\F118'}.zmdi-block:before{content:'\\F119'}.zmdi-boat:before{content:'\\F11A'}.zmdi-book-image:before{content:'\\F11B'}.zmdi-book:before{content:'\\F11C'}.zmdi-bookmark-outline:before{content:'\\F11D'}.zmdi-bookmark:before{content:'\\F11E'}.zmdi-brush:before{content:'\\F11F'}.zmdi-bug:before{content:'\\F120'}.zmdi-bus:before{content:'\\F121'}.zmdi-cake:before{content:'\\F122'}.zmdi-car-taxi:before{content:'\\F123'}.zmdi-car-wash:before{content:'\\F124'}.zmdi-car:before{content:'\\F125'}.zmdi-card-giftcard:before{content:'\\F126'}.zmdi-card-membership:before{content:'\\F127'}.zmdi-card-travel:before{content:'\\F128'}.zmdi-card:before{content:'\\F129'}.zmdi-case-check:before{content:'\\F12A'}.zmdi-case-download:before{content:'\\F12B'}.zmdi-case-play:before{content:'\\F12C'}.zmdi-case:before{content:'\\F12D'}.zmdi-cast-connected:before{content:'\\F12E'}.zmdi-cast:before{content:'\\F12F'}.zmdi-chart-donut:before{content:'\\F130'}.zmdi-chart:before{content:'\\F131'}.zmdi-city-alt:before{content:'\\F132'}.zmdi-city:before{content:'\\F133'}.zmdi-close-circle-o:before{content:'\\F134'}.zmdi-close-circle:before{content:'\\F135'}.zmdi-close:before{content:'\\F136'}.zmdi-cocktail:before{content:'\\F137'}.zmdi-code-setting:before{content:'\\F138'}.zmdi-code-smartphone:before{content:'\\F139'}.zmdi-code:before{content:'\\F13A'}.zmdi-coffee:before{content:'\\F13B'}.zmdi-collection-bookmark:before{content:'\\F13C'}.zmdi-collection-case-play:before{content:'\\F13D'}.zmdi-collection-folder-image:before{content:'\\F13E'}.zmdi-collection-image-o:before{content:'\\F13F'}.zmdi-collection-image:before{content:'\\F140'}.zmdi-collection-item-1:before{content:'\\F141'}.zmdi-collection-item-2:before{content:'\\F142'}.zmdi-collection-item-3:before{content:'\\F143'}.zmdi-collection-item-4:before{content:'\\F144'}.zmdi-collection-item-5:before{content:'\\F145'}.zmdi-collection-item-6:before{content:'\\F146'}.zmdi-collection-item-7:before{content:'\\F147'}.zmdi-collection-item-8:before{content:'\\F148'}.zmdi-collection-item-9-plus:before{content:'\\F149'}.zmdi-collection-item-9:before{content:'\\F14A'}.zmdi-collection-item:before{content:'\\F14B'}.zmdi-collection-music:before{content:'\\F14C'}.zmdi-collection-pdf:before{content:'\\F14D'}.zmdi-collection-plus:before{content:'\\F14E'}.zmdi-collection-speaker:before{content:'\\F14F'}.zmdi-collection-text:before{content:'\\F150'}.zmdi-collection-video:before{content:'\\F151'}.zmdi-compass:before{content:'\\F152'}.zmdi-cutlery:before{content:'\\F153'}.zmdi-delete:before{content:'\\F154'}.zmdi-dialpad:before{content:'\\F155'}.zmdi-dns:before{content:'\\F156'}.zmdi-drink:before{content:'\\F157'}.zmdi-edit:before{content:'\\F158'}.zmdi-email-open:before{content:'\\F159'}.zmdi-email:before{content:'\\F15A'}.zmdi-eye-off:before{content:'\\F15B'}.zmdi-eye:before{content:'\\F15C'}.zmdi-eyedropper:before{content:'\\F15D'}.zmdi-favorite-outline:before{content:'\\F15E'}.zmdi-favorite:before{content:'\\F15F'}.zmdi-filter-list:before{content:'\\F160'}.zmdi-fire:before{content:'\\F161'}.zmdi-flag:before{content:'\\F162'}.zmdi-flare:before{content:'\\F163'}.zmdi-flash-auto:before{content:'\\F164'}.zmdi-flash-off:before{content:'\\F165'}.zmdi-flash:before{content:'\\F166'}.zmdi-flip:before{content:'\\F167'}.zmdi-flower-alt:before{content:'\\F168'}.zmdi-flower:before{content:'\\F169'}.zmdi-font:before{content:'\\F16A'}.zmdi-fullscreen-alt:before{content:'\\F16B'}.zmdi-fullscreen-exit:before{content:'\\F16C'}.zmdi-fullscreen:before{content:'\\F16D'}.zmdi-functions:before{content:'\\F16E'}.zmdi-gas-station:before{content:'\\F16F'}.zmdi-gesture:before{content:'\\F170'}.zmdi-globe-alt:before{content:'\\F171'}.zmdi-globe-lock:before{content:'\\F172'}.zmdi-globe:before{content:'\\F173'}.zmdi-graduation-cap:before{content:'\\F174'}.zmdi-home:before{content:'\\F175'}.zmdi-hospital-alt:before{content:'\\F176'}.zmdi-hospital:before{content:'\\F177'}.zmdi-hotel:before{content:'\\F178'}.zmdi-hourglass-alt:before{content:'\\F179'}.zmdi-hourglass-outline:before{content:'\\F17A'}.zmdi-hourglass:before{content:'\\F17B'}.zmdi-http:before{content:'\\F17C'}.zmdi-image-alt:before{content:'\\F17D'}.zmdi-image-o:before{content:'\\F17E'}.zmdi-image:before{content:'\\F17F'}.zmdi-inbox:before{content:'\\F180'}.zmdi-invert-colors-off:before{content:'\\F181'}.zmdi-invert-colors:before{content:'\\F182'}.zmdi-key:before{content:'\\F183'}.zmdi-label-alt-outline:before{content:'\\F184'}.zmdi-label-alt:before{content:'\\F185'}.zmdi-label-heart:before{content:'\\F186'}.zmdi-label:before{content:'\\F187'}.zmdi-labels:before{content:'\\F188'}.zmdi-lamp:before{content:'\\F189'}.zmdi-landscape:before{content:'\\F18A'}.zmdi-layers-off:before{content:'\\F18B'}.zmdi-layers:before{content:'\\F18C'}.zmdi-library:before{content:'\\F18D'}.zmdi-link:before{content:'\\F18E'}.zmdi-lock-open:before{content:'\\F18F'}.zmdi-lock-outline:before{content:'\\F190'}.zmdi-lock:before{content:'\\F191'}.zmdi-mail-reply-all:before{content:'\\F192'}.zmdi-mail-reply:before{content:'\\F193'}.zmdi-mail-send:before{content:'\\F194'}.zmdi-mall:before{content:'\\F195'}.zmdi-map:before{content:'\\F196'}.zmdi-menu:before{content:'\\F197'}.zmdi-money-box:before{content:'\\F198'}.zmdi-money-off:before{content:'\\F199'}.zmdi-money:before{content:'\\F19A'}.zmdi-more-vert:before{content:'\\F19B'}.zmdi-more:before{content:'\\F19C'}.zmdi-movie-alt:before{content:'\\F19D'}.zmdi-movie:before{content:'\\F19E'}.zmdi-nature-people:before{content:'\\F19F'}.zmdi-nature:before{content:'\\F1A0'}.zmdi-navigation:before{content:'\\F1A1'}.zmdi-open-in-browser:before{content:'\\F1A2'}.zmdi-open-in-new:before{content:'\\F1A3'}.zmdi-palette:before{content:'\\F1A4'}.zmdi-parking:before{content:'\\F1A5'}.zmdi-pin-account:before{content:'\\F1A6'}.zmdi-pin-assistant:before{content:'\\F1A7'}.zmdi-pin-drop:before{content:'\\F1A8'}.zmdi-pin-help:before{content:'\\F1A9'}.zmdi-pin-off:before{content:'\\F1AA'}.zmdi-pin:before{content:'\\F1AB'}.zmdi-pizza:before{content:'\\F1AC'}.zmdi-plaster:before{content:'\\F1AD'}.zmdi-power-setting:before{content:'\\F1AE'}.zmdi-power:before{content:'\\F1AF'}.zmdi-print:before{content:'\\F1B0'}.zmdi-puzzle-piece:before{content:'\\F1B1'}.zmdi-quote:before{content:'\\F1B2'}.zmdi-railway:before{content:'\\F1B3'}.zmdi-receipt:before{content:'\\F1B4'}.zmdi-refresh-alt:before{content:'\\F1B5'}.zmdi-refresh-sync-alert:before{content:'\\F1B6'}.zmdi-refresh-sync-off:before{content:'\\F1B7'}.zmdi-refresh-sync:before{content:'\\F1B8'}.zmdi-refresh:before{content:'\\F1B9'}.zmdi-roller:before{content:'\\F1BA'}.zmdi-ruler:before{content:'\\F1BB'}.zmdi-scissors:before{content:'\\F1BC'}.zmdi-screen-rotation-lock:before{content:'\\F1BD'}.zmdi-screen-rotation:before{content:'\\F1BE'}.zmdi-search-for:before{content:'\\F1BF'}.zmdi-search-in-file:before{content:'\\F1C0'}.zmdi-search-in-page:before{content:'\\F1C1'}.zmdi-search-replace:before{content:'\\F1C2'}.zmdi-search:before{content:'\\F1C3'}.zmdi-seat:before{content:'\\F1C4'}.zmdi-settings-square:before{content:'\\F1C5'}.zmdi-settings:before{content:'\\F1C6'}.zmdi-shield-check:before{content:'\\F1C7'}.zmdi-shield-security:before{content:'\\F1C8'}.zmdi-shopping-basket:before{content:'\\F1C9'}.zmdi-shopping-cart-plus:before{content:'\\F1CA'}.zmdi-shopping-cart:before{content:'\\F1CB'}.zmdi-sign-in:before{content:'\\F1CC'}.zmdi-sort-amount-asc:before{content:'\\F1CD'}.zmdi-sort-amount-desc:before{content:'\\F1CE'}.zmdi-sort-asc:before{content:'\\F1CF'}.zmdi-sort-desc:before{content:'\\F1D0'}.zmdi-spellcheck:before{content:'\\F1D1'}.zmdi-storage:before{content:'\\F1D2'}.zmdi-store-24:before{content:'\\F1D3'}.zmdi-store:before{content:'\\F1D4'}.zmdi-subway:before{content:'\\F1D5'}.zmdi-sun:before{content:'\\F1D6'}.zmdi-tab-unselected:before{content:'\\F1D7'}.zmdi-tab:before{content:'\\F1D8'}.zmdi-tag-close:before{content:'\\F1D9'}.zmdi-tag-more:before{content:'\\F1DA'}.zmdi-tag:before{content:'\\F1DB'}.zmdi-thumb-down:before{content:'\\F1DC'}.zmdi-thumb-up-down:before{content:'\\F1DD'}.zmdi-thumb-up:before{content:'\\F1DE'}.zmdi-ticket-star:before{content:'\\F1DF'}.zmdi-toll:before{content:'\\F1E0'}.zmdi-toys:before{content:'\\F1E1'}.zmdi-traffic:before{content:'\\F1E2'}.zmdi-translate:before{content:'\\F1E3'}.zmdi-triangle-down:before{content:'\\F1E4'}.zmdi-triangle-up:before{content:'\\F1E5'}.zmdi-truck:before{content:'\\F1E6'}.zmdi-turning-sign:before{content:'\\F1E7'}.zmdi-wallpaper:before{content:'\\F1E8'}.zmdi-washing-machine:before{content:'\\F1E9'}.zmdi-window-maximize:before{content:'\\F1EA'}.zmdi-window-minimize:before{content:'\\F1EB'}.zmdi-window-restore:before{content:'\\F1EC'}.zmdi-wrench:before{content:'\\F1ED'}.zmdi-zoom-in:before{content:'\\F1EE'}.zmdi-zoom-out:before{content:'\\F1EF'}.zmdi-alert-circle-o:before{content:'\\F1F0'}.zmdi-alert-circle:before{content:'\\F1F1'}.zmdi-alert-octagon:before{content:'\\F1F2'}.zmdi-alert-polygon:before{content:'\\F1F3'}.zmdi-alert-triangle:before{content:'\\F1F4'}.zmdi-help-outline:before{content:'\\F1F5'}.zmdi-help:before{content:'\\F1F6'}.zmdi-info-outline:before{content:'\\F1F7'}.zmdi-info:before{content:'\\F1F8'}.zmdi-notifications-active:before{content:'\\F1F9'}.zmdi-notifications-add:before{content:'\\F1FA'}.zmdi-notifications-none:before{content:'\\F1FB'}.zmdi-notifications-off:before{content:'\\F1FC'}.zmdi-notifications-paused:before{content:'\\F1FD'}.zmdi-notifications:before{content:'\\F1FE'}.zmdi-account-add:before{content:'\\F1FF'}.zmdi-account-box-mail:before{content:'\\F200'}.zmdi-account-box-o:before{content:'\\F201'}.zmdi-account-box-phone:before{content:'\\F202'}.zmdi-account-box:before{content:'\\F203'}.zmdi-account-calendar:before{content:'\\F204'}.zmdi-account-circle:before{content:'\\F205'}.zmdi-account-o:before{content:'\\F206'}.zmdi-account:before{content:'\\F207'}.zmdi-accounts-add:before{content:'\\F208'}.zmdi-accounts-alt:before{content:'\\F209'}.zmdi-accounts-list-alt:before{content:'\\F20A'}.zmdi-accounts-list:before{content:'\\F20B'}.zmdi-accounts-outline:before{content:'\\F20C'}.zmdi-accounts:before{content:'\\F20D'}.zmdi-face:before{content:'\\F20E'}.zmdi-female:before{content:'\\F20F'}.zmdi-male-alt:before{content:'\\F210'}.zmdi-male-female:before{content:'\\F211'}.zmdi-male:before{content:'\\F212'}.zmdi-mood-bad:before{content:'\\F213'}.zmdi-mood:before{content:'\\F214'}.zmdi-run:before{content:'\\F215'}.zmdi-walk:before{content:'\\F216'}.zmdi-cloud-box:before{content:'\\F217'}.zmdi-cloud-circle:before{content:'\\F218'}.zmdi-cloud-done:before{content:'\\F219'}.zmdi-cloud-download:before{content:'\\F21A'}.zmdi-cloud-off:before{content:'\\F21B'}.zmdi-cloud-outline-alt:before{content:'\\F21C'}.zmdi-cloud-outline:before{content:'\\F21D'}.zmdi-cloud-upload:before{content:'\\F21E'}.zmdi-cloud:before{content:'\\F21F'}.zmdi-download:before{content:'\\F220'}.zmdi-file-plus:before{content:'\\F221'}.zmdi-file-text:before{content:'\\F222'}.zmdi-file:before{content:'\\F223'}.zmdi-folder-outline:before{content:'\\F224'}.zmdi-folder-person:before{content:'\\F225'}.zmdi-folder-star-alt:before{content:'\\F226'}.zmdi-folder-star:before{content:'\\F227'}.zmdi-folder:before{content:'\\F228'}.zmdi-gif:before{content:'\\F229'}.zmdi-upload:before{content:'\\F22A'}.zmdi-border-all:before{content:'\\F22B'}.zmdi-border-bottom:before{content:'\\F22C'}.zmdi-border-clear:before{content:'\\F22D'}.zmdi-border-color:before{content:'\\F22E'}.zmdi-border-horizontal:before{content:'\\F22F'}.zmdi-border-inner:before{content:'\\F230'}.zmdi-border-left:before{content:'\\F231'}.zmdi-border-outer:before{content:'\\F232'}.zmdi-border-right:before{content:'\\F233'}.zmdi-border-style:before{content:'\\F234'}.zmdi-border-top:before{content:'\\F235'}.zmdi-border-vertical:before{content:'\\F236'}.zmdi-copy:before{content:'\\F237'}.zmdi-crop:before{content:'\\F238'}.zmdi-format-align-center:before{content:'\\F239'}.zmdi-format-align-justify:before{content:'\\F23A'}.zmdi-format-align-left:before{content:'\\F23B'}.zmdi-format-align-right:before{content:'\\F23C'}.zmdi-format-bold:before{content:'\\F23D'}.zmdi-format-clear-all:before{content:'\\F23E'}.zmdi-format-clear:before{content:'\\F23F'}.zmdi-format-color-fill:before{content:'\\F240'}.zmdi-format-color-reset:before{content:'\\F241'}.zmdi-format-color-text:before{content:'\\F242'}.zmdi-format-indent-decrease:before{content:'\\F243'}.zmdi-format-indent-increase:before{content:'\\F244'}.zmdi-format-italic:before{content:'\\F245'}.zmdi-format-line-spacing:before{content:'\\F246'}.zmdi-format-list-bulleted:before{content:'\\F247'}.zmdi-format-list-numbered:before{content:'\\F248'}.zmdi-format-ltr:before{content:'\\F249'}.zmdi-format-rtl:before{content:'\\F24A'}.zmdi-format-size:before{content:'\\F24B'}.zmdi-format-strikethrough-s:before{content:'\\F24C'}.zmdi-format-strikethrough:before{content:'\\F24D'}.zmdi-format-subject:before{content:'\\F24E'}.zmdi-format-underlined:before{content:'\\F24F'}.zmdi-format-valign-bottom:before{content:'\\F250'}.zmdi-format-valign-center:before{content:'\\F251'}.zmdi-format-valign-top:before{content:'\\F252'}.zmdi-redo:before{content:'\\F253'}.zmdi-select-all:before{content:'\\F254'}.zmdi-space-bar:before{content:'\\F255'}.zmdi-text-format:before{content:'\\F256'}.zmdi-transform:before{content:'\\F257'}.zmdi-undo:before{content:'\\F258'}.zmdi-wrap-text:before{content:'\\F259'}.zmdi-comment-alert:before{content:'\\F25A'}.zmdi-comment-alt-text:before{content:'\\F25B'}.zmdi-comment-alt:before{content:'\\F25C'}.zmdi-comment-edit:before{content:'\\F25D'}.zmdi-comment-image:before{content:'\\F25E'}.zmdi-comment-list:before{content:'\\F25F'}.zmdi-comment-more:before{content:'\\F260'}.zmdi-comment-outline:before{content:'\\F261'}.zmdi-comment-text-alt:before{content:'\\F262'}.zmdi-comment-text:before{content:'\\F263'}.zmdi-comment-video:before{content:'\\F264'}.zmdi-comment:before{content:'\\F265'}.zmdi-comments:before{content:'\\F266'}.zmdi-check-all:before{content:'\\F267'}.zmdi-check-circle-u:before{content:'\\F268'}.zmdi-check-circle:before{content:'\\F269'}.zmdi-check-square:before{content:'\\F26A'}.zmdi-check:before{content:'\\F26B'}.zmdi-circle-o:before{content:'\\F26C'}.zmdi-circle:before{content:'\\F26D'}.zmdi-dot-circle-alt:before{content:'\\F26E'}.zmdi-dot-circle:before{content:'\\F26F'}.zmdi-minus-circle-outline:before{content:'\\F270'}.zmdi-minus-circle:before{content:'\\F271'}.zmdi-minus-square:before{content:'\\F272'}.zmdi-minus:before{content:'\\F273'}.zmdi-plus-circle-o-duplicate:before{content:'\\F274'}.zmdi-plus-circle-o:before{content:'\\F275'}.zmdi-plus-circle:before{content:'\\F276'}.zmdi-plus-square:before{content:'\\F277'}.zmdi-plus:before{content:'\\F278'}.zmdi-square-o:before{content:'\\F279'}.zmdi-star-circle:before{content:'\\F27A'}.zmdi-star-half:before{content:'\\F27B'}.zmdi-star-outline:before{content:'\\F27C'}.zmdi-star:before{content:'\\F27D'}.zmdi-bluetooth-connected:before{content:'\\F27E'}.zmdi-bluetooth-off:before{content:'\\F27F'}.zmdi-bluetooth-search:before{content:'\\F280'}.zmdi-bluetooth-setting:before{content:'\\F281'}.zmdi-bluetooth:before{content:'\\F282'}.zmdi-camera-add:before{content:'\\F283'}.zmdi-camera-alt:before{content:'\\F284'}.zmdi-camera-bw:before{content:'\\F285'}.zmdi-camera-front:before{content:'\\F286'}.zmdi-camera-mic:before{content:'\\F287'}.zmdi-camera-party-mode:before{content:'\\F288'}.zmdi-camera-rear:before{content:'\\F289'}.zmdi-camera-roll:before{content:'\\F28A'}.zmdi-camera-switch:before{content:'\\F28B'}.zmdi-camera:before{content:'\\F28C'}.zmdi-card-alert:before{content:'\\F28D'}.zmdi-card-off:before{content:'\\F28E'}.zmdi-card-sd:before{content:'\\F28F'}.zmdi-card-sim:before{content:'\\F290'}.zmdi-desktop-mac:before{content:'\\F291'}.zmdi-desktop-windows:before{content:'\\F292'}.zmdi-device-hub:before{content:'\\F293'}.zmdi-devices-off:before{content:'\\F294'}.zmdi-devices:before{content:'\\F295'}.zmdi-dock:before{content:'\\F296'}.zmdi-floppy:before{content:'\\F297'}.zmdi-gamepad:before{content:'\\F298'}.zmdi-gps-dot:before{content:'\\F299'}.zmdi-gps-off:before{content:'\\F29A'}.zmdi-gps:before{content:'\\F29B'}.zmdi-headset-mic:before{content:'\\F29C'}.zmdi-headset:before{content:'\\F29D'}.zmdi-input-antenna:before{content:'\\F29E'}.zmdi-input-composite:before{content:'\\F29F'}.zmdi-input-hdmi:before{content:'\\F2A0'}.zmdi-input-power:before{content:'\\F2A1'}.zmdi-input-svideo:before{content:'\\F2A2'}.zmdi-keyboard-hide:before{content:'\\F2A3'}.zmdi-keyboard:before{content:'\\F2A4'}.zmdi-laptop-chromebook:before{content:'\\F2A5'}.zmdi-laptop-mac:before{content:'\\F2A6'}.zmdi-laptop:before{content:'\\F2A7'}.zmdi-mic-off:before{content:'\\F2A8'}.zmdi-mic-outline:before{content:'\\F2A9'}.zmdi-mic-setting:before{content:'\\F2AA'}.zmdi-mic:before{content:'\\F2AB'}.zmdi-mouse:before{content:'\\F2AC'}.zmdi-network-alert:before{content:'\\F2AD'}.zmdi-network-locked:before{content:'\\F2AE'}.zmdi-network-off:before{content:'\\F2AF'}.zmdi-network-outline:before{content:'\\F2B0'}.zmdi-network-setting:before{content:'\\F2B1'}.zmdi-network:before{content:'\\F2B2'}.zmdi-phone-bluetooth:before{content:'\\F2B3'}.zmdi-phone-end:before{content:'\\F2B4'}.zmdi-phone-forwarded:before{content:'\\F2B5'}.zmdi-phone-in-talk:before{content:'\\F2B6'}.zmdi-phone-locked:before{content:'\\F2B7'}.zmdi-phone-missed:before{content:'\\F2B8'}.zmdi-phone-msg:before{content:'\\F2B9'}.zmdi-phone-paused:before{content:'\\F2BA'}.zmdi-phone-ring:before{content:'\\F2BB'}.zmdi-phone-setting:before{content:'\\F2BC'}.zmdi-phone-sip:before{content:'\\F2BD'}.zmdi-phone:before{content:'\\F2BE'}.zmdi-portable-wifi-changes:before{content:'\\F2BF'}.zmdi-portable-wifi-off:before{content:'\\F2C0'}.zmdi-portable-wifi:before{content:'\\F2C1'}.zmdi-radio:before{content:'\\F2C2'}.zmdi-reader:before{content:'\\F2C3'}.zmdi-remote-control-alt:before{content:'\\F2C4'}.zmdi-remote-control:before{content:'\\F2C5'}.zmdi-router:before{content:'\\F2C6'}.zmdi-scanner:before{content:'\\F2C7'}.zmdi-smartphone-android:before{content:'\\F2C8'}.zmdi-smartphone-download:before{content:'\\F2C9'}.zmdi-smartphone-erase:before{content:'\\F2CA'}.zmdi-smartphone-info:before{content:'\\F2CB'}.zmdi-smartphone-iphone:before{content:'\\F2CC'}.zmdi-smartphone-landscape-lock:before{content:'\\F2CD'}.zmdi-smartphone-landscape:before{content:'\\F2CE'}.zmdi-smartphone-lock:before{content:'\\F2CF'}.zmdi-smartphone-portrait-lock:before{content:'\\F2D0'}.zmdi-smartphone-ring:before{content:'\\F2D1'}.zmdi-smartphone-setting:before{content:'\\F2D2'}.zmdi-smartphone-setup:before{content:'\\F2D3'}.zmdi-smartphone:before{content:'\\F2D4'}.zmdi-speaker:before{content:'\\F2D5'}.zmdi-tablet-android:before{content:'\\F2D6'}.zmdi-tablet-mac:before{content:'\\F2D7'}.zmdi-tablet:before{content:'\\F2D8'}.zmdi-tv-alt-play:before{content:'\\F2D9'}.zmdi-tv-list:before{content:'\\F2DA'}.zmdi-tv-play:before{content:'\\F2DB'}.zmdi-tv:before{content:'\\F2DC'}.zmdi-usb:before{content:'\\F2DD'}.zmdi-videocam-off:before{content:'\\F2DE'}.zmdi-videocam-switch:before{content:'\\F2DF'}.zmdi-videocam:before{content:'\\F2E0'}.zmdi-watch:before{content:'\\F2E1'}.zmdi-wifi-alt-2:before{content:'\\F2E2'}.zmdi-wifi-alt:before{content:'\\F2E3'}.zmdi-wifi-info:before{content:'\\F2E4'}.zmdi-wifi-lock:before{content:'\\F2E5'}.zmdi-wifi-off:before{content:'\\F2E6'}.zmdi-wifi-outline:before{content:'\\F2E7'}.zmdi-wifi:before{content:'\\F2E8'}.zmdi-arrow-left-bottom:before{content:'\\F2E9'}.zmdi-arrow-left:before{content:'\\F2EA'}.zmdi-arrow-merge:before{content:'\\F2EB'}.zmdi-arrow-missed:before{content:'\\F2EC'}.zmdi-arrow-right-top:before{content:'\\F2ED'}.zmdi-arrow-right:before{content:'\\F2EE'}.zmdi-arrow-split:before{content:'\\F2EF'}.zmdi-arrows:before{content:'\\F2F0'}.zmdi-caret-down-circle:before{content:'\\F2F1'}.zmdi-caret-down:before{content:'\\F2F2'}.zmdi-caret-left-circle:before{content:'\\F2F3'}.zmdi-caret-left:before{content:'\\F2F4'}.zmdi-caret-right-circle:before{content:'\\F2F5'}.zmdi-caret-right:before{content:'\\F2F6'}.zmdi-caret-up-circle:before{content:'\\F2F7'}.zmdi-caret-up:before{content:'\\F2F8'}.zmdi-chevron-down:before{content:'\\F2F9'}.zmdi-chevron-left:before{content:'\\F2FA'}.zmdi-chevron-right:before{content:'\\F2FB'}.zmdi-chevron-up:before{content:'\\F2FC'}.zmdi-forward:before{content:'\\F2FD'}.zmdi-long-arrow-down:before{content:'\\F2FE'}.zmdi-long-arrow-left:before{content:'\\F2FF'}.zmdi-long-arrow-return:before{content:'\\F300'}.zmdi-long-arrow-right:before{content:'\\F301'}.zmdi-long-arrow-tab:before{content:'\\F302'}.zmdi-long-arrow-up:before{content:'\\F303'}.zmdi-rotate-ccw:before{content:'\\F304'}.zmdi-rotate-cw:before{content:'\\F305'}.zmdi-rotate-left:before{content:'\\F306'}.zmdi-rotate-right:before{content:'\\F307'}.zmdi-square-down:before{content:'\\F308'}.zmdi-square-right:before{content:'\\F309'}.zmdi-swap-alt:before{content:'\\F30A'}.zmdi-swap-vertical-circle:before{content:'\\F30B'}.zmdi-swap-vertical:before{content:'\\F30C'}.zmdi-swap:before{content:'\\F30D'}.zmdi-trending-down:before{content:'\\F30E'}.zmdi-trending-flat:before{content:'\\F30F'}.zmdi-trending-up:before{content:'\\F310'}.zmdi-unfold-less:before{content:'\\F311'}.zmdi-unfold-more:before{content:'\\F312'}.zmdi-apps:before{content:'\\F313'}.zmdi-grid-off:before{content:'\\F314'}.zmdi-grid:before{content:'\\F315'}.zmdi-view-agenda:before{content:'\\F316'}.zmdi-view-array:before{content:'\\F317'}.zmdi-view-carousel:before{content:'\\F318'}.zmdi-view-column:before{content:'\\F319'}.zmdi-view-comfy:before{content:'\\F31A'}.zmdi-view-compact:before{content:'\\F31B'}.zmdi-view-dashboard:before{content:'\\F31C'}.zmdi-view-day:before{content:'\\F31D'}.zmdi-view-headline:before{content:'\\F31E'}.zmdi-view-list-alt:before{content:'\\F31F'}.zmdi-view-list:before{content:'\\F320'}.zmdi-view-module:before{content:'\\F321'}.zmdi-view-quilt:before{content:'\\F322'}.zmdi-view-stream:before{content:'\\F323'}.zmdi-view-subtitles:before{content:'\\F324'}.zmdi-view-toc:before{content:'\\F325'}.zmdi-view-web:before{content:'\\F326'}.zmdi-view-week:before{content:'\\F327'}.zmdi-widgets:before{content:'\\F328'}.zmdi-alarm-check:before{content:'\\F329'}.zmdi-alarm-off:before{content:'\\F32A'}.zmdi-alarm-plus:before{content:'\\F32B'}.zmdi-alarm-snooze:before{content:'\\F32C'}.zmdi-alarm:before{content:'\\F32D'}.zmdi-calendar-alt:before{content:'\\F32E'}.zmdi-calendar-check:before{content:'\\F32F'}.zmdi-calendar-close:before{content:'\\F330'}.zmdi-calendar-note:before{content:'\\F331'}.zmdi-calendar:before{content:'\\F332'}.zmdi-time-countdown:before{content:'\\F333'}.zmdi-time-interval:before{content:'\\F334'}.zmdi-time-restore-setting:before{content:'\\F335'}.zmdi-time-restore:before{content:'\\F336'}.zmdi-time:before{content:'\\F337'}.zmdi-timer-off:before{content:'\\F338'}.zmdi-timer:before{content:'\\F339'}.zmdi-android-alt:before{content:'\\F33A'}.zmdi-android:before{content:'\\F33B'}.zmdi-apple:before{content:'\\F33C'}.zmdi-behance:before{content:'\\F33D'}.zmdi-codepen:before{content:'\\F33E'}.zmdi-dribbble:before{content:'\\F33F'}.zmdi-dropbox:before{content:'\\F340'}.zmdi-evernote:before{content:'\\F341'}.zmdi-facebook-box:before{content:'\\F342'}.zmdi-facebook:before{content:'\\F343'}.zmdi-github-box:before{content:'\\F344'}.zmdi-github:before{content:'\\F345'}.zmdi-google-drive:before{content:'\\F346'}.zmdi-google-earth:before{content:'\\F347'}.zmdi-google-glass:before{content:'\\F348'}.zmdi-google-maps:before{content:'\\F349'}.zmdi-google-pages:before{content:'\\F34A'}.zmdi-google-play:before{content:'\\F34B'}.zmdi-google-plus-box:before{content:'\\F34C'}.zmdi-google-plus:before{content:'\\F34D'}.zmdi-google:before{content:'\\F34E'}.zmdi-instagram:before{content:'\\F34F'}.zmdi-language-css3:before{content:'\\F350'}.zmdi-language-html5:before{content:'\\F351'}.zmdi-language-javascript:before{content:'\\F352'}.zmdi-language-python-alt:before{content:'\\F353'}.zmdi-language-python:before{content:'\\F354'}.zmdi-lastfm:before{content:'\\F355'}.zmdi-linkedin-box:before{content:'\\F356'}.zmdi-paypal:before{content:'\\F357'}.zmdi-pinterest-box:before{content:'\\F358'}.zmdi-pocket:before{content:'\\F359'}.zmdi-polymer:before{content:'\\F35A'}.zmdi-share:before{content:'\\F35B'}.zmdi-stackoverflow:before{content:'\\F35C'}.zmdi-steam-square:before{content:'\\F35D'}.zmdi-steam:before{content:'\\F35E'}.zmdi-twitter-box:before{content:'\\F35F'}.zmdi-twitter:before{content:'\\F360'}.zmdi-vk:before{content:'\\F361'}.zmdi-wikipedia:before{content:'\\F362'}.zmdi-windows:before{content:'\\F363'}.zmdi-aspect-ratio-alt:before{content:'\\F364'}.zmdi-aspect-ratio:before{content:'\\F365'}.zmdi-blur-circular:before{content:'\\F366'}.zmdi-blur-linear:before{content:'\\F367'}.zmdi-blur-off:before{content:'\\F368'}.zmdi-blur:before{content:'\\F369'}.zmdi-brightness-2:before{content:'\\F36A'}.zmdi-brightness-3:before{content:'\\F36B'}.zmdi-brightness-4:before{content:'\\F36C'}.zmdi-brightness-5:before{content:'\\F36D'}.zmdi-brightness-6:before{content:'\\F36E'}.zmdi-brightness-7:before{content:'\\F36F'}.zmdi-brightness-auto:before{content:'\\F370'}.zmdi-brightness-setting:before{content:'\\F371'}.zmdi-broken-image:before{content:'\\F372'}.zmdi-center-focus-strong:before{content:'\\F373'}.zmdi-center-focus-weak:before{content:'\\F374'}.zmdi-compare:before{content:'\\F375'}.zmdi-crop-16-9:before{content:'\\F376'}.zmdi-crop-3-2:before{content:'\\F377'}.zmdi-crop-5-4:before{content:'\\F378'}.zmdi-crop-7-5:before{content:'\\F379'}.zmdi-crop-din:before{content:'\\F37A'}.zmdi-crop-free:before{content:'\\F37B'}.zmdi-crop-landscape:before{content:'\\F37C'}.zmdi-crop-portrait:before{content:'\\F37D'}.zmdi-crop-square:before{content:'\\F37E'}.zmdi-exposure-alt:before{content:'\\F37F'}.zmdi-exposure:before{content:'\\F380'}.zmdi-filter-b-and-w:before{content:'\\F381'}.zmdi-filter-center-focus:before{content:'\\F382'}.zmdi-filter-frames:before{content:'\\F383'}.zmdi-filter-tilt-shift:before{content:'\\F384'}.zmdi-gradient:before{content:'\\F385'}.zmdi-grain:before{content:'\\F386'}.zmdi-graphic-eq:before{content:'\\F387'}.zmdi-hdr-off:before{content:'\\F388'}.zmdi-hdr-strong:before{content:'\\F389'}.zmdi-hdr-weak:before{content:'\\F38A'}.zmdi-hdr:before{content:'\\F38B'}.zmdi-iridescent:before{content:'\\F38C'}.zmdi-leak-off:before{content:'\\F38D'}.zmdi-leak:before{content:'\\F38E'}.zmdi-looks:before{content:'\\F38F'}.zmdi-loupe:before{content:'\\F390'}.zmdi-panorama-horizontal:before{content:'\\F391'}.zmdi-panorama-vertical:before{content:'\\F392'}.zmdi-panorama-wide-angle:before{content:'\\F393'}.zmdi-photo-size-select-large:before{content:'\\F394'}.zmdi-photo-size-select-small:before{content:'\\F395'}.zmdi-picture-in-picture:before{content:'\\F396'}.zmdi-slideshow:before{content:'\\F397'}.zmdi-texture:before{content:'\\F398'}.zmdi-tonality:before{content:'\\F399'}.zmdi-vignette:before{content:'\\F39A'}.zmdi-wb-auto:before{content:'\\F39B'}.zmdi-eject-alt:before{content:'\\F39C'}.zmdi-eject:before{content:'\\F39D'}.zmdi-equalizer:before{content:'\\F39E'}.zmdi-fast-forward:before{content:'\\F39F'}.zmdi-fast-rewind:before{content:'\\F3A0'}.zmdi-forward-10:before{content:'\\F3A1'}.zmdi-forward-30:before{content:'\\F3A2'}.zmdi-forward-5:before{content:'\\F3A3'}.zmdi-hearing:before{content:'\\F3A4'}.zmdi-pause-circle-outline:before{content:'\\F3A5'}.zmdi-pause-circle:before{content:'\\F3A6'}.zmdi-pause:before{content:'\\F3A7'}.zmdi-play-circle-outline:before{content:'\\F3A8'}.zmdi-play-circle:before{content:'\\F3A9'}.zmdi-play:before{content:'\\F3AA'}.zmdi-playlist-audio:before{content:'\\F3AB'}.zmdi-playlist-plus:before{content:'\\F3AC'}.zmdi-repeat-one:before{content:'\\F3AD'}.zmdi-repeat:before{content:'\\F3AE'}.zmdi-replay-10:before{content:'\\F3AF'}.zmdi-replay-30:before{content:'\\F3B0'}.zmdi-replay-5:before{content:'\\F3B1'}.zmdi-replay:before{content:'\\F3B2'}.zmdi-shuffle:before{content:'\\F3B3'}.zmdi-skip-next:before{content:'\\F3B4'}.zmdi-skip-previous:before{content:'\\F3B5'}.zmdi-stop:before{content:'\\F3B6'}.zmdi-surround-sound:before{content:'\\F3B7'}.zmdi-tune:before{content:'\\F3B8'}.zmdi-volume-down:before{content:'\\F3B9'}.zmdi-volume-mute:before{content:'\\F3BA'}.zmdi-volume-off:before{content:'\\F3BB'}.zmdi-volume-up:before{content:'\\F3BC'}.zmdi-n-1-square:before{content:'\\F3BD'}.zmdi-n-2-square:before{content:'\\F3BE'}.zmdi-n-3-square:before{content:'\\F3BF'}.zmdi-n-4-square:before{content:'\\F3C0'}.zmdi-n-5-square:before{content:'\\F3C1'}.zmdi-n-6-square:before{content:'\\F3C2'}.zmdi-neg-1:before{content:'\\F3C3'}.zmdi-neg-2:before{content:'\\F3C4'}.zmdi-plus-1:before{content:'\\F3C5'}.zmdi-plus-2:before{content:'\\F3C6'}.zmdi-sec-10:before{content:'\\F3C7'}.zmdi-sec-3:before{content:'\\F3C8'}.zmdi-zero:before{content:'\\F3C9'}.zmdi-airline-seat-flat-angled:before{content:'\\F3CA'}.zmdi-airline-seat-flat:before{content:'\\F3CB'}.zmdi-airline-seat-individual-suite:before{content:'\\F3CC'}.zmdi-airline-seat-legroom-extra:before{content:'\\F3CD'}.zmdi-airline-seat-legroom-normal:before{content:'\\F3CE'}.zmdi-airline-seat-legroom-reduced:before{content:'\\F3CF'}.zmdi-airline-seat-recline-extra:before{content:'\\F3D0'}.zmdi-airline-seat-recline-normal:before{content:'\\F3D1'}.zmdi-airplay:before{content:'\\F3D2'}.zmdi-closed-caption:before{content:'\\F3D3'}.zmdi-confirmation-number:before{content:'\\F3D4'}.zmdi-developer-board:before{content:'\\F3D5'}.zmdi-disc-full:before{content:'\\F3D6'}.zmdi-explicit:before{content:'\\F3D7'}.zmdi-flight-land:before{content:'\\F3D8'}.zmdi-flight-takeoff:before{content:'\\F3D9'}.zmdi-flip-to-back:before{content:'\\F3DA'}.zmdi-flip-to-front:before{content:'\\F3DB'}.zmdi-group-work:before{content:'\\F3DC'}.zmdi-hd:before{content:'\\F3DD'}.zmdi-hq:before{content:'\\F3DE'}.zmdi-markunread-mailbox:before{content:'\\F3DF'}.zmdi-memory:before{content:'\\F3E0'}.zmdi-nfc:before{content:'\\F3E1'}.zmdi-play-for-work:before{content:'\\F3E2'}.zmdi-power-input:before{content:'\\F3E3'}.zmdi-present-to-all:before{content:'\\F3E4'}.zmdi-satellite:before{content:'\\F3E5'}.zmdi-tap-and-play:before{content:'\\F3E6'}.zmdi-vibration:before{content:'\\F3E7'}.zmdi-voicemail:before{content:'\\F3E8'}.zmdi-group:before{content:'\\F3E9'}.zmdi-rss:before{content:'\\F3EA'}.zmdi-shape:before{content:'\\F3EB'}.zmdi-spinner:before{content:'\\F3EC'}.zmdi-ungroup:before{content:'\\F3ED'}.zmdi-500px:before{content:'\\F3EE'}.zmdi-8tracks:before{content:'\\F3EF'}.zmdi-amazon:before{content:'\\F3F0'}.zmdi-blogger:before{content:'\\F3F1'}.zmdi-delicious:before{content:'\\F3F2'}.zmdi-disqus:before{content:'\\F3F3'}.zmdi-flattr:before{content:'\\F3F4'}.zmdi-flickr:before{content:'\\F3F5'}.zmdi-github-alt:before{content:'\\F3F6'}.zmdi-google-old:before{content:'\\F3F7'}.zmdi-linkedin:before{content:'\\F3F8'}.zmdi-odnoklassniki:before{content:'\\F3F9'}.zmdi-outlook:before{content:'\\F3FA'}.zmdi-paypal-alt:before{content:'\\F3FB'}.zmdi-pinterest:before{content:'\\F3FC'}.zmdi-playstation:before{content:'\\F3FD'}.zmdi-reddit:before{content:'\\F3FE'}.zmdi-skype:before{content:'\\F3FF'}.zmdi-slideshare:before{content:'\\F400'}.zmdi-soundcloud:before{content:'\\F401'}.zmdi-tumblr:before{content:'\\F402'}.zmdi-twitch:before{content:'\\F403'}.zmdi-vimeo:before{content:'\\F404'}.zmdi-whatsapp:before{content:'\\F405'}.zmdi-xbox:before{content:'\\F406'}.zmdi-yahoo:before{content:'\\F407'}.zmdi-youtube-play:before{content:'\\F408'}.zmdi-youtube:before{content:'\\F409'}.zmdi-3d-rotation:before{content:'\\F101'}.zmdi-airplane-off:before{content:'\\F102'}.zmdi-airplane:before{content:'\\F103'}.zmdi-album:before{content:'\\F104'}.zmdi-archive:before{content:'\\F105'}.zmdi-assignment-account:before{content:'\\F106'}.zmdi-assignment-alert:before{content:'\\F107'}.zmdi-assignment-check:before{content:'\\F108'}.zmdi-assignment-o:before{content:'\\F109'}.zmdi-assignment-return:before{content:'\\F10A'}.zmdi-assignment-returned:before{content:'\\F10B'}.zmdi-assignment:before{content:'\\F10C'}.zmdi-attachment-alt:before{content:'\\F10D'}.zmdi-attachment:before{content:'\\F10E'}.zmdi-audio:before{content:'\\F10F'}.zmdi-badge-check:before{content:'\\F110'}.zmdi-balance-wallet:before{content:'\\F111'}.zmdi-balance:before{content:'\\F112'}.zmdi-battery-alert:before{content:'\\F113'}.zmdi-battery-flash:before{content:'\\F114'}.zmdi-battery-unknown:before{content:'\\F115'}.zmdi-battery:before{content:'\\F116'}.zmdi-bike:before{content:'\\F117'}.zmdi-block-alt:before{content:'\\F118'}.zmdi-block:before{content:'\\F119'}.zmdi-boat:before{content:'\\F11A'}.zmdi-book-image:before{content:'\\F11B'}.zmdi-book:before{content:'\\F11C'}.zmdi-bookmark-outline:before{content:'\\F11D'}.zmdi-bookmark:before{content:'\\F11E'}.zmdi-brush:before{content:'\\F11F'}.zmdi-bug:before{content:'\\F120'}.zmdi-bus:before{content:'\\F121'}.zmdi-cake:before{content:'\\F122'}.zmdi-car-taxi:before{content:'\\F123'}.zmdi-car-wash:before{content:'\\F124'}.zmdi-car:before{content:'\\F125'}.zmdi-card-giftcard:before{content:'\\F126'}.zmdi-card-membership:before{content:'\\F127'}.zmdi-card-travel:before{content:'\\F128'}.zmdi-card:before{content:'\\F129'}.zmdi-case-check:before{content:'\\F12A'}.zmdi-case-download:before{content:'\\F12B'}.zmdi-case-play:before{content:'\\F12C'}.zmdi-case:before{content:'\\F12D'}.zmdi-cast-connected:before{content:'\\F12E'}.zmdi-cast:before{content:'\\F12F'}.zmdi-chart-donut:before{content:'\\F130'}.zmdi-chart:before{content:'\\F131'}.zmdi-city-alt:before{content:'\\F132'}.zmdi-city:before{content:'\\F133'}.zmdi-close-circle-o:before{content:'\\F134'}.zmdi-close-circle:before{content:'\\F135'}.zmdi-close:before{content:'\\F136'}.zmdi-cocktail:before{content:'\\F137'}.zmdi-code-setting:before{content:'\\F138'}.zmdi-code-smartphone:before{content:'\\F139'}.zmdi-code:before{content:'\\F13A'}.zmdi-coffee:before{content:'\\F13B'}.zmdi-collection-bookmark:before{content:'\\F13C'}.zmdi-collection-case-play:before{content:'\\F13D'}.zmdi-collection-folder-image:before{content:'\\F13E'}.zmdi-collection-image-o:before{content:'\\F13F'}.zmdi-collection-image:before{content:'\\F140'}.zmdi-collection-item-1:before{content:'\\F141'}.zmdi-collection-item-2:before{content:'\\F142'}.zmdi-collection-item-3:before{content:'\\F143'}.zmdi-collection-item-4:before{content:'\\F144'}.zmdi-collection-item-5:before{content:'\\F145'}.zmdi-collection-item-6:before{content:'\\F146'}.zmdi-collection-item-7:before{content:'\\F147'}.zmdi-collection-item-8:before{content:'\\F148'}.zmdi-collection-item-9-plus:before{content:'\\F149'}.zmdi-collection-item-9:before{content:'\\F14A'}.zmdi-collection-item:before{content:'\\F14B'}.zmdi-collection-music:before{content:'\\F14C'}.zmdi-collection-pdf:before{content:'\\F14D'}.zmdi-collection-plus:before{content:'\\F14E'}.zmdi-collection-speaker:before{content:'\\F14F'}.zmdi-collection-text:before{content:'\\F150'}.zmdi-collection-video:before{content:'\\F151'}.zmdi-compass:before{content:'\\F152'}.zmdi-cutlery:before{content:'\\F153'}.zmdi-delete:before{content:'\\F154'}.zmdi-dialpad:before{content:'\\F155'}.zmdi-dns:before{content:'\\F156'}.zmdi-drink:before{content:'\\F157'}.zmdi-edit:before{content:'\\F158'}.zmdi-email-open:before{content:'\\F159'}.zmdi-email:before{content:'\\F15A'}.zmdi-eye-off:before{content:'\\F15B'}.zmdi-eye:before{content:'\\F15C'}.zmdi-eyedropper:before{content:'\\F15D'}.zmdi-favorite-outline:before{content:'\\F15E'}.zmdi-favorite:before{content:'\\F15F'}.zmdi-filter-list:before{content:'\\F160'}.zmdi-fire:before{content:'\\F161'}.zmdi-flag:before{content:'\\F162'}.zmdi-flare:before{content:'\\F163'}.zmdi-flash-auto:before{content:'\\F164'}.zmdi-flash-off:before{content:'\\F165'}.zmdi-flash:before{content:'\\F166'}.zmdi-flip:before{content:'\\F167'}.zmdi-flower-alt:before{content:'\\F168'}.zmdi-flower:before{content:'\\F169'}.zmdi-font:before{content:'\\F16A'}.zmdi-fullscreen-alt:before{content:'\\F16B'}.zmdi-fullscreen-exit:before{content:'\\F16C'}.zmdi-fullscreen:before{content:'\\F16D'}.zmdi-functions:before{content:'\\F16E'}.zmdi-gas-station:before{content:'\\F16F'}.zmdi-gesture:before{content:'\\F170'}.zmdi-globe-alt:before{content:'\\F171'}.zmdi-globe-lock:before{content:'\\F172'}.zmdi-globe:before{content:'\\F173'}.zmdi-graduation-cap:before{content:'\\F174'}.zmdi-home:before{content:'\\F175'}.zmdi-hospital-alt:before{content:'\\F176'}.zmdi-hospital:before{content:'\\F177'}.zmdi-hotel:before{content:'\\F178'}.zmdi-hourglass-alt:before{content:'\\F179'}.zmdi-hourglass-outline:before{content:'\\F17A'}.zmdi-hourglass:before{content:'\\F17B'}.zmdi-http:before{content:'\\F17C'}.zmdi-image-alt:before{content:'\\F17D'}.zmdi-image-o:before{content:'\\F17E'}.zmdi-image:before{content:'\\F17F'}.zmdi-inbox:before{content:'\\F180'}.zmdi-invert-colors-off:before{content:'\\F181'}.zmdi-invert-colors:before{content:'\\F182'}.zmdi-key:before{content:'\\F183'}.zmdi-label-alt-outline:before{content:'\\F184'}.zmdi-label-alt:before{content:'\\F185'}.zmdi-label-heart:before{content:'\\F186'}.zmdi-label:before{content:'\\F187'}.zmdi-labels:before{content:'\\F188'}.zmdi-lamp:before{content:'\\F189'}.zmdi-landscape:before{content:'\\F18A'}.zmdi-layers-off:before{content:'\\F18B'}.zmdi-layers:before{content:'\\F18C'}.zmdi-library:before{content:'\\F18D'}.zmdi-link:before{content:'\\F18E'}.zmdi-lock-open:before{content:'\\F18F'}.zmdi-lock-outline:before{content:'\\F190'}.zmdi-lock:before{content:'\\F191'}.zmdi-mail-reply-all:before{content:'\\F192'}.zmdi-mail-reply:before{content:'\\F193'}.zmdi-mail-send:before{content:'\\F194'}.zmdi-mall:before{content:'\\F195'}.zmdi-map:before{content:'\\F196'}.zmdi-menu:before{content:'\\F197'}.zmdi-money-box:before{content:'\\F198'}.zmdi-money-off:before{content:'\\F199'}.zmdi-money:before{content:'\\F19A'}.zmdi-more-vert:before{content:'\\F19B'}.zmdi-more:before{content:'\\F19C'}.zmdi-movie-alt:before{content:'\\F19D'}.zmdi-movie:before{content:'\\F19E'}.zmdi-nature-people:before{content:'\\F19F'}.zmdi-nature:before{content:'\\F1A0'}.zmdi-navigation:before{content:'\\F1A1'}.zmdi-open-in-browser:before{content:'\\F1A2'}.zmdi-open-in-new:before{content:'\\F1A3'}.zmdi-palette:before{content:'\\F1A4'}.zmdi-parking:before{content:'\\F1A5'}.zmdi-pin-account:before{content:'\\F1A6'}.zmdi-pin-assistant:before{content:'\\F1A7'}.zmdi-pin-drop:before{content:'\\F1A8'}.zmdi-pin-help:before{content:'\\F1A9'}.zmdi-pin-off:before{content:'\\F1AA'}.zmdi-pin:before{content:'\\F1AB'}.zmdi-pizza:before{content:'\\F1AC'}.zmdi-plaster:before{content:'\\F1AD'}.zmdi-power-setting:before{content:'\\F1AE'}.zmdi-power:before{content:'\\F1AF'}.zmdi-print:before{content:'\\F1B0'}.zmdi-puzzle-piece:before{content:'\\F1B1'}.zmdi-quote:before{content:'\\F1B2'}.zmdi-railway:before{content:'\\F1B3'}.zmdi-receipt:before{content:'\\F1B4'}.zmdi-refresh-alt:before{content:'\\F1B5'}.zmdi-refresh-sync-alert:before{content:'\\F1B6'}.zmdi-refresh-sync-off:before{content:'\\F1B7'}.zmdi-refresh-sync:before{content:'\\F1B8'}.zmdi-refresh:before{content:'\\F1B9'}.zmdi-roller:before{content:'\\F1BA'}.zmdi-ruler:before{content:'\\F1BB'}.zmdi-scissors:before{content:'\\F1BC'}.zmdi-screen-rotation-lock:before{content:'\\F1BD'}.zmdi-screen-rotation:before{content:'\\F1BE'}.zmdi-search-for:before{content:'\\F1BF'}.zmdi-search-in-file:before{content:'\\F1C0'}.zmdi-search-in-page:before{content:'\\F1C1'}.zmdi-search-replace:before{content:'\\F1C2'}.zmdi-search:before{content:'\\F1C3'}.zmdi-seat:before{content:'\\F1C4'}.zmdi-settings-square:before{content:'\\F1C5'}.zmdi-settings:before{content:'\\F1C6'}.zmdi-shield-check:before{content:'\\F1C7'}.zmdi-shield-security:before{content:'\\F1C8'}.zmdi-shopping-basket:before{content:'\\F1C9'}.zmdi-shopping-cart-plus:before{content:'\\F1CA'}.zmdi-shopping-cart:before{content:'\\F1CB'}.zmdi-sign-in:before{content:'\\F1CC'}.zmdi-sort-amount-asc:before{content:'\\F1CD'}.zmdi-sort-amount-desc:before{content:'\\F1CE'}.zmdi-sort-asc:before{content:'\\F1CF'}.zmdi-sort-desc:before{content:'\\F1D0'}.zmdi-spellcheck:before{content:'\\F1D1'}.zmdi-storage:before{content:'\\F1D2'}.zmdi-store-24:before{content:'\\F1D3'}.zmdi-store:before{content:'\\F1D4'}.zmdi-subway:before{content:'\\F1D5'}.zmdi-sun:before{content:'\\F1D6'}.zmdi-tab-unselected:before{content:'\\F1D7'}.zmdi-tab:before{content:'\\F1D8'}.zmdi-tag-close:before{content:'\\F1D9'}.zmdi-tag-more:before{content:'\\F1DA'}.zmdi-tag:before{content:'\\F1DB'}.zmdi-thumb-down:before{content:'\\F1DC'}.zmdi-thumb-up-down:before{content:'\\F1DD'}.zmdi-thumb-up:before{content:'\\F1DE'}.zmdi-ticket-star:before{content:'\\F1DF'}.zmdi-toll:before{content:'\\F1E0'}.zmdi-toys:before{content:'\\F1E1'}.zmdi-traffic:before{content:'\\F1E2'}.zmdi-translate:before{content:'\\F1E3'}.zmdi-triangle-down:before{content:'\\F1E4'}.zmdi-triangle-up:before{content:'\\F1E5'}.zmdi-truck:before{content:'\\F1E6'}.zmdi-turning-sign:before{content:'\\F1E7'}.zmdi-wallpaper:before{content:'\\F1E8'}.zmdi-washing-machine:before{content:'\\F1E9'}.zmdi-window-maximize:before{content:'\\F1EA'}.zmdi-window-minimize:before{content:'\\F1EB'}.zmdi-window-restore:before{content:'\\F1EC'}.zmdi-wrench:before{content:'\\F1ED'}.zmdi-zoom-in:before{content:'\\F1EE'}.zmdi-zoom-out:before{content:'\\F1EF'}.zmdi-alert-circle-o:before{content:'\\F1F0'}.zmdi-alert-circle:before{content:'\\F1F1'}.zmdi-alert-octagon:before{content:'\\F1F2'}.zmdi-alert-polygon:before{content:'\\F1F3'}.zmdi-alert-triangle:before{content:'\\F1F4'}.zmdi-help-outline:before{content:'\\F1F5'}.zmdi-help:before{content:'\\F1F6'}.zmdi-info-outline:before{content:'\\F1F7'}.zmdi-info:before{content:'\\F1F8'}.zmdi-notifications-active:before{content:'\\F1F9'}.zmdi-notifications-add:before{content:'\\F1FA'}.zmdi-notifications-none:before{content:'\\F1FB'}.zmdi-notifications-off:before{content:'\\F1FC'}.zmdi-notifications-paused:before{content:'\\F1FD'}.zmdi-notifications:before{content:'\\F1FE'}.zmdi-account-add:before{content:'\\F1FF'}.zmdi-account-box-mail:before{content:'\\F200'}.zmdi-account-box-o:before{content:'\\F201'}.zmdi-account-box-phone:before{content:'\\F202'}.zmdi-account-box:before{content:'\\F203'}.zmdi-account-calendar:before{content:'\\F204'}.zmdi-account-circle:before{content:'\\F205'}.zmdi-account-o:before{content:'\\F206'}.zmdi-account:before{content:'\\F207'}.zmdi-accounts-add:before{content:'\\F208'}.zmdi-accounts-alt:before{content:'\\F209'}.zmdi-accounts-list-alt:before{content:'\\F20A'}.zmdi-accounts-list:before{content:'\\F20B'}.zmdi-accounts-outline:before{content:'\\F20C'}.zmdi-accounts:before{content:'\\F20D'}.zmdi-face:before{content:'\\F20E'}.zmdi-female:before{content:'\\F20F'}.zmdi-male-alt:before{content:'\\F210'}.zmdi-male-female:before{content:'\\F211'}.zmdi-male:before{content:'\\F212'}.zmdi-mood-bad:before{content:'\\F213'}.zmdi-mood:before{content:'\\F214'}.zmdi-run:before{content:'\\F215'}.zmdi-walk:before{content:'\\F216'}.zmdi-cloud-box:before{content:'\\F217'}.zmdi-cloud-circle:before{content:'\\F218'}.zmdi-cloud-done:before{content:'\\F219'}.zmdi-cloud-download:before{content:'\\F21A'}.zmdi-cloud-off:before{content:'\\F21B'}.zmdi-cloud-outline-alt:before{content:'\\F21C'}.zmdi-cloud-outline:before{content:'\\F21D'}.zmdi-cloud-upload:before{content:'\\F21E'}.zmdi-cloud:before{content:'\\F21F'}.zmdi-download:before{content:'\\F220'}.zmdi-file-plus:before{content:'\\F221'}.zmdi-file-text:before{content:'\\F222'}.zmdi-file:before{content:'\\F223'}.zmdi-folder-outline:before{content:'\\F224'}.zmdi-folder-person:before{content:'\\F225'}.zmdi-folder-star-alt:before{content:'\\F226'}.zmdi-folder-star:before{content:'\\F227'}.zmdi-folder:before{content:'\\F228'}.zmdi-gif:before{content:'\\F229'}.zmdi-upload:before{content:'\\F22A'}.zmdi-border-all:before{content:'\\F22B'}.zmdi-border-bottom:before{content:'\\F22C'}.zmdi-border-clear:before{content:'\\F22D'}.zmdi-border-color:before{content:'\\F22E'}.zmdi-border-horizontal:before{content:'\\F22F'}.zmdi-border-inner:before{content:'\\F230'}.zmdi-border-left:before{content:'\\F231'}.zmdi-border-outer:before{content:'\\F232'}.zmdi-border-right:before{content:'\\F233'}.zmdi-border-style:before{content:'\\F234'}.zmdi-border-top:before{content:'\\F235'}.zmdi-border-vertical:before{content:'\\F236'}.zmdi-copy:before{content:'\\F237'}.zmdi-crop:before{content:'\\F238'}.zmdi-format-align-center:before{content:'\\F239'}.zmdi-format-align-justify:before{content:'\\F23A'}.zmdi-format-align-left:before{content:'\\F23B'}.zmdi-format-align-right:before{content:'\\F23C'}.zmdi-format-bold:before{content:'\\F23D'}.zmdi-format-clear-all:before{content:'\\F23E'}.zmdi-format-clear:before{content:'\\F23F'}.zmdi-format-color-fill:before{content:'\\F240'}.zmdi-format-color-reset:before{content:'\\F241'}.zmdi-format-color-text:before{content:'\\F242'}.zmdi-format-indent-decrease:before{content:'\\F243'}.zmdi-format-indent-increase:before{content:'\\F244'}.zmdi-format-italic:before{content:'\\F245'}.zmdi-format-line-spacing:before{content:'\\F246'}.zmdi-format-list-bulleted:before{content:'\\F247'}.zmdi-format-list-numbered:before{content:'\\F248'}.zmdi-format-ltr:before{content:'\\F249'}.zmdi-format-rtl:before{content:'\\F24A'}.zmdi-format-size:before{content:'\\F24B'}.zmdi-format-strikethrough-s:before{content:'\\F24C'}.zmdi-format-strikethrough:before{content:'\\F24D'}.zmdi-format-subject:before{content:'\\F24E'}.zmdi-format-underlined:before{content:'\\F24F'}.zmdi-format-valign-bottom:before{content:'\\F250'}.zmdi-format-valign-center:before{content:'\\F251'}.zmdi-format-valign-top:before{content:'\\F252'}.zmdi-redo:before{content:'\\F253'}.zmdi-select-all:before{content:'\\F254'}.zmdi-space-bar:before{content:'\\F255'}.zmdi-text-format:before{content:'\\F256'}.zmdi-transform:before{content:'\\F257'}.zmdi-undo:before{content:'\\F258'}.zmdi-wrap-text:before{content:'\\F259'}.zmdi-comment-alert:before{content:'\\F25A'}.zmdi-comment-alt-text:before{content:'\\F25B'}.zmdi-comment-alt:before{content:'\\F25C'}.zmdi-comment-edit:before{content:'\\F25D'}.zmdi-comment-image:before{content:'\\F25E'}.zmdi-comment-list:before{content:'\\F25F'}.zmdi-comment-more:before{content:'\\F260'}.zmdi-comment-outline:before{content:'\\F261'}.zmdi-comment-text-alt:before{content:'\\F262'}.zmdi-comment-text:before{content:'\\F263'}.zmdi-comment-video:before{content:'\\F264'}.zmdi-comment:before{content:'\\F265'}.zmdi-comments:before{content:'\\F266'}.zmdi-check-all:before{content:'\\F267'}.zmdi-check-circle-u:before{content:'\\F268'}.zmdi-check-circle:before{content:'\\F269'}.zmdi-check-square:before{content:'\\F26A'}.zmdi-check:before{content:'\\F26B'}.zmdi-circle-o:before{content:'\\F26C'}.zmdi-circle:before{content:'\\F26D'}.zmdi-dot-circle-alt:before{content:'\\F26E'}.zmdi-dot-circle:before{content:'\\F26F'}.zmdi-minus-circle-outline:before{content:'\\F270'}.zmdi-minus-circle:before{content:'\\F271'}.zmdi-minus-square:before{content:'\\F272'}.zmdi-minus:before{content:'\\F273'}.zmdi-plus-circle-o-duplicate:before{content:'\\F274'}.zmdi-plus-circle-o:before{content:'\\F275'}.zmdi-plus-circle:before{content:'\\F276'}.zmdi-plus-square:before{content:'\\F277'}.zmdi-plus:before{content:'\\F278'}.zmdi-square-o:before{content:'\\F279'}.zmdi-star-circle:before{content:'\\F27A'}.zmdi-star-half:before{content:'\\F27B'}.zmdi-star-outline:before{content:'\\F27C'}.zmdi-star:before{content:'\\F27D'}.zmdi-bluetooth-connected:before{content:'\\F27E'}.zmdi-bluetooth-off:before{content:'\\F27F'}.zmdi-bluetooth-search:before{content:'\\F280'}.zmdi-bluetooth-setting:before{content:'\\F281'}.zmdi-bluetooth:before{content:'\\F282'}.zmdi-camera-add:before{content:'\\F283'}.zmdi-camera-alt:before{content:'\\F284'}.zmdi-camera-bw:before{content:'\\F285'}.zmdi-camera-front:before{content:'\\F286'}.zmdi-camera-mic:before{content:'\\F287'}.zmdi-camera-party-mode:before{content:'\\F288'}.zmdi-camera-rear:before{content:'\\F289'}.zmdi-camera-roll:before{content:'\\F28A'}.zmdi-camera-switch:before{content:'\\F28B'}.zmdi-camera:before{content:'\\F28C'}.zmdi-card-alert:before{content:'\\F28D'}.zmdi-card-off:before{content:'\\F28E'}.zmdi-card-sd:before{content:'\\F28F'}.zmdi-card-sim:before{content:'\\F290'}.zmdi-desktop-mac:before{content:'\\F291'}.zmdi-desktop-windows:before{content:'\\F292'}.zmdi-device-hub:before{content:'\\F293'}.zmdi-devices-off:before{content:'\\F294'}.zmdi-devices:before{content:'\\F295'}.zmdi-dock:before{content:'\\F296'}.zmdi-floppy:before{content:'\\F297'}.zmdi-gamepad:before{content:'\\F298'}.zmdi-gps-dot:before{content:'\\F299'}.zmdi-gps-off:before{content:'\\F29A'}.zmdi-gps:before{content:'\\F29B'}.zmdi-headset-mic:before{content:'\\F29C'}.zmdi-headset:before{content:'\\F29D'}.zmdi-input-antenna:before{content:'\\F29E'}.zmdi-input-composite:before{content:'\\F29F'}.zmdi-input-hdmi:before{content:'\\F2A0'}.zmdi-input-power:before{content:'\\F2A1'}.zmdi-input-svideo:before{content:'\\F2A2'}.zmdi-keyboard-hide:before{content:'\\F2A3'}.zmdi-keyboard:before{content:'\\F2A4'}.zmdi-laptop-chromebook:before{content:'\\F2A5'}.zmdi-laptop-mac:before{content:'\\F2A6'}.zmdi-laptop:before{content:'\\F2A7'}.zmdi-mic-off:before{content:'\\F2A8'}.zmdi-mic-outline:before{content:'\\F2A9'}.zmdi-mic-setting:before{content:'\\F2AA'}.zmdi-mic:before{content:'\\F2AB'}.zmdi-mouse:before{content:'\\F2AC'}.zmdi-network-alert:before{content:'\\F2AD'}.zmdi-network-locked:before{content:'\\F2AE'}.zmdi-network-off:before{content:'\\F2AF'}.zmdi-network-outline:before{content:'\\F2B0'}.zmdi-network-setting:before{content:'\\F2B1'}.zmdi-network:before{content:'\\F2B2'}.zmdi-phone-bluetooth:before{content:'\\F2B3'}.zmdi-phone-end:before{content:'\\F2B4'}.zmdi-phone-forwarded:before{content:'\\F2B5'}.zmdi-phone-in-talk:before{content:'\\F2B6'}.zmdi-phone-locked:before{content:'\\F2B7'}.zmdi-phone-missed:before{content:'\\F2B8'}.zmdi-phone-msg:before{content:'\\F2B9'}.zmdi-phone-paused:before{content:'\\F2BA'}.zmdi-phone-ring:before{content:'\\F2BB'}.zmdi-phone-setting:before{content:'\\F2BC'}.zmdi-phone-sip:before{content:'\\F2BD'}.zmdi-phone:before{content:'\\F2BE'}.zmdi-portable-wifi-changes:before{content:'\\F2BF'}.zmdi-portable-wifi-off:before{content:'\\F2C0'}.zmdi-portable-wifi:before{content:'\\F2C1'}.zmdi-radio:before{content:'\\F2C2'}.zmdi-reader:before{content:'\\F2C3'}.zmdi-remote-control-alt:before{content:'\\F2C4'}.zmdi-remote-control:before{content:'\\F2C5'}.zmdi-router:before{content:'\\F2C6'}.zmdi-scanner:before{content:'\\F2C7'}.zmdi-smartphone-android:before{content:'\\F2C8'}.zmdi-smartphone-download:before{content:'\\F2C9'}.zmdi-smartphone-erase:before{content:'\\F2CA'}.zmdi-smartphone-info:before{content:'\\F2CB'}.zmdi-smartphone-iphone:before{content:'\\F2CC'}.zmdi-smartphone-landscape-lock:before{content:'\\F2CD'}.zmdi-smartphone-landscape:before{content:'\\F2CE'}.zmdi-smartphone-lock:before{content:'\\F2CF'}.zmdi-smartphone-portrait-lock:before{content:'\\F2D0'}.zmdi-smartphone-ring:before{content:'\\F2D1'}.zmdi-smartphone-setting:before{content:'\\F2D2'}.zmdi-smartphone-setup:before{content:'\\F2D3'}.zmdi-smartphone:before{content:'\\F2D4'}.zmdi-speaker:before{content:'\\F2D5'}.zmdi-tablet-android:before{content:'\\F2D6'}.zmdi-tablet-mac:before{content:'\\F2D7'}.zmdi-tablet:before{content:'\\F2D8'}.zmdi-tv-alt-play:before{content:'\\F2D9'}.zmdi-tv-list:before{content:'\\F2DA'}.zmdi-tv-play:before{content:'\\F2DB'}.zmdi-tv:before{content:'\\F2DC'}.zmdi-usb:before{content:'\\F2DD'}.zmdi-videocam-off:before{content:'\\F2DE'}.zmdi-videocam-switch:before{content:'\\F2DF'}.zmdi-videocam:before{content:'\\F2E0'}.zmdi-watch:before{content:'\\F2E1'}.zmdi-wifi-alt-2:before{content:'\\F2E2'}.zmdi-wifi-alt:before{content:'\\F2E3'}.zmdi-wifi-info:before{content:'\\F2E4'}.zmdi-wifi-lock:before{content:'\\F2E5'}.zmdi-wifi-off:before{content:'\\F2E6'}.zmdi-wifi-outline:before{content:'\\F2E7'}.zmdi-wifi:before{content:'\\F2E8'}.zmdi-arrow-left-bottom:before{content:'\\F2E9'}.zmdi-arrow-left:before{content:'\\F2EA'}.zmdi-arrow-merge:before{content:'\\F2EB'}.zmdi-arrow-missed:before{content:'\\F2EC'}.zmdi-arrow-right-top:before{content:'\\F2ED'}.zmdi-arrow-right:before{content:'\\F2EE'}.zmdi-arrow-split:before{content:'\\F2EF'}.zmdi-arrows:before{content:'\\F2F0'}.zmdi-caret-down-circle:before{content:'\\F2F1'}.zmdi-caret-down:before{content:'\\F2F2'}.zmdi-caret-left-circle:before{content:'\\F2F3'}.zmdi-caret-left:before{content:'\\F2F4'}.zmdi-caret-right-circle:before{content:'\\F2F5'}.zmdi-caret-right:before{content:'\\F2F6'}.zmdi-caret-up-circle:before{content:'\\F2F7'}.zmdi-caret-up:before{content:'\\F2F8'}.zmdi-chevron-down:before{content:'\\F2F9'}.zmdi-chevron-left:before{content:'\\F2FA'}.zmdi-chevron-right:before{content:'\\F2FB'}.zmdi-chevron-up:before{content:'\\F2FC'}.zmdi-forward:before{content:'\\F2FD'}.zmdi-long-arrow-down:before{content:'\\F2FE'}.zmdi-long-arrow-left:before{content:'\\F2FF'}.zmdi-long-arrow-return:before{content:'\\F300'}.zmdi-long-arrow-right:before{content:'\\F301'}.zmdi-long-arrow-tab:before{content:'\\F302'}.zmdi-long-arrow-up:before{content:'\\F303'}.zmdi-rotate-ccw:before{content:'\\F304'}.zmdi-rotate-cw:before{content:'\\F305'}.zmdi-rotate-left:before{content:'\\F306'}.zmdi-rotate-right:before{content:'\\F307'}.zmdi-square-down:before{content:'\\F308'}.zmdi-square-right:before{content:'\\F309'}.zmdi-swap-alt:before{content:'\\F30A'}.zmdi-swap-vertical-circle:before{content:'\\F30B'}.zmdi-swap-vertical:before{content:'\\F30C'}.zmdi-swap:before{content:'\\F30D'}.zmdi-trending-down:before{content:'\\F30E'}.zmdi-trending-flat:before{content:'\\F30F'}.zmdi-trending-up:before{content:'\\F310'}.zmdi-unfold-less:before{content:'\\F311'}.zmdi-unfold-more:before{content:'\\F312'}.zmdi-apps:before{content:'\\F313'}.zmdi-grid-off:before{content:'\\F314'}.zmdi-grid:before{content:'\\F315'}.zmdi-view-agenda:before{content:'\\F316'}.zmdi-view-array:before{content:'\\F317'}.zmdi-view-carousel:before{content:'\\F318'}.zmdi-view-column:before{content:'\\F319'}.zmdi-view-comfy:before{content:'\\F31A'}.zmdi-view-compact:before{content:'\\F31B'}.zmdi-view-dashboard:before{content:'\\F31C'}.zmdi-view-day:before{content:'\\F31D'}.zmdi-view-headline:before{content:'\\F31E'}.zmdi-view-list-alt:before{content:'\\F31F'}.zmdi-view-list:before{content:'\\F320'}.zmdi-view-module:before{content:'\\F321'}.zmdi-view-quilt:before{content:'\\F322'}.zmdi-view-stream:before{content:'\\F323'}.zmdi-view-subtitles:before{content:'\\F324'}.zmdi-view-toc:before{content:'\\F325'}.zmdi-view-web:before{content:'\\F326'}.zmdi-view-week:before{content:'\\F327'}.zmdi-widgets:before{content:'\\F328'}.zmdi-alarm-check:before{content:'\\F329'}.zmdi-alarm-off:before{content:'\\F32A'}.zmdi-alarm-plus:before{content:'\\F32B'}.zmdi-alarm-snooze:before{content:'\\F32C'}.zmdi-alarm:before{content:'\\F32D'}.zmdi-calendar-alt:before{content:'\\F32E'}.zmdi-calendar-check:before{content:'\\F32F'}.zmdi-calendar-close:before{content:'\\F330'}.zmdi-calendar-note:before{content:'\\F331'}.zmdi-calendar:before{content:'\\F332'}.zmdi-time-countdown:before{content:'\\F333'}.zmdi-time-interval:before{content:'\\F334'}.zmdi-time-restore-setting:before{content:'\\F335'}.zmdi-time-restore:before{content:'\\F336'}.zmdi-time:before{content:'\\F337'}.zmdi-timer-off:before{content:'\\F338'}.zmdi-timer:before{content:'\\F339'}.zmdi-android-alt:before{content:'\\F33A'}.zmdi-android:before{content:'\\F33B'}.zmdi-apple:before{content:'\\F33C'}.zmdi-behance:before{content:'\\F33D'}.zmdi-codepen:before{content:'\\F33E'}.zmdi-dribbble:before{content:'\\F33F'}.zmdi-dropbox:before{content:'\\F340'}.zmdi-evernote:before{content:'\\F341'}.zmdi-facebook-box:before{content:'\\F342'}.zmdi-facebook:before{content:'\\F343'}.zmdi-github-box:before{content:'\\F344'}.zmdi-github:before{content:'\\F345'}.zmdi-google-drive:before{content:'\\F346'}.zmdi-google-earth:before{content:'\\F347'}.zmdi-google-glass:before{content:'\\F348'}.zmdi-google-maps:before{content:'\\F349'}.zmdi-google-pages:before{content:'\\F34A'}.zmdi-google-play:before{content:'\\F34B'}.zmdi-google-plus-box:before{content:'\\F34C'}.zmdi-google-plus:before{content:'\\F34D'}.zmdi-google:before{content:'\\F34E'}.zmdi-instagram:before{content:'\\F34F'}.zmdi-language-css3:before{content:'\\F350'}.zmdi-language-html5:before{content:'\\F351'}.zmdi-language-javascript:before{content:'\\F352'}.zmdi-language-python-alt:before{content:'\\F353'}.zmdi-language-python:before{content:'\\F354'}.zmdi-lastfm:before{content:'\\F355'}.zmdi-linkedin-box:before{content:'\\F356'}.zmdi-paypal:before{content:'\\F357'}.zmdi-pinterest-box:before{content:'\\F358'}.zmdi-pocket:before{content:'\\F359'}.zmdi-polymer:before{content:'\\F35A'}.zmdi-share:before{content:'\\F35B'}.zmdi-stackoverflow:before{content:'\\F35C'}.zmdi-steam-square:before{content:'\\F35D'}.zmdi-steam:before{content:'\\F35E'}.zmdi-twitter-box:before{content:'\\F35F'}.zmdi-twitter:before{content:'\\F360'}.zmdi-vk:before{content:'\\F361'}.zmdi-wikipedia:before{content:'\\F362'}.zmdi-windows:before{content:'\\F363'}.zmdi-aspect-ratio-alt:before{content:'\\F364'}.zmdi-aspect-ratio:before{content:'\\F365'}.zmdi-blur-circular:before{content:'\\F366'}.zmdi-blur-linear:before{content:'\\F367'}.zmdi-blur-off:before{content:'\\F368'}.zmdi-blur:before{content:'\\F369'}.zmdi-brightness-2:before{content:'\\F36A'}.zmdi-brightness-3:before{content:'\\F36B'}.zmdi-brightness-4:before{content:'\\F36C'}.zmdi-brightness-5:before{content:'\\F36D'}.zmdi-brightness-6:before{content:'\\F36E'}.zmdi-brightness-7:before{content:'\\F36F'}.zmdi-brightness-auto:before{content:'\\F370'}.zmdi-brightness-setting:before{content:'\\F371'}.zmdi-broken-image:before{content:'\\F372'}.zmdi-center-focus-strong:before{content:'\\F373'}.zmdi-center-focus-weak:before{content:'\\F374'}.zmdi-compare:before{content:'\\F375'}.zmdi-crop-16-9:before{content:'\\F376'}.zmdi-crop-3-2:before{content:'\\F377'}.zmdi-crop-5-4:before{content:'\\F378'}.zmdi-crop-7-5:before{content:'\\F379'}.zmdi-crop-din:before{content:'\\F37A'}.zmdi-crop-free:before{content:'\\F37B'}.zmdi-crop-landscape:before{content:'\\F37C'}.zmdi-crop-portrait:before{content:'\\F37D'}.zmdi-crop-square:before{content:'\\F37E'}.zmdi-exposure-alt:before{content:'\\F37F'}.zmdi-exposure:before{content:'\\F380'}.zmdi-filter-b-and-w:before{content:'\\F381'}.zmdi-filter-center-focus:before{content:'\\F382'}.zmdi-filter-frames:before{content:'\\F383'}.zmdi-filter-tilt-shift:before{content:'\\F384'}.zmdi-gradient:before{content:'\\F385'}.zmdi-grain:before{content:'\\F386'}.zmdi-graphic-eq:before{content:'\\F387'}.zmdi-hdr-off:before{content:'\\F388'}.zmdi-hdr-strong:before{content:'\\F389'}.zmdi-hdr-weak:before{content:'\\F38A'}.zmdi-hdr:before{content:'\\F38B'}.zmdi-iridescent:before{content:'\\F38C'}.zmdi-leak-off:before{content:'\\F38D'}.zmdi-leak:before{content:'\\F38E'}.zmdi-looks:before{content:'\\F38F'}.zmdi-loupe:before{content:'\\F390'}.zmdi-panorama-horizontal:before{content:'\\F391'}.zmdi-panorama-vertical:before{content:'\\F392'}.zmdi-panorama-wide-angle:before{content:'\\F393'}.zmdi-photo-size-select-large:before{content:'\\F394'}.zmdi-photo-size-select-small:before{content:'\\F395'}.zmdi-picture-in-picture:before{content:'\\F396'}.zmdi-slideshow:before{content:'\\F397'}.zmdi-texture:before{content:'\\F398'}.zmdi-tonality:before{content:'\\F399'}.zmdi-vignette:before{content:'\\F39A'}.zmdi-wb-auto:before{content:'\\F39B'}.zmdi-eject-alt:before{content:'\\F39C'}.zmdi-eject:before{content:'\\F39D'}.zmdi-equalizer:before{content:'\\F39E'}.zmdi-fast-forward:before{content:'\\F39F'}.zmdi-fast-rewind:before{content:'\\F3A0'}.zmdi-forward-10:before{content:'\\F3A1'}.zmdi-forward-30:before{content:'\\F3A2'}.zmdi-forward-5:before{content:'\\F3A3'}.zmdi-hearing:before{content:'\\F3A4'}.zmdi-pause-circle-outline:before{content:'\\F3A5'}.zmdi-pause-circle:before{content:'\\F3A6'}.zmdi-pause:before{content:'\\F3A7'}.zmdi-play-circle-outline:before{content:'\\F3A8'}.zmdi-play-circle:before{content:'\\F3A9'}.zmdi-play:before{content:'\\F3AA'}.zmdi-playlist-audio:before{content:'\\F3AB'}.zmdi-playlist-plus:before{content:'\\F3AC'}.zmdi-repeat-one:before{content:'\\F3AD'}.zmdi-repeat:before{content:'\\F3AE'}.zmdi-replay-10:before{content:'\\F3AF'}.zmdi-replay-30:before{content:'\\F3B0'}.zmdi-replay-5:before{content:'\\F3B1'}.zmdi-replay:before{content:'\\F3B2'}.zmdi-shuffle:before{content:'\\F3B3'}.zmdi-skip-next:before{content:'\\F3B4'}.zmdi-skip-previous:before{content:'\\F3B5'}.zmdi-stop:before{content:'\\F3B6'}.zmdi-surround-sound:before{content:'\\F3B7'}.zmdi-tune:before{content:'\\F3B8'}.zmdi-volume-down:before{content:'\\F3B9'}.zmdi-volume-mute:before{content:'\\F3BA'}.zmdi-volume-off:before{content:'\\F3BB'}.zmdi-volume-up:before{content:'\\F3BC'}.zmdi-n-1-square:before{content:'\\F3BD'}.zmdi-n-2-square:before{content:'\\F3BE'}.zmdi-n-3-square:before{content:'\\F3BF'}.zmdi-n-4-square:before{content:'\\F3C0'}.zmdi-n-5-square:before{content:'\\F3C1'}.zmdi-n-6-square:before{content:'\\F3C2'}.zmdi-neg-1:before{content:'\\F3C3'}.zmdi-neg-2:before{content:'\\F3C4'}.zmdi-plus-1:before{content:'\\F3C5'}.zmdi-plus-2:before{content:'\\F3C6'}.zmdi-sec-10:before{content:'\\F3C7'}.zmdi-sec-3:before{content:'\\F3C8'}.zmdi-zero:before{content:'\\F3C9'}.zmdi-airline-seat-flat-angled:before{content:'\\F3CA'}.zmdi-airline-seat-flat:before{content:'\\F3CB'}.zmdi-airline-seat-individual-suite:before{content:'\\F3CC'}.zmdi-airline-seat-legroom-extra:before{content:'\\F3CD'}.zmdi-airline-seat-legroom-normal:before{content:'\\F3CE'}.zmdi-airline-seat-legroom-reduced:before{content:'\\F3CF'}.zmdi-airline-seat-recline-extra:before{content:'\\F3D0'}.zmdi-airline-seat-recline-normal:before{content:'\\F3D1'}.zmdi-airplay:before{content:'\\F3D2'}.zmdi-closed-caption:before{content:'\\F3D3'}.zmdi-confirmation-number:before{content:'\\F3D4'}.zmdi-developer-board:before{content:'\\F3D5'}.zmdi-disc-full:before{content:'\\F3D6'}.zmdi-explicit:before{content:'\\F3D7'}.zmdi-flight-land:before{content:'\\F3D8'}.zmdi-flight-takeoff:before{content:'\\F3D9'}.zmdi-flip-to-back:before{content:'\\F3DA'}.zmdi-flip-to-front:before{content:'\\F3DB'}.zmdi-group-work:before{content:'\\F3DC'}.zmdi-hd:before{content:'\\F3DD'}.zmdi-hq:before{content:'\\F3DE'}.zmdi-markunread-mailbox:before{content:'\\F3DF'}.zmdi-memory:before{content:'\\F3E0'}.zmdi-nfc:before{content:'\\F3E1'}.zmdi-play-for-work:before{content:'\\F3E2'}.zmdi-power-input:before{content:'\\F3E3'}.zmdi-present-to-all:before{content:'\\F3E4'}.zmdi-satellite:before{content:'\\F3E5'}.zmdi-tap-and-play:before{content:'\\F3E6'}.zmdi-vibration:before{content:'\\F3E7'}.zmdi-voicemail:before{content:'\\F3E8'}.zmdi-group:before{content:'\\F3E9'}.zmdi-rss:before{content:'\\F3EA'}.zmdi-shape:before{content:'\\F3EB'}.zmdi-spinner:before{content:'\\F3EC'}.zmdi-ungroup:before{content:'\\F3ED'}.zmdi-500px:before{content:'\\F3EE'}.zmdi-8tracks:before{content:'\\F3EF'}.zmdi-amazon:before{content:'\\F3F0'}.zmdi-blogger:before{content:'\\F3F1'}.zmdi-delicious:before{content:'\\F3F2'}.zmdi-disqus:before{content:'\\F3F3'}.zmdi-flattr:before{content:'\\F3F4'}.zmdi-flickr:before{content:'\\F3F5'}.zmdi-github-alt:before{content:'\\F3F6'}.zmdi-google-old:before{content:'\\F3F7'}.zmdi-linkedin:before{content:'\\F3F8'}.zmdi-odnoklassniki:before{content:'\\F3F9'}.zmdi-outlook:before{content:'\\F3FA'}.zmdi-paypal-alt:before{content:'\\F3FB'}.zmdi-pinterest:before{content:'\\F3FC'}.zmdi-playstation:before{content:'\\F3FD'}.zmdi-reddit:before{content:'\\F3FE'}.zmdi-skype:before{content:'\\F3FF'}.zmdi-slideshare:before{content:'\\F400'}.zmdi-soundcloud:before{content:'\\F401'}.zmdi-tumblr:before{content:'\\F402'}.zmdi-twitch:before{content:'\\F403'}.zmdi-vimeo:before{content:'\\F404'}.zmdi-whatsapp:before{content:'\\F405'}.zmdi-xbox:before{content:'\\F406'}.zmdi-yahoo:before{content:'\\F407'}.zmdi-youtube-play:before{content:'\\F408'}.zmdi-youtube:before{content:'\\F409'}.zmdi-import-export:before{content:'\\F30C'}.zmdi-swap-vertical-:before{content:'\\F30C'}.zmdi-airplanemode-inactive:before{content:'\\F102'}.zmdi-airplanemode-active:before{content:'\\F103'}.zmdi-rate-review:before{content:'\\F103'}.zmdi-comment-sign:before{content:'\\F25A'}.zmdi-network-warning:before{content:'\\F2AD'}.zmdi-shopping-cart-add:before{content:'\\F1CA'}.zmdi-file-add:before{content:'\\F221'}.zmdi-network-wifi-scan:before{content:'\\F2E4'}.zmdi-collection-add:before{content:'\\F14E'}.zmdi-format-playlist-add:before{content:'\\F3AC'}.zmdi-format-queue-music:before{content:'\\F3AB'}.zmdi-plus-box:before{content:'\\F277'}.zmdi-tag-backspace:before{content:'\\F1D9'}.zmdi-alarm-add:before{content:'\\F32B'}.zmdi-battery-charging:before{content:'\\F114'}.zmdi-daydream-setting:before{content:'\\F217'}.zmdi-more-horiz:before{content:'\\F19C'}.zmdi-book-photo:before{content:'\\F11B'}.zmdi-incandescent:before{content:'\\F189'}.zmdi-wb-iridescent:before{content:'\\F38C'}.zmdi-calendar-remove:before{content:'\\F330'}.zmdi-refresh-sync-disabled:before{content:'\\F1B7'}.zmdi-refresh-sync-problem:before{content:'\\F1B6'}.zmdi-crop-original:before{content:'\\F17E'}.zmdi-power-off:before{content:'\\F1AF'}.zmdi-power-off-setting:before{content:'\\F1AE'}.zmdi-leak-remove:before{content:'\\F38D'}.zmdi-star-border:before{content:'\\F27C'}.zmdi-brightness-low:before{content:'\\F36D'}.zmdi-brightness-medium:before{content:'\\F36E'}.zmdi-brightness-high:before{content:'\\F36F'}.zmdi-smartphone-portrait:before{content:'\\F2D4'}.zmdi-live-tv:before{content:'\\F2D9'}.zmdi-format-textdirection-l-to-r:before{content:'\\F249'}.zmdi-format-textdirection-r-to-l:before{content:'\\F24A'}.zmdi-arrow-back:before{content:'\\F2EA'}.zmdi-arrow-forward:before{content:'\\F2EE'}.zmdi-arrow-in:before{content:'\\F2E9'}.zmdi-arrow-out:before{content:'\\F2ED'}.zmdi-rotate-90-degrees-ccw:before{content:'\\F304'}.zmdi-adb:before{content:'\\F33A'}.zmdi-network-wifi:before{content:'\\F2E8'}.zmdi-network-wifi-alt:before{content:'\\F2E3'}.zmdi-network-wifi-lock:before{content:'\\F2E5'}.zmdi-network-wifi-off:before{content:'\\F2E6'}.zmdi-network-wifi-outline:before{content:'\\F2E7'}.zmdi-network-wifi-info:before{content:'\\F2E4'}.zmdi-layers-clear:before{content:'\\F18B'}.zmdi-colorize:before{content:'\\F15D'}.zmdi-format-paint:before{content:'\\F1BA'}.zmdi-format-quote:before{content:'\\F1B2'}.zmdi-camera-monochrome-photos:before{content:'\\F285'}.zmdi-sort-by-alpha:before{content:'\\F1CF'}.zmdi-folder-shared:before{content:'\\F225'}.zmdi-folder-special:before{content:'\\F226'}.zmdi-comment-dots:before{content:'\\F260'}.zmdi-reorder:before{content:'\\F31E'}.zmdi-dehaze:before{content:'\\F197'}.zmdi-sort:before{content:'\\F1CE'}.zmdi-pages:before{content:'\\F34A'}.zmdi-stack-overflow:before{content:'\\F35C'}.zmdi-calendar-account:before{content:'\\F204'}.zmdi-paste:before{content:'\\F109'}.zmdi-cut:before{content:'\\F1BC'}.zmdi-save:before{content:'\\F297'}.zmdi-smartphone-code:before{content:'\\F139'}.zmdi-directions-bike:before{content:'\\F117'}.zmdi-directions-boat:before{content:'\\F11A'}.zmdi-directions-bus:before{content:'\\F121'}.zmdi-directions-car:before{content:'\\F125'}.zmdi-directions-railway:before{content:'\\F1B3'}.zmdi-directions-run:before{content:'\\F215'}.zmdi-directions-subway:before{content:'\\F1D5'}.zmdi-directions-walk:before{content:'\\F216'}.zmdi-local-hotel:before{content:'\\F178'}.zmdi-local-activity:before{content:'\\F1DF'}.zmdi-local-play:before{content:'\\F1DF'}.zmdi-local-airport:before{content:'\\F103'}.zmdi-local-atm:before{content:'\\F198'}.zmdi-local-bar:before{content:'\\F137'}.zmdi-local-cafe:before{content:'\\F13B'}.zmdi-local-car-wash:before{content:'\\F124'}.zmdi-local-convenience-store:before{content:'\\F1D3'}.zmdi-local-dining:before{content:'\\F153'}.zmdi-local-drink:before{content:'\\F157'}.zmdi-local-florist:before{content:'\\F168'}.zmdi-local-gas-station:before{content:'\\F16F'}.zmdi-local-grocery-store:before{content:'\\F1CB'}.zmdi-local-hospital:before{content:'\\F177'}.zmdi-local-laundry-service:before{content:'\\F1E9'}.zmdi-local-library:before{content:'\\F18D'}.zmdi-local-mall:before{content:'\\F195'}.zmdi-local-movies:before{content:'\\F19D'}.zmdi-local-offer:before{content:'\\F187'}.zmdi-local-parking:before{content:'\\F1A5'}.zmdi-local-parking:before{content:'\\F1A5'}.zmdi-local-pharmacy:before{content:'\\F176'}.zmdi-local-phone:before{content:'\\F2BE'}.zmdi-local-pizza:before{content:'\\F1AC'}.zmdi-local-post-office:before{content:'\\F15A'}.zmdi-local-printshop:before{content:'\\F1B0'}.zmdi-local-see:before{content:'\\F28C'}.zmdi-local-shipping:before{content:'\\F1E6'}.zmdi-local-store:before{content:'\\F1D4'}.zmdi-local-taxi:before{content:'\\F123'}.zmdi-local-wc:before{content:'\\F211'}.zmdi-my-location:before{content:'\\F299'}.zmdi-directions:before{content:'\\F1E7'}", ""]);
	
	// exports


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "a4d31128b633bc0b1cc1f18a34fb3851.woff2";

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d2a55d331bdd1a7ea97a8a1fbb3c569c.woff";

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b351bd62abcd96e924d9f44a3da169a7.ttf";

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(222)();
	// imports
	
	
	// module
	exports.push([module.id, "/*!\n *  Font Awesome 4.6.3 by @davegandy - http://fontawesome.io - @fontawesome\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n */@font-face{font-family:'FontAwesome';src:url(" + __webpack_require__(233) + ");src:url(" + __webpack_require__(233) + ") format('embedded-opentype'),url(" + __webpack_require__(234) + ") format('woff2'),url(" + __webpack_require__(235) + ") format('woff'),url(" + __webpack_require__(236) + ") format('truetype'),url(" + __webpack_require__(237) + ") format('svg');font-weight:normal;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";-webkit-transform:scale(-1, 1);-ms-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";-webkit-transform:scale(1, -1);-ms-transform:scale(1, -1);transform:scale(1, -1)}:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\F000\"}.fa-music:before{content:\"\\F001\"}.fa-search:before{content:\"\\F002\"}.fa-envelope-o:before{content:\"\\F003\"}.fa-heart:before{content:\"\\F004\"}.fa-star:before{content:\"\\F005\"}.fa-star-o:before{content:\"\\F006\"}.fa-user:before{content:\"\\F007\"}.fa-film:before{content:\"\\F008\"}.fa-th-large:before{content:\"\\F009\"}.fa-th:before{content:\"\\F00A\"}.fa-th-list:before{content:\"\\F00B\"}.fa-check:before{content:\"\\F00C\"}.fa-remove:before,.fa-close:before,.fa-times:before{content:\"\\F00D\"}.fa-search-plus:before{content:\"\\F00E\"}.fa-search-minus:before{content:\"\\F010\"}.fa-power-off:before{content:\"\\F011\"}.fa-signal:before{content:\"\\F012\"}.fa-gear:before,.fa-cog:before{content:\"\\F013\"}.fa-trash-o:before{content:\"\\F014\"}.fa-home:before{content:\"\\F015\"}.fa-file-o:before{content:\"\\F016\"}.fa-clock-o:before{content:\"\\F017\"}.fa-road:before{content:\"\\F018\"}.fa-download:before{content:\"\\F019\"}.fa-arrow-circle-o-down:before{content:\"\\F01A\"}.fa-arrow-circle-o-up:before{content:\"\\F01B\"}.fa-inbox:before{content:\"\\F01C\"}.fa-play-circle-o:before{content:\"\\F01D\"}.fa-rotate-right:before,.fa-repeat:before{content:\"\\F01E\"}.fa-refresh:before{content:\"\\F021\"}.fa-list-alt:before{content:\"\\F022\"}.fa-lock:before{content:\"\\F023\"}.fa-flag:before{content:\"\\F024\"}.fa-headphones:before{content:\"\\F025\"}.fa-volume-off:before{content:\"\\F026\"}.fa-volume-down:before{content:\"\\F027\"}.fa-volume-up:before{content:\"\\F028\"}.fa-qrcode:before{content:\"\\F029\"}.fa-barcode:before{content:\"\\F02A\"}.fa-tag:before{content:\"\\F02B\"}.fa-tags:before{content:\"\\F02C\"}.fa-book:before{content:\"\\F02D\"}.fa-bookmark:before{content:\"\\F02E\"}.fa-print:before{content:\"\\F02F\"}.fa-camera:before{content:\"\\F030\"}.fa-font:before{content:\"\\F031\"}.fa-bold:before{content:\"\\F032\"}.fa-italic:before{content:\"\\F033\"}.fa-text-height:before{content:\"\\F034\"}.fa-text-width:before{content:\"\\F035\"}.fa-align-left:before{content:\"\\F036\"}.fa-align-center:before{content:\"\\F037\"}.fa-align-right:before{content:\"\\F038\"}.fa-align-justify:before{content:\"\\F039\"}.fa-list:before{content:\"\\F03A\"}.fa-dedent:before,.fa-outdent:before{content:\"\\F03B\"}.fa-indent:before{content:\"\\F03C\"}.fa-video-camera:before{content:\"\\F03D\"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:\"\\F03E\"}.fa-pencil:before{content:\"\\F040\"}.fa-map-marker:before{content:\"\\F041\"}.fa-adjust:before{content:\"\\F042\"}.fa-tint:before{content:\"\\F043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\F044\"}.fa-share-square-o:before{content:\"\\F045\"}.fa-check-square-o:before{content:\"\\F046\"}.fa-arrows:before{content:\"\\F047\"}.fa-step-backward:before{content:\"\\F048\"}.fa-fast-backward:before{content:\"\\F049\"}.fa-backward:before{content:\"\\F04A\"}.fa-play:before{content:\"\\F04B\"}.fa-pause:before{content:\"\\F04C\"}.fa-stop:before{content:\"\\F04D\"}.fa-forward:before{content:\"\\F04E\"}.fa-fast-forward:before{content:\"\\F050\"}.fa-step-forward:before{content:\"\\F051\"}.fa-eject:before{content:\"\\F052\"}.fa-chevron-left:before{content:\"\\F053\"}.fa-chevron-right:before{content:\"\\F054\"}.fa-plus-circle:before{content:\"\\F055\"}.fa-minus-circle:before{content:\"\\F056\"}.fa-times-circle:before{content:\"\\F057\"}.fa-check-circle:before{content:\"\\F058\"}.fa-question-circle:before{content:\"\\F059\"}.fa-info-circle:before{content:\"\\F05A\"}.fa-crosshairs:before{content:\"\\F05B\"}.fa-times-circle-o:before{content:\"\\F05C\"}.fa-check-circle-o:before{content:\"\\F05D\"}.fa-ban:before{content:\"\\F05E\"}.fa-arrow-left:before{content:\"\\F060\"}.fa-arrow-right:before{content:\"\\F061\"}.fa-arrow-up:before{content:\"\\F062\"}.fa-arrow-down:before{content:\"\\F063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\F064\"}.fa-expand:before{content:\"\\F065\"}.fa-compress:before{content:\"\\F066\"}.fa-plus:before{content:\"\\F067\"}.fa-minus:before{content:\"\\F068\"}.fa-asterisk:before{content:\"\\F069\"}.fa-exclamation-circle:before{content:\"\\F06A\"}.fa-gift:before{content:\"\\F06B\"}.fa-leaf:before{content:\"\\F06C\"}.fa-fire:before{content:\"\\F06D\"}.fa-eye:before{content:\"\\F06E\"}.fa-eye-slash:before{content:\"\\F070\"}.fa-warning:before,.fa-exclamation-triangle:before{content:\"\\F071\"}.fa-plane:before{content:\"\\F072\"}.fa-calendar:before{content:\"\\F073\"}.fa-random:before{content:\"\\F074\"}.fa-comment:before{content:\"\\F075\"}.fa-magnet:before{content:\"\\F076\"}.fa-chevron-up:before{content:\"\\F077\"}.fa-chevron-down:before{content:\"\\F078\"}.fa-retweet:before{content:\"\\F079\"}.fa-shopping-cart:before{content:\"\\F07A\"}.fa-folder:before{content:\"\\F07B\"}.fa-folder-open:before{content:\"\\F07C\"}.fa-arrows-v:before{content:\"\\F07D\"}.fa-arrows-h:before{content:\"\\F07E\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\"\\F080\"}.fa-twitter-square:before{content:\"\\F081\"}.fa-facebook-square:before{content:\"\\F082\"}.fa-camera-retro:before{content:\"\\F083\"}.fa-key:before{content:\"\\F084\"}.fa-gears:before,.fa-cogs:before{content:\"\\F085\"}.fa-comments:before{content:\"\\F086\"}.fa-thumbs-o-up:before{content:\"\\F087\"}.fa-thumbs-o-down:before{content:\"\\F088\"}.fa-star-half:before{content:\"\\F089\"}.fa-heart-o:before{content:\"\\F08A\"}.fa-sign-out:before{content:\"\\F08B\"}.fa-linkedin-square:before{content:\"\\F08C\"}.fa-thumb-tack:before{content:\"\\F08D\"}.fa-external-link:before{content:\"\\F08E\"}.fa-sign-in:before{content:\"\\F090\"}.fa-trophy:before{content:\"\\F091\"}.fa-github-square:before{content:\"\\F092\"}.fa-upload:before{content:\"\\F093\"}.fa-lemon-o:before{content:\"\\F094\"}.fa-phone:before{content:\"\\F095\"}.fa-square-o:before{content:\"\\F096\"}.fa-bookmark-o:before{content:\"\\F097\"}.fa-phone-square:before{content:\"\\F098\"}.fa-twitter:before{content:\"\\F099\"}.fa-facebook-f:before,.fa-facebook:before{content:\"\\F09A\"}.fa-github:before{content:\"\\F09B\"}.fa-unlock:before{content:\"\\F09C\"}.fa-credit-card:before{content:\"\\F09D\"}.fa-feed:before,.fa-rss:before{content:\"\\F09E\"}.fa-hdd-o:before{content:\"\\F0A0\"}.fa-bullhorn:before{content:\"\\F0A1\"}.fa-bell:before{content:\"\\F0F3\"}.fa-certificate:before{content:\"\\F0A3\"}.fa-hand-o-right:before{content:\"\\F0A4\"}.fa-hand-o-left:before{content:\"\\F0A5\"}.fa-hand-o-up:before{content:\"\\F0A6\"}.fa-hand-o-down:before{content:\"\\F0A7\"}.fa-arrow-circle-left:before{content:\"\\F0A8\"}.fa-arrow-circle-right:before{content:\"\\F0A9\"}.fa-arrow-circle-up:before{content:\"\\F0AA\"}.fa-arrow-circle-down:before{content:\"\\F0AB\"}.fa-globe:before{content:\"\\F0AC\"}.fa-wrench:before{content:\"\\F0AD\"}.fa-tasks:before{content:\"\\F0AE\"}.fa-filter:before{content:\"\\F0B0\"}.fa-briefcase:before{content:\"\\F0B1\"}.fa-arrows-alt:before{content:\"\\F0B2\"}.fa-group:before,.fa-users:before{content:\"\\F0C0\"}.fa-chain:before,.fa-link:before{content:\"\\F0C1\"}.fa-cloud:before{content:\"\\F0C2\"}.fa-flask:before{content:\"\\F0C3\"}.fa-cut:before,.fa-scissors:before{content:\"\\F0C4\"}.fa-copy:before,.fa-files-o:before{content:\"\\F0C5\"}.fa-paperclip:before{content:\"\\F0C6\"}.fa-save:before,.fa-floppy-o:before{content:\"\\F0C7\"}.fa-square:before{content:\"\\F0C8\"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:\"\\F0C9\"}.fa-list-ul:before{content:\"\\F0CA\"}.fa-list-ol:before{content:\"\\F0CB\"}.fa-strikethrough:before{content:\"\\F0CC\"}.fa-underline:before{content:\"\\F0CD\"}.fa-table:before{content:\"\\F0CE\"}.fa-magic:before{content:\"\\F0D0\"}.fa-truck:before{content:\"\\F0D1\"}.fa-pinterest:before{content:\"\\F0D2\"}.fa-pinterest-square:before{content:\"\\F0D3\"}.fa-google-plus-square:before{content:\"\\F0D4\"}.fa-google-plus:before{content:\"\\F0D5\"}.fa-money:before{content:\"\\F0D6\"}.fa-caret-down:before{content:\"\\F0D7\"}.fa-caret-up:before{content:\"\\F0D8\"}.fa-caret-left:before{content:\"\\F0D9\"}.fa-caret-right:before{content:\"\\F0DA\"}.fa-columns:before{content:\"\\F0DB\"}.fa-unsorted:before,.fa-sort:before{content:\"\\F0DC\"}.fa-sort-down:before,.fa-sort-desc:before{content:\"\\F0DD\"}.fa-sort-up:before,.fa-sort-asc:before{content:\"\\F0DE\"}.fa-envelope:before{content:\"\\F0E0\"}.fa-linkedin:before{content:\"\\F0E1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\F0E2\"}.fa-legal:before,.fa-gavel:before{content:\"\\F0E3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\F0E4\"}.fa-comment-o:before{content:\"\\F0E5\"}.fa-comments-o:before{content:\"\\F0E6\"}.fa-flash:before,.fa-bolt:before{content:\"\\F0E7\"}.fa-sitemap:before{content:\"\\F0E8\"}.fa-umbrella:before{content:\"\\F0E9\"}.fa-paste:before,.fa-clipboard:before{content:\"\\F0EA\"}.fa-lightbulb-o:before{content:\"\\F0EB\"}.fa-exchange:before{content:\"\\F0EC\"}.fa-cloud-download:before{content:\"\\F0ED\"}.fa-cloud-upload:before{content:\"\\F0EE\"}.fa-user-md:before{content:\"\\F0F0\"}.fa-stethoscope:before{content:\"\\F0F1\"}.fa-suitcase:before{content:\"\\F0F2\"}.fa-bell-o:before{content:\"\\F0A2\"}.fa-coffee:before{content:\"\\F0F4\"}.fa-cutlery:before{content:\"\\F0F5\"}.fa-file-text-o:before{content:\"\\F0F6\"}.fa-building-o:before{content:\"\\F0F7\"}.fa-hospital-o:before{content:\"\\F0F8\"}.fa-ambulance:before{content:\"\\F0F9\"}.fa-medkit:before{content:\"\\F0FA\"}.fa-fighter-jet:before{content:\"\\F0FB\"}.fa-beer:before{content:\"\\F0FC\"}.fa-h-square:before{content:\"\\F0FD\"}.fa-plus-square:before{content:\"\\F0FE\"}.fa-angle-double-left:before{content:\"\\F100\"}.fa-angle-double-right:before{content:\"\\F101\"}.fa-angle-double-up:before{content:\"\\F102\"}.fa-angle-double-down:before{content:\"\\F103\"}.fa-angle-left:before{content:\"\\F104\"}.fa-angle-right:before{content:\"\\F105\"}.fa-angle-up:before{content:\"\\F106\"}.fa-angle-down:before{content:\"\\F107\"}.fa-desktop:before{content:\"\\F108\"}.fa-laptop:before{content:\"\\F109\"}.fa-tablet:before{content:\"\\F10A\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\F10B\"}.fa-circle-o:before{content:\"\\F10C\"}.fa-quote-left:before{content:\"\\F10D\"}.fa-quote-right:before{content:\"\\F10E\"}.fa-spinner:before{content:\"\\F110\"}.fa-circle:before{content:\"\\F111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\F112\"}.fa-github-alt:before{content:\"\\F113\"}.fa-folder-o:before{content:\"\\F114\"}.fa-folder-open-o:before{content:\"\\F115\"}.fa-smile-o:before{content:\"\\F118\"}.fa-frown-o:before{content:\"\\F119\"}.fa-meh-o:before{content:\"\\F11A\"}.fa-gamepad:before{content:\"\\F11B\"}.fa-keyboard-o:before{content:\"\\F11C\"}.fa-flag-o:before{content:\"\\F11D\"}.fa-flag-checkered:before{content:\"\\F11E\"}.fa-terminal:before{content:\"\\F120\"}.fa-code:before{content:\"\\F121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\F122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\F123\"}.fa-location-arrow:before{content:\"\\F124\"}.fa-crop:before{content:\"\\F125\"}.fa-code-fork:before{content:\"\\F126\"}.fa-unlink:before,.fa-chain-broken:before{content:\"\\F127\"}.fa-question:before{content:\"\\F128\"}.fa-info:before{content:\"\\F129\"}.fa-exclamation:before{content:\"\\F12A\"}.fa-superscript:before{content:\"\\F12B\"}.fa-subscript:before{content:\"\\F12C\"}.fa-eraser:before{content:\"\\F12D\"}.fa-puzzle-piece:before{content:\"\\F12E\"}.fa-microphone:before{content:\"\\F130\"}.fa-microphone-slash:before{content:\"\\F131\"}.fa-shield:before{content:\"\\F132\"}.fa-calendar-o:before{content:\"\\F133\"}.fa-fire-extinguisher:before{content:\"\\F134\"}.fa-rocket:before{content:\"\\F135\"}.fa-maxcdn:before{content:\"\\F136\"}.fa-chevron-circle-left:before{content:\"\\F137\"}.fa-chevron-circle-right:before{content:\"\\F138\"}.fa-chevron-circle-up:before{content:\"\\F139\"}.fa-chevron-circle-down:before{content:\"\\F13A\"}.fa-html5:before{content:\"\\F13B\"}.fa-css3:before{content:\"\\F13C\"}.fa-anchor:before{content:\"\\F13D\"}.fa-unlock-alt:before{content:\"\\F13E\"}.fa-bullseye:before{content:\"\\F140\"}.fa-ellipsis-h:before{content:\"\\F141\"}.fa-ellipsis-v:before{content:\"\\F142\"}.fa-rss-square:before{content:\"\\F143\"}.fa-play-circle:before{content:\"\\F144\"}.fa-ticket:before{content:\"\\F145\"}.fa-minus-square:before{content:\"\\F146\"}.fa-minus-square-o:before{content:\"\\F147\"}.fa-level-up:before{content:\"\\F148\"}.fa-level-down:before{content:\"\\F149\"}.fa-check-square:before{content:\"\\F14A\"}.fa-pencil-square:before{content:\"\\F14B\"}.fa-external-link-square:before{content:\"\\F14C\"}.fa-share-square:before{content:\"\\F14D\"}.fa-compass:before{content:\"\\F14E\"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:\"\\F150\"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:\"\\F151\"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:\"\\F152\"}.fa-euro:before,.fa-eur:before{content:\"\\F153\"}.fa-gbp:before{content:\"\\F154\"}.fa-dollar:before,.fa-usd:before{content:\"\\F155\"}.fa-rupee:before,.fa-inr:before{content:\"\\F156\"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\"\\F157\"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\"\\F158\"}.fa-won:before,.fa-krw:before{content:\"\\F159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\F15A\"}.fa-file:before{content:\"\\F15B\"}.fa-file-text:before{content:\"\\F15C\"}.fa-sort-alpha-asc:before{content:\"\\F15D\"}.fa-sort-alpha-desc:before{content:\"\\F15E\"}.fa-sort-amount-asc:before{content:\"\\F160\"}.fa-sort-amount-desc:before{content:\"\\F161\"}.fa-sort-numeric-asc:before{content:\"\\F162\"}.fa-sort-numeric-desc:before{content:\"\\F163\"}.fa-thumbs-up:before{content:\"\\F164\"}.fa-thumbs-down:before{content:\"\\F165\"}.fa-youtube-square:before{content:\"\\F166\"}.fa-youtube:before{content:\"\\F167\"}.fa-xing:before{content:\"\\F168\"}.fa-xing-square:before{content:\"\\F169\"}.fa-youtube-play:before{content:\"\\F16A\"}.fa-dropbox:before{content:\"\\F16B\"}.fa-stack-overflow:before{content:\"\\F16C\"}.fa-instagram:before{content:\"\\F16D\"}.fa-flickr:before{content:\"\\F16E\"}.fa-adn:before{content:\"\\F170\"}.fa-bitbucket:before{content:\"\\F171\"}.fa-bitbucket-square:before{content:\"\\F172\"}.fa-tumblr:before{content:\"\\F173\"}.fa-tumblr-square:before{content:\"\\F174\"}.fa-long-arrow-down:before{content:\"\\F175\"}.fa-long-arrow-up:before{content:\"\\F176\"}.fa-long-arrow-left:before{content:\"\\F177\"}.fa-long-arrow-right:before{content:\"\\F178\"}.fa-apple:before{content:\"\\F179\"}.fa-windows:before{content:\"\\F17A\"}.fa-android:before{content:\"\\F17B\"}.fa-linux:before{content:\"\\F17C\"}.fa-dribbble:before{content:\"\\F17D\"}.fa-skype:before{content:\"\\F17E\"}.fa-foursquare:before{content:\"\\F180\"}.fa-trello:before{content:\"\\F181\"}.fa-female:before{content:\"\\F182\"}.fa-male:before{content:\"\\F183\"}.fa-gittip:before,.fa-gratipay:before{content:\"\\F184\"}.fa-sun-o:before{content:\"\\F185\"}.fa-moon-o:before{content:\"\\F186\"}.fa-archive:before{content:\"\\F187\"}.fa-bug:before{content:\"\\F188\"}.fa-vk:before{content:\"\\F189\"}.fa-weibo:before{content:\"\\F18A\"}.fa-renren:before{content:\"\\F18B\"}.fa-pagelines:before{content:\"\\F18C\"}.fa-stack-exchange:before{content:\"\\F18D\"}.fa-arrow-circle-o-right:before{content:\"\\F18E\"}.fa-arrow-circle-o-left:before{content:\"\\F190\"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:\"\\F191\"}.fa-dot-circle-o:before{content:\"\\F192\"}.fa-wheelchair:before{content:\"\\F193\"}.fa-vimeo-square:before{content:\"\\F194\"}.fa-turkish-lira:before,.fa-try:before{content:\"\\F195\"}.fa-plus-square-o:before{content:\"\\F196\"}.fa-space-shuttle:before{content:\"\\F197\"}.fa-slack:before{content:\"\\F198\"}.fa-envelope-square:before{content:\"\\F199\"}.fa-wordpress:before{content:\"\\F19A\"}.fa-openid:before{content:\"\\F19B\"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:\"\\F19C\"}.fa-mortar-board:before,.fa-graduation-cap:before{content:\"\\F19D\"}.fa-yahoo:before{content:\"\\F19E\"}.fa-google:before{content:\"\\F1A0\"}.fa-reddit:before{content:\"\\F1A1\"}.fa-reddit-square:before{content:\"\\F1A2\"}.fa-stumbleupon-circle:before{content:\"\\F1A3\"}.fa-stumbleupon:before{content:\"\\F1A4\"}.fa-delicious:before{content:\"\\F1A5\"}.fa-digg:before{content:\"\\F1A6\"}.fa-pied-piper-pp:before{content:\"\\F1A7\"}.fa-pied-piper-alt:before{content:\"\\F1A8\"}.fa-drupal:before{content:\"\\F1A9\"}.fa-joomla:before{content:\"\\F1AA\"}.fa-language:before{content:\"\\F1AB\"}.fa-fax:before{content:\"\\F1AC\"}.fa-building:before{content:\"\\F1AD\"}.fa-child:before{content:\"\\F1AE\"}.fa-paw:before{content:\"\\F1B0\"}.fa-spoon:before{content:\"\\F1B1\"}.fa-cube:before{content:\"\\F1B2\"}.fa-cubes:before{content:\"\\F1B3\"}.fa-behance:before{content:\"\\F1B4\"}.fa-behance-square:before{content:\"\\F1B5\"}.fa-steam:before{content:\"\\F1B6\"}.fa-steam-square:before{content:\"\\F1B7\"}.fa-recycle:before{content:\"\\F1B8\"}.fa-automobile:before,.fa-car:before{content:\"\\F1B9\"}.fa-cab:before,.fa-taxi:before{content:\"\\F1BA\"}.fa-tree:before{content:\"\\F1BB\"}.fa-spotify:before{content:\"\\F1BC\"}.fa-deviantart:before{content:\"\\F1BD\"}.fa-soundcloud:before{content:\"\\F1BE\"}.fa-database:before{content:\"\\F1C0\"}.fa-file-pdf-o:before{content:\"\\F1C1\"}.fa-file-word-o:before{content:\"\\F1C2\"}.fa-file-excel-o:before{content:\"\\F1C3\"}.fa-file-powerpoint-o:before{content:\"\\F1C4\"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:\"\\F1C5\"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:\"\\F1C6\"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:\"\\F1C7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\F1C8\"}.fa-file-code-o:before{content:\"\\F1C9\"}.fa-vine:before{content:\"\\F1CA\"}.fa-codepen:before{content:\"\\F1CB\"}.fa-jsfiddle:before{content:\"\\F1CC\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:\"\\F1CD\"}.fa-circle-o-notch:before{content:\"\\F1CE\"}.fa-ra:before,.fa-resistance:before,.fa-rebel:before{content:\"\\F1D0\"}.fa-ge:before,.fa-empire:before{content:\"\\F1D1\"}.fa-git-square:before{content:\"\\F1D2\"}.fa-git:before{content:\"\\F1D3\"}.fa-y-combinator-square:before,.fa-yc-square:before,.fa-hacker-news:before{content:\"\\F1D4\"}.fa-tencent-weibo:before{content:\"\\F1D5\"}.fa-qq:before{content:\"\\F1D6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\F1D7\"}.fa-send:before,.fa-paper-plane:before{content:\"\\F1D8\"}.fa-send-o:before,.fa-paper-plane-o:before{content:\"\\F1D9\"}.fa-history:before{content:\"\\F1DA\"}.fa-circle-thin:before{content:\"\\F1DB\"}.fa-header:before{content:\"\\F1DC\"}.fa-paragraph:before{content:\"\\F1DD\"}.fa-sliders:before{content:\"\\F1DE\"}.fa-share-alt:before{content:\"\\F1E0\"}.fa-share-alt-square:before{content:\"\\F1E1\"}.fa-bomb:before{content:\"\\F1E2\"}.fa-soccer-ball-o:before,.fa-futbol-o:before{content:\"\\F1E3\"}.fa-tty:before{content:\"\\F1E4\"}.fa-binoculars:before{content:\"\\F1E5\"}.fa-plug:before{content:\"\\F1E6\"}.fa-slideshare:before{content:\"\\F1E7\"}.fa-twitch:before{content:\"\\F1E8\"}.fa-yelp:before{content:\"\\F1E9\"}.fa-newspaper-o:before{content:\"\\F1EA\"}.fa-wifi:before{content:\"\\F1EB\"}.fa-calculator:before{content:\"\\F1EC\"}.fa-paypal:before{content:\"\\F1ED\"}.fa-google-wallet:before{content:\"\\F1EE\"}.fa-cc-visa:before{content:\"\\F1F0\"}.fa-cc-mastercard:before{content:\"\\F1F1\"}.fa-cc-discover:before{content:\"\\F1F2\"}.fa-cc-amex:before{content:\"\\F1F3\"}.fa-cc-paypal:before{content:\"\\F1F4\"}.fa-cc-stripe:before{content:\"\\F1F5\"}.fa-bell-slash:before{content:\"\\F1F6\"}.fa-bell-slash-o:before{content:\"\\F1F7\"}.fa-trash:before{content:\"\\F1F8\"}.fa-copyright:before{content:\"\\F1F9\"}.fa-at:before{content:\"\\F1FA\"}.fa-eyedropper:before{content:\"\\F1FB\"}.fa-paint-brush:before{content:\"\\F1FC\"}.fa-birthday-cake:before{content:\"\\F1FD\"}.fa-area-chart:before{content:\"\\F1FE\"}.fa-pie-chart:before{content:\"\\F200\"}.fa-line-chart:before{content:\"\\F201\"}.fa-lastfm:before{content:\"\\F202\"}.fa-lastfm-square:before{content:\"\\F203\"}.fa-toggle-off:before{content:\"\\F204\"}.fa-toggle-on:before{content:\"\\F205\"}.fa-bicycle:before{content:\"\\F206\"}.fa-bus:before{content:\"\\F207\"}.fa-ioxhost:before{content:\"\\F208\"}.fa-angellist:before{content:\"\\F209\"}.fa-cc:before{content:\"\\F20A\"}.fa-shekel:before,.fa-sheqel:before,.fa-ils:before{content:\"\\F20B\"}.fa-meanpath:before{content:\"\\F20C\"}.fa-buysellads:before{content:\"\\F20D\"}.fa-connectdevelop:before{content:\"\\F20E\"}.fa-dashcube:before{content:\"\\F210\"}.fa-forumbee:before{content:\"\\F211\"}.fa-leanpub:before{content:\"\\F212\"}.fa-sellsy:before{content:\"\\F213\"}.fa-shirtsinbulk:before{content:\"\\F214\"}.fa-simplybuilt:before{content:\"\\F215\"}.fa-skyatlas:before{content:\"\\F216\"}.fa-cart-plus:before{content:\"\\F217\"}.fa-cart-arrow-down:before{content:\"\\F218\"}.fa-diamond:before{content:\"\\F219\"}.fa-ship:before{content:\"\\F21A\"}.fa-user-secret:before{content:\"\\F21B\"}.fa-motorcycle:before{content:\"\\F21C\"}.fa-street-view:before{content:\"\\F21D\"}.fa-heartbeat:before{content:\"\\F21E\"}.fa-venus:before{content:\"\\F221\"}.fa-mars:before{content:\"\\F222\"}.fa-mercury:before{content:\"\\F223\"}.fa-intersex:before,.fa-transgender:before{content:\"\\F224\"}.fa-transgender-alt:before{content:\"\\F225\"}.fa-venus-double:before{content:\"\\F226\"}.fa-mars-double:before{content:\"\\F227\"}.fa-venus-mars:before{content:\"\\F228\"}.fa-mars-stroke:before{content:\"\\F229\"}.fa-mars-stroke-v:before{content:\"\\F22A\"}.fa-mars-stroke-h:before{content:\"\\F22B\"}.fa-neuter:before{content:\"\\F22C\"}.fa-genderless:before{content:\"\\F22D\"}.fa-facebook-official:before{content:\"\\F230\"}.fa-pinterest-p:before{content:\"\\F231\"}.fa-whatsapp:before{content:\"\\F232\"}.fa-server:before{content:\"\\F233\"}.fa-user-plus:before{content:\"\\F234\"}.fa-user-times:before{content:\"\\F235\"}.fa-hotel:before,.fa-bed:before{content:\"\\F236\"}.fa-viacoin:before{content:\"\\F237\"}.fa-train:before{content:\"\\F238\"}.fa-subway:before{content:\"\\F239\"}.fa-medium:before{content:\"\\F23A\"}.fa-yc:before,.fa-y-combinator:before{content:\"\\F23B\"}.fa-optin-monster:before{content:\"\\F23C\"}.fa-opencart:before{content:\"\\F23D\"}.fa-expeditedssl:before{content:\"\\F23E\"}.fa-battery-4:before,.fa-battery-full:before{content:\"\\F240\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\"\\F241\"}.fa-battery-2:before,.fa-battery-half:before{content:\"\\F242\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\"\\F243\"}.fa-battery-0:before,.fa-battery-empty:before{content:\"\\F244\"}.fa-mouse-pointer:before{content:\"\\F245\"}.fa-i-cursor:before{content:\"\\F246\"}.fa-object-group:before{content:\"\\F247\"}.fa-object-ungroup:before{content:\"\\F248\"}.fa-sticky-note:before{content:\"\\F249\"}.fa-sticky-note-o:before{content:\"\\F24A\"}.fa-cc-jcb:before{content:\"\\F24B\"}.fa-cc-diners-club:before{content:\"\\F24C\"}.fa-clone:before{content:\"\\F24D\"}.fa-balance-scale:before{content:\"\\F24E\"}.fa-hourglass-o:before{content:\"\\F250\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\"\\F251\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\"\\F252\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\"\\F253\"}.fa-hourglass:before{content:\"\\F254\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\"\\F255\"}.fa-hand-stop-o:before,.fa-hand-paper-o:before{content:\"\\F256\"}.fa-hand-scissors-o:before{content:\"\\F257\"}.fa-hand-lizard-o:before{content:\"\\F258\"}.fa-hand-spock-o:before{content:\"\\F259\"}.fa-hand-pointer-o:before{content:\"\\F25A\"}.fa-hand-peace-o:before{content:\"\\F25B\"}.fa-trademark:before{content:\"\\F25C\"}.fa-registered:before{content:\"\\F25D\"}.fa-creative-commons:before{content:\"\\F25E\"}.fa-gg:before{content:\"\\F260\"}.fa-gg-circle:before{content:\"\\F261\"}.fa-tripadvisor:before{content:\"\\F262\"}.fa-odnoklassniki:before{content:\"\\F263\"}.fa-odnoklassniki-square:before{content:\"\\F264\"}.fa-get-pocket:before{content:\"\\F265\"}.fa-wikipedia-w:before{content:\"\\F266\"}.fa-safari:before{content:\"\\F267\"}.fa-chrome:before{content:\"\\F268\"}.fa-firefox:before{content:\"\\F269\"}.fa-opera:before{content:\"\\F26A\"}.fa-internet-explorer:before{content:\"\\F26B\"}.fa-tv:before,.fa-television:before{content:\"\\F26C\"}.fa-contao:before{content:\"\\F26D\"}.fa-500px:before{content:\"\\F26E\"}.fa-amazon:before{content:\"\\F270\"}.fa-calendar-plus-o:before{content:\"\\F271\"}.fa-calendar-minus-o:before{content:\"\\F272\"}.fa-calendar-times-o:before{content:\"\\F273\"}.fa-calendar-check-o:before{content:\"\\F274\"}.fa-industry:before{content:\"\\F275\"}.fa-map-pin:before{content:\"\\F276\"}.fa-map-signs:before{content:\"\\F277\"}.fa-map-o:before{content:\"\\F278\"}.fa-map:before{content:\"\\F279\"}.fa-commenting:before{content:\"\\F27A\"}.fa-commenting-o:before{content:\"\\F27B\"}.fa-houzz:before{content:\"\\F27C\"}.fa-vimeo:before{content:\"\\F27D\"}.fa-black-tie:before{content:\"\\F27E\"}.fa-fonticons:before{content:\"\\F280\"}.fa-reddit-alien:before{content:\"\\F281\"}.fa-edge:before{content:\"\\F282\"}.fa-credit-card-alt:before{content:\"\\F283\"}.fa-codiepie:before{content:\"\\F284\"}.fa-modx:before{content:\"\\F285\"}.fa-fort-awesome:before{content:\"\\F286\"}.fa-usb:before{content:\"\\F287\"}.fa-product-hunt:before{content:\"\\F288\"}.fa-mixcloud:before{content:\"\\F289\"}.fa-scribd:before{content:\"\\F28A\"}.fa-pause-circle:before{content:\"\\F28B\"}.fa-pause-circle-o:before{content:\"\\F28C\"}.fa-stop-circle:before{content:\"\\F28D\"}.fa-stop-circle-o:before{content:\"\\F28E\"}.fa-shopping-bag:before{content:\"\\F290\"}.fa-shopping-basket:before{content:\"\\F291\"}.fa-hashtag:before{content:\"\\F292\"}.fa-bluetooth:before{content:\"\\F293\"}.fa-bluetooth-b:before{content:\"\\F294\"}.fa-percent:before{content:\"\\F295\"}.fa-gitlab:before{content:\"\\F296\"}.fa-wpbeginner:before{content:\"\\F297\"}.fa-wpforms:before{content:\"\\F298\"}.fa-envira:before{content:\"\\F299\"}.fa-universal-access:before{content:\"\\F29A\"}.fa-wheelchair-alt:before{content:\"\\F29B\"}.fa-question-circle-o:before{content:\"\\F29C\"}.fa-blind:before{content:\"\\F29D\"}.fa-audio-description:before{content:\"\\F29E\"}.fa-volume-control-phone:before{content:\"\\F2A0\"}.fa-braille:before{content:\"\\F2A1\"}.fa-assistive-listening-systems:before{content:\"\\F2A2\"}.fa-asl-interpreting:before,.fa-american-sign-language-interpreting:before{content:\"\\F2A3\"}.fa-deafness:before,.fa-hard-of-hearing:before,.fa-deaf:before{content:\"\\F2A4\"}.fa-glide:before{content:\"\\F2A5\"}.fa-glide-g:before{content:\"\\F2A6\"}.fa-signing:before,.fa-sign-language:before{content:\"\\F2A7\"}.fa-low-vision:before{content:\"\\F2A8\"}.fa-viadeo:before{content:\"\\F2A9\"}.fa-viadeo-square:before{content:\"\\F2AA\"}.fa-snapchat:before{content:\"\\F2AB\"}.fa-snapchat-ghost:before{content:\"\\F2AC\"}.fa-snapchat-square:before{content:\"\\F2AD\"}.fa-pied-piper:before{content:\"\\F2AE\"}.fa-first-order:before{content:\"\\F2B0\"}.fa-yoast:before{content:\"\\F2B1\"}.fa-themeisle:before{content:\"\\F2B2\"}.fa-google-plus-circle:before,.fa-google-plus-official:before{content:\"\\F2B3\"}.fa-fa:before,.fa-font-awesome:before{content:\"\\F2B4\"}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}", ""]);
	
	// exports


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "25a32416abee198dd821b0b17a198a8f.eot";

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e6cf7c6ec7c2d6f670ae9d762604cb0b.woff2";

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c8ddf1e5e5bf3682bc7bebf30f394148.woff";

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "1dc35d25e61d819a9c357074014867ab.ttf";

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "d7c639084f684d66a1bc66855d193ed8.svg";

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ })
/******/ ]);
//# sourceMappingURL=bundle.js.map